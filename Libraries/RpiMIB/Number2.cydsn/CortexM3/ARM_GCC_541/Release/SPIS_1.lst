ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIS_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIS_1_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	SPIS_1_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPIS_1_Enable, %function
  25              	SPIS_1_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\SPIS_1.c"
   1:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIS_1.c **** * File Name: SPIS_1.c
   3:Generated_Source\PSoC5/SPIS_1.c **** * Version 2.70
   4:Generated_Source\PSoC5/SPIS_1.c **** *
   5:Generated_Source\PSoC5/SPIS_1.c **** * Description:
   6:Generated_Source\PSoC5/SPIS_1.c **** *  This file provides all API functionality of the SPI Slave component.
   7:Generated_Source\PSoC5/SPIS_1.c **** *
   8:Generated_Source\PSoC5/SPIS_1.c **** * Note:
   9:Generated_Source\PSoC5/SPIS_1.c **** *  None.
  10:Generated_Source\PSoC5/SPIS_1.c **** *
  11:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPIS_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPIS_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPIS_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPIS_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPIS_1.c **** 
  18:Generated_Source\PSoC5/SPIS_1.c **** #include "SPIS_1_PVT.h"
  19:Generated_Source\PSoC5/SPIS_1.c **** 
  20:Generated_Source\PSoC5/SPIS_1.c **** #if (SPIS_1_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPIS_1.c **** 
  22:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_txBuffer[SPIS_1_TX_BUFFER_SIZE];
  23:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_txBufferRead;
  24:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_txBufferWrite;
  25:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_txBufferFull;
  26:Generated_Source\PSoC5/SPIS_1.c **** 
  27:Generated_Source\PSoC5/SPIS_1.c **** #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED*/
  28:Generated_Source\PSoC5/SPIS_1.c **** 
  29:Generated_Source\PSoC5/SPIS_1.c **** #if (SPIS_1_RX_SOFTWARE_BUF_ENABLED)
  30:Generated_Source\PSoC5/SPIS_1.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 2


  31:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_rxBuffer[SPIS_1_RX_BUFFER_SIZE];
  32:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_rxBufferRead;
  33:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_rxBufferWrite;
  34:Generated_Source\PSoC5/SPIS_1.c ****     volatile uint8 SPIS_1_rxBufferFull;
  35:Generated_Source\PSoC5/SPIS_1.c **** 
  36:Generated_Source\PSoC5/SPIS_1.c **** #endif /* SPIS_1_RX_SOFTWARE_BUF_ENABLED */
  37:Generated_Source\PSoC5/SPIS_1.c **** 
  38:Generated_Source\PSoC5/SPIS_1.c **** uint8 SPIS_1_initVar = 0u;
  39:Generated_Source\PSoC5/SPIS_1.c **** 
  40:Generated_Source\PSoC5/SPIS_1.c **** volatile uint8 SPIS_1_swStatusTx;
  41:Generated_Source\PSoC5/SPIS_1.c **** volatile uint8 SPIS_1_swStatusRx;
  42:Generated_Source\PSoC5/SPIS_1.c **** 
  43:Generated_Source\PSoC5/SPIS_1.c **** 
  44:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_Init
  46:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
  47:Generated_Source\PSoC5/SPIS_1.c **** *
  48:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
  49:Generated_Source\PSoC5/SPIS_1.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:Generated_Source\PSoC5/SPIS_1.c **** *
  51:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
  52:Generated_Source\PSoC5/SPIS_1.c **** *  None.
  53:Generated_Source\PSoC5/SPIS_1.c **** *
  54:Generated_Source\PSoC5/SPIS_1.c **** * Return:
  55:Generated_Source\PSoC5/SPIS_1.c **** *  None.
  56:Generated_Source\PSoC5/SPIS_1.c **** *
  57:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
  58:Generated_Source\PSoC5/SPIS_1.c **** *  When this function is called it initializes all of the necessary parameters
  59:Generated_Source\PSoC5/SPIS_1.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:Generated_Source\PSoC5/SPIS_1.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:Generated_Source\PSoC5/SPIS_1.c **** *  clearing the FIFO and Status Register.
  62:Generated_Source\PSoC5/SPIS_1.c **** *
  63:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
  64:Generated_Source\PSoC5/SPIS_1.c **** *  No.
  65:Generated_Source\PSoC5/SPIS_1.c **** *
  66:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
  67:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_Init(void) 
  68:Generated_Source\PSoC5/SPIS_1.c **** {
  69:Generated_Source\PSoC5/SPIS_1.c ****     /*Initialize the Bit counter */
  70:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_COUNTER_PERIOD_REG = SPIS_1_BITCTR_INIT;
  71:Generated_Source\PSoC5/SPIS_1.c **** 
  72:Generated_Source\PSoC5/SPIS_1.c ****     /* ISR initialization */
  73:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_TX_INT_ENABLED)
  74:Generated_Source\PSoC5/SPIS_1.c **** 
  75:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_TX_ISR_NUMBER);
  76:Generated_Source\PSoC5/SPIS_1.c **** 
  77:Generated_Source\PSoC5/SPIS_1.c ****         /* Set the ISR to point to the SPIS_1_isr Interrupt. */
  78:Generated_Source\PSoC5/SPIS_1.c ****         (void)CyIntSetVector(SPIS_1_TX_ISR_NUMBER, &SPIS_1_TX_ISR);
  79:Generated_Source\PSoC5/SPIS_1.c **** 
  80:Generated_Source\PSoC5/SPIS_1.c ****         /* Set the priority. */
  81:Generated_Source\PSoC5/SPIS_1.c ****         CyIntSetPriority(SPIS_1_TX_ISR_NUMBER, SPIS_1_TX_ISR_PRIORITY);
  82:Generated_Source\PSoC5/SPIS_1.c **** 
  83:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
  84:Generated_Source\PSoC5/SPIS_1.c **** 
  85:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_RX_INT_ENABLED)
  86:Generated_Source\PSoC5/SPIS_1.c **** 
  87:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_RX_ISR_NUMBER);
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 3


  88:Generated_Source\PSoC5/SPIS_1.c **** 
  89:Generated_Source\PSoC5/SPIS_1.c ****         /* Set the ISR to point to the SPIS_1_isr Interrupt. */
  90:Generated_Source\PSoC5/SPIS_1.c ****         (void)CyIntSetVector(SPIS_1_RX_ISR_NUMBER, &SPIS_1_RX_ISR);
  91:Generated_Source\PSoC5/SPIS_1.c **** 
  92:Generated_Source\PSoC5/SPIS_1.c ****         /* Set the priority. */
  93:Generated_Source\PSoC5/SPIS_1.c ****         CyIntSetPriority(SPIS_1_RX_ISR_NUMBER, SPIS_1_RX_ISR_PRIORITY);
  94:Generated_Source\PSoC5/SPIS_1.c **** 
  95:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
  96:Generated_Source\PSoC5/SPIS_1.c **** 
  97:Generated_Source\PSoC5/SPIS_1.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_ClearFIFO();
  99:Generated_Source\PSoC5/SPIS_1.c **** 
 100:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_RX_SOFTWARE_BUF_ENABLED)
 101:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_rxBufferFull = 0u;
 102:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_rxBufferRead = 0u;
 103:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_rxBufferWrite = 0u;
 104:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 105:Generated_Source\PSoC5/SPIS_1.c **** 
 106:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_TX_SOFTWARE_BUF_ENABLED)
 107:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_txBufferFull = 0u;
 108:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_txBufferRead = 0u;
 109:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_txBufferWrite = 0u;
 110:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 111:Generated_Source\PSoC5/SPIS_1.c **** 
 112:Generated_Source\PSoC5/SPIS_1.c ****     (void) SPIS_1_ReadTxStatus(); /* Clear any pending status bits */
 113:Generated_Source\PSoC5/SPIS_1.c ****     (void) SPIS_1_ReadRxStatus(); /* Clear any pending status bits */
 114:Generated_Source\PSoC5/SPIS_1.c **** 
 115:Generated_Source\PSoC5/SPIS_1.c **** 
 116:Generated_Source\PSoC5/SPIS_1.c ****     /* Configure the Initial interrupt mask */
 117:Generated_Source\PSoC5/SPIS_1.c ****     #if (SPIS_1_TX_SOFTWARE_BUF_ENABLED)
 118:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_STATUS_MASK_REG  = (SPIS_1_TX_INIT_INTERRUPTS_MASK &
 119:Generated_Source\PSoC5/SPIS_1.c ****                                                 (uint8)~SPIS_1_STS_TX_FIFO_NOT_FULL);
 120:Generated_Source\PSoC5/SPIS_1.c ****     #else /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 121:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_STATUS_MASK_REG  = SPIS_1_TX_INIT_INTERRUPTS_MASK;
 122:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 123:Generated_Source\PSoC5/SPIS_1.c **** 
 124:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_RX_STATUS_MASK_REG  = SPIS_1_RX_INIT_INTERRUPTS_MASK;
 125:Generated_Source\PSoC5/SPIS_1.c **** }
 126:Generated_Source\PSoC5/SPIS_1.c **** 
 127:Generated_Source\PSoC5/SPIS_1.c **** 
 128:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 129:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_Enable
 130:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 131:Generated_Source\PSoC5/SPIS_1.c **** *
 132:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 133:Generated_Source\PSoC5/SPIS_1.c **** *  Enable SPIS component.
 134:Generated_Source\PSoC5/SPIS_1.c **** *
 135:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 136:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 137:Generated_Source\PSoC5/SPIS_1.c **** *
 138:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 139:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 140:Generated_Source\PSoC5/SPIS_1.c **** *
 141:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 142:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_Enable(void) 
 143:Generated_Source\PSoC5/SPIS_1.c **** {
  28              		.loc 1 143 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 4


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 144:Generated_Source\PSoC5/SPIS_1.c ****     uint8 enableInterrupts;
 145:Generated_Source\PSoC5/SPIS_1.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 145 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 146:Generated_Source\PSoC5/SPIS_1.c **** 
 147:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_COUNTER_CONTROL_REG |= SPIS_1_CNTR_ENABLE;
  39              		.loc 1 147 0
  40 0006 0A4A     		ldr	r2, .L2
  41 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  42 000a 43F02003 		orr	r3, r3, #32
  43 000e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_TX_STATUS_ACTL_REG |= SPIS_1_INT_ENABLE;
  44              		.loc 1 148 0
  45 0010 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
  46 0012 43F01003 		orr	r3, r3, #16
  47 0016 5371     		strb	r3, [r2, #5]
 149:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_RX_STATUS_ACTL_REG |= SPIS_1_INT_ENABLE;
  48              		.loc 1 149 0
  49 0018 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
  50 001a 43F01003 		orr	r3, r3, #16
  51 001e 9370     		strb	r3, [r2, #2]
 150:Generated_Source\PSoC5/SPIS_1.c **** 
 151:Generated_Source\PSoC5/SPIS_1.c ****     CyExitCriticalSection(enableInterrupts);
  52              		.loc 1 151 0
  53 0020 FFF7FEFF 		bl	CyExitCriticalSection
  54              	.LVL1:
 152:Generated_Source\PSoC5/SPIS_1.c **** 
 153:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_TX_INT_ENABLED)
 154:Generated_Source\PSoC5/SPIS_1.c ****         CyIntEnable(SPIS_1_TX_ISR_NUMBER);
  55              		.loc 1 154 0
  56 0024 034B     		ldr	r3, .L2+4
  57 0026 0222     		movs	r2, #2
  58 0028 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 156:Generated_Source\PSoC5/SPIS_1.c **** 
 157:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_RX_INT_ENABLED)
 158:Generated_Source\PSoC5/SPIS_1.c ****         CyIntEnable(SPIS_1_RX_ISR_NUMBER);
  59              		.loc 1 158 0
  60 002a 0122     		movs	r2, #1
  61 002c 1A60     		str	r2, [r3]
  62 002e 08BD     		pop	{r3, pc}
  63              	.L3:
  64              		.align	2
  65              	.L2:
  66 0030 92640040 		.word	1073767570
  67 0034 00E100E0 		.word	-536813312
  68              		.cfi_endproc
  69              	.LFE1:
  70              		.size	SPIS_1_Enable, .-SPIS_1_Enable
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 5


  71              		.section	.text.SPIS_1_Stop,"ax",%progbits
  72              		.align	1
  73              		.global	SPIS_1_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	SPIS_1_Stop, %function
  77              	SPIS_1_Stop:
  78              	.LFB3:
 159:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 160:Generated_Source\PSoC5/SPIS_1.c **** }
 161:Generated_Source\PSoC5/SPIS_1.c **** 
 162:Generated_Source\PSoC5/SPIS_1.c **** 
 163:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_Start
 165:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/SPIS_1.c **** *
 167:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 168:Generated_Source\PSoC5/SPIS_1.c **** *  Initialize and Enable the SPI Slave component.
 169:Generated_Source\PSoC5/SPIS_1.c **** *
 170:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 171:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 172:Generated_Source\PSoC5/SPIS_1.c **** *
 173:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 174:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 175:Generated_Source\PSoC5/SPIS_1.c **** *
 176:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 177:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_initVar - used to check initial configuration, modified on
 178:Generated_Source\PSoC5/SPIS_1.c **** *  first function call.
 179:Generated_Source\PSoC5/SPIS_1.c **** *
 180:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 181:Generated_Source\PSoC5/SPIS_1.c **** *  Enable the clock input to enable operation.
 182:Generated_Source\PSoC5/SPIS_1.c **** *
 183:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
 184:Generated_Source\PSoC5/SPIS_1.c **** *  No.
 185:Generated_Source\PSoC5/SPIS_1.c **** *
 186:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 187:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_Start(void) 
 188:Generated_Source\PSoC5/SPIS_1.c **** {
 189:Generated_Source\PSoC5/SPIS_1.c ****     if(SPIS_1_initVar == 0u)
 190:Generated_Source\PSoC5/SPIS_1.c ****     {
 191:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_Init();
 192:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_initVar = 1u;
 193:Generated_Source\PSoC5/SPIS_1.c ****     }
 194:Generated_Source\PSoC5/SPIS_1.c **** 
 195:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_Enable();
 196:Generated_Source\PSoC5/SPIS_1.c **** }
 197:Generated_Source\PSoC5/SPIS_1.c **** 
 198:Generated_Source\PSoC5/SPIS_1.c **** 
 199:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 200:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_Stop
 201:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 202:Generated_Source\PSoC5/SPIS_1.c **** *
 203:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 204:Generated_Source\PSoC5/SPIS_1.c **** *  Disable the SPI Slave component.
 205:Generated_Source\PSoC5/SPIS_1.c **** *
 206:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 207:Generated_Source\PSoC5/SPIS_1.c **** *  None.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 6


 208:Generated_Source\PSoC5/SPIS_1.c **** *
 209:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 210:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 211:Generated_Source\PSoC5/SPIS_1.c **** *
 212:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 213:Generated_Source\PSoC5/SPIS_1.c **** *  Disable the internal interrupt if one is used.
 214:Generated_Source\PSoC5/SPIS_1.c **** *
 215:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_Stop(void) 
 217:Generated_Source\PSoC5/SPIS_1.c **** {
  79              		.loc 1 217 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 08B5     		push	{r3, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 3, -8
  86              		.cfi_offset 14, -4
 218:Generated_Source\PSoC5/SPIS_1.c ****     uint8 enableInterrupts;
 219:Generated_Source\PSoC5/SPIS_1.c ****     enableInterrupts = CyEnterCriticalSection();
  87              		.loc 1 219 0
  88 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL2:
 220:Generated_Source\PSoC5/SPIS_1.c **** 
 221:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_TX_STATUS_ACTL_REG &= (uint8)~SPIS_1_INT_ENABLE;
  90              		.loc 1 221 0
  91 0006 094A     		ldr	r2, .L5
  92 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  93 000a 03F0EF03 		and	r3, r3, #239
  94 000e 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_RX_STATUS_ACTL_REG &= (uint8)~SPIS_1_INT_ENABLE;
  95              		.loc 1 222 0
  96 0010 12F8033C 		ldrb	r3, [r2, #-3]	@ zero_extendqisi2
  97 0014 03F0EF03 		and	r3, r3, #239
  98 0018 02F8033C 		strb	r3, [r2, #-3]
 223:Generated_Source\PSoC5/SPIS_1.c **** 
 224:Generated_Source\PSoC5/SPIS_1.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 224 0
 100 001c FFF7FEFF 		bl	CyExitCriticalSection
 101              	.LVL3:
 225:Generated_Source\PSoC5/SPIS_1.c **** 
 226:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_TX_INT_ENABLED)
 227:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_TX_ISR_NUMBER);
 102              		.loc 1 227 0
 103 0020 034B     		ldr	r3, .L5+4
 104 0022 0222     		movs	r2, #2
 105 0024 1A60     		str	r2, [r3]
 228:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 229:Generated_Source\PSoC5/SPIS_1.c **** 
 230:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_RX_INT_ENABLED)
 231:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_RX_ISR_NUMBER);
 106              		.loc 1 231 0
 107 0026 0122     		movs	r2, #1
 108 0028 1A60     		str	r2, [r3]
 109 002a 08BD     		pop	{r3, pc}
 110              	.L6:
 111              		.align	2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 7


 112              	.L5:
 113 002c 97640040 		.word	1073767575
 114 0030 80E100E0 		.word	-536813184
 115              		.cfi_endproc
 116              	.LFE3:
 117              		.size	SPIS_1_Stop, .-SPIS_1_Stop
 118              		.section	.text.SPIS_1_EnableTxInt,"ax",%progbits
 119              		.align	1
 120              		.global	SPIS_1_EnableTxInt
 121              		.thumb
 122              		.thumb_func
 123              		.type	SPIS_1_EnableTxInt, %function
 124              	SPIS_1_EnableTxInt:
 125              	.LFB4:
 232:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 233:Generated_Source\PSoC5/SPIS_1.c **** }
 234:Generated_Source\PSoC5/SPIS_1.c **** 
 235:Generated_Source\PSoC5/SPIS_1.c **** 
 236:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 237:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_EnableTxInt
 238:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 239:Generated_Source\PSoC5/SPIS_1.c **** *
 240:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 241:Generated_Source\PSoC5/SPIS_1.c **** *  Enable internal Tx interrupt generation.
 242:Generated_Source\PSoC5/SPIS_1.c **** *
 243:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 244:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 245:Generated_Source\PSoC5/SPIS_1.c **** *
 246:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 247:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 248:Generated_Source\PSoC5/SPIS_1.c **** *
 249:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 250:Generated_Source\PSoC5/SPIS_1.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:Generated_Source\PSoC5/SPIS_1.c **** *
 252:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 253:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_EnableTxInt(void) 
 254:Generated_Source\PSoC5/SPIS_1.c **** {
 126              		.loc 1 254 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 255:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_TX_INT_ENABLED)
 256:Generated_Source\PSoC5/SPIS_1.c ****         CyIntEnable(SPIS_1_TX_ISR_NUMBER);
 131              		.loc 1 256 0
 132 0000 014B     		ldr	r3, .L8
 133 0002 0222     		movs	r2, #2
 134 0004 1A60     		str	r2, [r3]
 135 0006 7047     		bx	lr
 136              	.L9:
 137              		.align	2
 138              	.L8:
 139 0008 00E100E0 		.word	-536813312
 140              		.cfi_endproc
 141              	.LFE4:
 142              		.size	SPIS_1_EnableTxInt, .-SPIS_1_EnableTxInt
 143              		.section	.text.SPIS_1_EnableRxInt,"ax",%progbits
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 8


 144              		.align	1
 145              		.global	SPIS_1_EnableRxInt
 146              		.thumb
 147              		.thumb_func
 148              		.type	SPIS_1_EnableRxInt, %function
 149              	SPIS_1_EnableRxInt:
 150              	.LFB5:
 257:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 258:Generated_Source\PSoC5/SPIS_1.c **** }
 259:Generated_Source\PSoC5/SPIS_1.c **** 
 260:Generated_Source\PSoC5/SPIS_1.c **** 
 261:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 262:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_EnableRxInt
 263:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 264:Generated_Source\PSoC5/SPIS_1.c **** *
 265:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 266:Generated_Source\PSoC5/SPIS_1.c **** *  Enable internal Rx interrupt generation.
 267:Generated_Source\PSoC5/SPIS_1.c **** *
 268:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 269:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 270:Generated_Source\PSoC5/SPIS_1.c **** *
 271:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 272:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 273:Generated_Source\PSoC5/SPIS_1.c **** *
 274:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 275:Generated_Source\PSoC5/SPIS_1.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:Generated_Source\PSoC5/SPIS_1.c **** *
 277:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 278:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_EnableRxInt(void) 
 279:Generated_Source\PSoC5/SPIS_1.c **** {
 151              		.loc 1 279 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 280:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_RX_INT_ENABLED)
 281:Generated_Source\PSoC5/SPIS_1.c ****         CyIntEnable(SPIS_1_RX_ISR_NUMBER);
 156              		.loc 1 281 0
 157 0000 014B     		ldr	r3, .L11
 158 0002 0122     		movs	r2, #1
 159 0004 1A60     		str	r2, [r3]
 160 0006 7047     		bx	lr
 161              	.L12:
 162              		.align	2
 163              	.L11:
 164 0008 00E100E0 		.word	-536813312
 165              		.cfi_endproc
 166              	.LFE5:
 167              		.size	SPIS_1_EnableRxInt, .-SPIS_1_EnableRxInt
 168              		.section	.text.SPIS_1_DisableTxInt,"ax",%progbits
 169              		.align	1
 170              		.global	SPIS_1_DisableTxInt
 171              		.thumb
 172              		.thumb_func
 173              		.type	SPIS_1_DisableTxInt, %function
 174              	SPIS_1_DisableTxInt:
 175              	.LFB6:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 9


 282:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 283:Generated_Source\PSoC5/SPIS_1.c **** }
 284:Generated_Source\PSoC5/SPIS_1.c **** 
 285:Generated_Source\PSoC5/SPIS_1.c **** 
 286:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 287:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_DisableTxInt
 288:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 289:Generated_Source\PSoC5/SPIS_1.c **** *
 290:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 291:Generated_Source\PSoC5/SPIS_1.c **** *  Disable internal Tx interrupt generation.
 292:Generated_Source\PSoC5/SPIS_1.c **** *
 293:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 294:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 295:Generated_Source\PSoC5/SPIS_1.c **** *
 296:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 297:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 298:Generated_Source\PSoC5/SPIS_1.c **** *
 299:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 300:Generated_Source\PSoC5/SPIS_1.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:Generated_Source\PSoC5/SPIS_1.c **** *
 302:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 303:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_DisableTxInt(void) 
 304:Generated_Source\PSoC5/SPIS_1.c **** {
 176              		.loc 1 304 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 305:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_TX_INT_ENABLED)
 306:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_TX_ISR_NUMBER);
 181              		.loc 1 306 0
 182 0000 014B     		ldr	r3, .L14
 183 0002 0222     		movs	r2, #2
 184 0004 1A60     		str	r2, [r3]
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 80E100E0 		.word	-536813184
 190              		.cfi_endproc
 191              	.LFE6:
 192              		.size	SPIS_1_DisableTxInt, .-SPIS_1_DisableTxInt
 193              		.section	.text.SPIS_1_DisableRxInt,"ax",%progbits
 194              		.align	1
 195              		.global	SPIS_1_DisableRxInt
 196              		.thumb
 197              		.thumb_func
 198              		.type	SPIS_1_DisableRxInt, %function
 199              	SPIS_1_DisableRxInt:
 200              	.LFB7:
 307:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 308:Generated_Source\PSoC5/SPIS_1.c **** }
 309:Generated_Source\PSoC5/SPIS_1.c **** 
 310:Generated_Source\PSoC5/SPIS_1.c **** 
 311:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_DisableRxInt
 313:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 10


 314:Generated_Source\PSoC5/SPIS_1.c **** *
 315:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 316:Generated_Source\PSoC5/SPIS_1.c **** *  Disable internal Rx interrupt generation.
 317:Generated_Source\PSoC5/SPIS_1.c **** *
 318:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 319:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 320:Generated_Source\PSoC5/SPIS_1.c **** *
 321:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 322:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 323:Generated_Source\PSoC5/SPIS_1.c **** *
 324:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 325:Generated_Source\PSoC5/SPIS_1.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:Generated_Source\PSoC5/SPIS_1.c **** *
 327:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_DisableRxInt(void) 
 329:Generated_Source\PSoC5/SPIS_1.c **** {
 201              		.loc 1 329 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 330:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_RX_INT_ENABLED)
 331:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_RX_ISR_NUMBER);
 206              		.loc 1 331 0
 207 0000 014B     		ldr	r3, .L17
 208 0002 0122     		movs	r2, #1
 209 0004 1A60     		str	r2, [r3]
 210 0006 7047     		bx	lr
 211              	.L18:
 212              		.align	2
 213              	.L17:
 214 0008 80E100E0 		.word	-536813184
 215              		.cfi_endproc
 216              	.LFE7:
 217              		.size	SPIS_1_DisableRxInt, .-SPIS_1_DisableRxInt
 218              		.section	.text.SPIS_1_SetTxInterruptMode,"ax",%progbits
 219              		.align	1
 220              		.global	SPIS_1_SetTxInterruptMode
 221              		.thumb
 222              		.thumb_func
 223              		.type	SPIS_1_SetTxInterruptMode, %function
 224              	SPIS_1_SetTxInterruptMode:
 225              	.LFB8:
 332:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 333:Generated_Source\PSoC5/SPIS_1.c **** }
 334:Generated_Source\PSoC5/SPIS_1.c **** 
 335:Generated_Source\PSoC5/SPIS_1.c **** 
 336:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 337:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_SetTxInterruptMode
 338:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 339:Generated_Source\PSoC5/SPIS_1.c **** *
 340:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 341:Generated_Source\PSoC5/SPIS_1.c **** *  Configure which status bits trigger an interrupt event.
 342:Generated_Source\PSoC5/SPIS_1.c **** *
 343:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 344:Generated_Source\PSoC5/SPIS_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:Generated_Source\PSoC5/SPIS_1.c **** *  header file).
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 11


 346:Generated_Source\PSoC5/SPIS_1.c **** *
 347:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 348:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 349:Generated_Source\PSoC5/SPIS_1.c **** *
 350:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 351:Generated_Source\PSoC5/SPIS_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:Generated_Source\PSoC5/SPIS_1.c **** *
 353:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 354:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_SetTxInterruptMode(uint8 intSrc) 
 355:Generated_Source\PSoC5/SPIS_1.c **** {
 226              		.loc 1 355 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231              	.LVL4:
 356:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_TX_STATUS_MASK_REG  = intSrc;
 232              		.loc 1 356 0
 233 0000 014B     		ldr	r3, .L20
 234 0002 1870     		strb	r0, [r3]
 235 0004 7047     		bx	lr
 236              	.L21:
 237 0006 00BF     		.align	2
 238              	.L20:
 239 0008 87640040 		.word	1073767559
 240              		.cfi_endproc
 241              	.LFE8:
 242              		.size	SPIS_1_SetTxInterruptMode, .-SPIS_1_SetTxInterruptMode
 243              		.section	.text.SPIS_1_SetRxInterruptMode,"ax",%progbits
 244              		.align	1
 245              		.global	SPIS_1_SetRxInterruptMode
 246              		.thumb
 247              		.thumb_func
 248              		.type	SPIS_1_SetRxInterruptMode, %function
 249              	SPIS_1_SetRxInterruptMode:
 250              	.LFB9:
 357:Generated_Source\PSoC5/SPIS_1.c **** }
 358:Generated_Source\PSoC5/SPIS_1.c **** 
 359:Generated_Source\PSoC5/SPIS_1.c **** 
 360:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 361:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_SetRxInterruptMode
 362:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 363:Generated_Source\PSoC5/SPIS_1.c **** *
 364:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 365:Generated_Source\PSoC5/SPIS_1.c **** *  Configure which status bits trigger an interrupt event.
 366:Generated_Source\PSoC5/SPIS_1.c **** *
 367:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 368:Generated_Source\PSoC5/SPIS_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:Generated_Source\PSoC5/SPIS_1.c **** *  header file).
 370:Generated_Source\PSoC5/SPIS_1.c **** *
 371:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 372:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 373:Generated_Source\PSoC5/SPIS_1.c **** *
 374:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 375:Generated_Source\PSoC5/SPIS_1.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:Generated_Source\PSoC5/SPIS_1.c **** *
 377:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 12


 378:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_SetRxInterruptMode(uint8 intSrc) 
 379:Generated_Source\PSoC5/SPIS_1.c **** {
 251              		.loc 1 379 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256              	.LVL5:
 380:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_RX_STATUS_MASK_REG  = intSrc;
 257              		.loc 1 380 0
 258 0000 014B     		ldr	r3, .L23
 259 0002 1870     		strb	r0, [r3]
 260 0004 7047     		bx	lr
 261              	.L24:
 262 0006 00BF     		.align	2
 263              	.L23:
 264 0008 84640040 		.word	1073767556
 265              		.cfi_endproc
 266              	.LFE9:
 267              		.size	SPIS_1_SetRxInterruptMode, .-SPIS_1_SetRxInterruptMode
 268              		.section	.text.SPIS_1_ReadTxStatus,"ax",%progbits
 269              		.align	1
 270              		.global	SPIS_1_ReadTxStatus
 271              		.thumb
 272              		.thumb_func
 273              		.type	SPIS_1_ReadTxStatus, %function
 274              	SPIS_1_ReadTxStatus:
 275              	.LFB10:
 381:Generated_Source\PSoC5/SPIS_1.c **** }
 382:Generated_Source\PSoC5/SPIS_1.c **** 
 383:Generated_Source\PSoC5/SPIS_1.c **** 
 384:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 385:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_ReadTxStatus
 386:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 387:Generated_Source\PSoC5/SPIS_1.c **** *
 388:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 389:Generated_Source\PSoC5/SPIS_1.c **** *  Read the Tx status register for the component.
 390:Generated_Source\PSoC5/SPIS_1.c **** *
 391:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 392:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 393:Generated_Source\PSoC5/SPIS_1.c **** *
 394:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 395:Generated_Source\PSoC5/SPIS_1.c **** *  Contents of the Tx status register.
 396:Generated_Source\PSoC5/SPIS_1.c **** *
 397:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 398:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_swStatusTx - used to store in software status register,
 399:Generated_Source\PSoC5/SPIS_1.c **** *  modified every function call - resets to zero.
 400:Generated_Source\PSoC5/SPIS_1.c **** *
 401:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 402:Generated_Source\PSoC5/SPIS_1.c **** *  Allows the user and the API to read the Tx status register for error
 403:Generated_Source\PSoC5/SPIS_1.c **** *  detection and flow control.
 404:Generated_Source\PSoC5/SPIS_1.c **** *
 405:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
 406:Generated_Source\PSoC5/SPIS_1.c **** *  Clear Tx status register of the component.
 407:Generated_Source\PSoC5/SPIS_1.c **** *
 408:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
 409:Generated_Source\PSoC5/SPIS_1.c **** *  No.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 13


 410:Generated_Source\PSoC5/SPIS_1.c **** *
 411:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 412:Generated_Source\PSoC5/SPIS_1.c **** uint8 SPIS_1_ReadTxStatus(void) 
 413:Generated_Source\PSoC5/SPIS_1.c **** {
 276              		.loc 1 413 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 10B5     		push	{r4, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
 284              	.LBB34:
 285              	.LBB35:
 306:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 286              		.loc 1 306 0
 287 0002 074B     		ldr	r3, .L26
 288 0004 0222     		movs	r2, #2
 289 0006 1A60     		str	r2, [r3]
 290              	.LBE35:
 291              	.LBE34:
 414:Generated_Source\PSoC5/SPIS_1.c ****     uint8 tmpStatus;
 415:Generated_Source\PSoC5/SPIS_1.c **** 
 416:Generated_Source\PSoC5/SPIS_1.c ****     #if (SPIS_1_TX_SOFTWARE_BUF_ENABLED)
 417:Generated_Source\PSoC5/SPIS_1.c **** 
 418:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableTxInt();
 419:Generated_Source\PSoC5/SPIS_1.c **** 
 420:Generated_Source\PSoC5/SPIS_1.c ****         tmpStatus = SPIS_1_GET_STATUS_TX(SPIS_1_swStatusTx);
 292              		.loc 1 420 0
 293 0008 0649     		ldr	r1, .L26+4
 294 000a 074B     		ldr	r3, .L26+8
 421:Generated_Source\PSoC5/SPIS_1.c **** 
 422:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_swStatusTx = 0u;
 295              		.loc 1 422 0
 296 000c 0024     		movs	r4, #0
 420:Generated_Source\PSoC5/SPIS_1.c **** 
 297              		.loc 1 420 0
 298 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 299 0010 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 300              	.LVL6:
 301              		.loc 1 422 0
 302 0012 0C70     		strb	r4, [r1]
 303              	.LBB36:
 304              	.LBB37:
 256:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 305              		.loc 1 256 0
 306 0014 0549     		ldr	r1, .L26+12
 307              	.LBE37:
 308              	.LBE36:
 423:Generated_Source\PSoC5/SPIS_1.c **** 
 424:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable Interrupts */
 425:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableTxInt();
 426:Generated_Source\PSoC5/SPIS_1.c **** 
 427:Generated_Source\PSoC5/SPIS_1.c ****     #else /* !SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 428:Generated_Source\PSoC5/SPIS_1.c **** 
 429:Generated_Source\PSoC5/SPIS_1.c ****         tmpStatus = SPIS_1_TX_STATUS_REG;
 430:Generated_Source\PSoC5/SPIS_1.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 14


 431:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 432:Generated_Source\PSoC5/SPIS_1.c **** 
 433:Generated_Source\PSoC5/SPIS_1.c ****     return(tmpStatus);
 309              		.loc 1 433 0
 310 0016 03F06103 		and	r3, r3, #97
 311              	.LVL7:
 312              	.LBB39:
 313              	.LBB38:
 256:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 314              		.loc 1 256 0
 315 001a 0A60     		str	r2, [r1]
 316              	.LBE38:
 317              	.LBE39:
 434:Generated_Source\PSoC5/SPIS_1.c **** }
 318              		.loc 1 434 0
 319 001c 1843     		orrs	r0, r0, r3
 320 001e 10BD     		pop	{r4, pc}
 321              	.L27:
 322              		.align	2
 323              	.L26:
 324 0020 80E100E0 		.word	-536813184
 325 0024 00000000 		.word	SPIS_1_swStatusTx
 326 0028 67640040 		.word	1073767527
 327 002c 00E100E0 		.word	-536813312
 328              		.cfi_endproc
 329              	.LFE10:
 330              		.size	SPIS_1_ReadTxStatus, .-SPIS_1_ReadTxStatus
 331              		.section	.text.SPIS_1_ReadRxStatus,"ax",%progbits
 332              		.align	1
 333              		.global	SPIS_1_ReadRxStatus
 334              		.thumb
 335              		.thumb_func
 336              		.type	SPIS_1_ReadRxStatus, %function
 337              	SPIS_1_ReadRxStatus:
 338              	.LFB11:
 435:Generated_Source\PSoC5/SPIS_1.c **** 
 436:Generated_Source\PSoC5/SPIS_1.c **** 
 437:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 438:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_ReadRxStatus
 439:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 440:Generated_Source\PSoC5/SPIS_1.c **** *
 441:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 442:Generated_Source\PSoC5/SPIS_1.c **** *  Read the Rx status register for the component.
 443:Generated_Source\PSoC5/SPIS_1.c **** *
 444:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 445:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 446:Generated_Source\PSoC5/SPIS_1.c **** *
 447:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 448:Generated_Source\PSoC5/SPIS_1.c **** *  Contents of the Rx status register.
 449:Generated_Source\PSoC5/SPIS_1.c **** *
 450:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 451:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_swStatusRx - used to store in software Rx status register,
 452:Generated_Source\PSoC5/SPIS_1.c **** *  modified every function call - resets to zero.
 453:Generated_Source\PSoC5/SPIS_1.c **** *
 454:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 455:Generated_Source\PSoC5/SPIS_1.c **** *  Allows the user and the API to read the Rx status register for error
 456:Generated_Source\PSoC5/SPIS_1.c **** *  detection and flow control.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 15


 457:Generated_Source\PSoC5/SPIS_1.c **** *
 458:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
 459:Generated_Source\PSoC5/SPIS_1.c **** *  Clear Rx status register of the component.
 460:Generated_Source\PSoC5/SPIS_1.c **** *
 461:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
 462:Generated_Source\PSoC5/SPIS_1.c **** *  No.
 463:Generated_Source\PSoC5/SPIS_1.c **** *
 464:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/SPIS_1.c **** uint8 SPIS_1_ReadRxStatus(void) 
 466:Generated_Source\PSoC5/SPIS_1.c **** {
 339              		.loc 1 466 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343 0000 10B5     		push	{r4, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 4, -8
 346              		.cfi_offset 14, -4
 347              	.LBB40:
 348              	.LBB41:
 331:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 349              		.loc 1 331 0
 350 0002 074B     		ldr	r3, .L29
 351 0004 0122     		movs	r2, #1
 352 0006 1A60     		str	r2, [r3]
 353              	.LBE41:
 354              	.LBE40:
 467:Generated_Source\PSoC5/SPIS_1.c ****     uint8 tmpStatus;
 468:Generated_Source\PSoC5/SPIS_1.c **** 
 469:Generated_Source\PSoC5/SPIS_1.c ****     #if (SPIS_1_RX_SOFTWARE_BUF_ENABLED)
 470:Generated_Source\PSoC5/SPIS_1.c **** 
 471:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableRxInt();
 472:Generated_Source\PSoC5/SPIS_1.c **** 
 473:Generated_Source\PSoC5/SPIS_1.c ****         tmpStatus = SPIS_1_GET_STATUS_RX(SPIS_1_swStatusRx);
 355              		.loc 1 473 0
 356 0008 0649     		ldr	r1, .L29+4
 357 000a 074B     		ldr	r3, .L29+8
 474:Generated_Source\PSoC5/SPIS_1.c **** 
 475:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_swStatusRx = 0u;
 358              		.loc 1 475 0
 359 000c 0024     		movs	r4, #0
 473:Generated_Source\PSoC5/SPIS_1.c **** 
 360              		.loc 1 473 0
 361 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 362 0010 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 363              	.LVL8:
 364              		.loc 1 475 0
 365 0012 0C70     		strb	r4, [r1]
 366              	.LBB42:
 367              	.LBB43:
 281:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 368              		.loc 1 281 0
 369 0014 0549     		ldr	r1, .L29+12
 370              	.LBE43:
 371              	.LBE42:
 476:Generated_Source\PSoC5/SPIS_1.c **** 
 477:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable Interrupts */
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 16


 478:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableRxInt();
 479:Generated_Source\PSoC5/SPIS_1.c **** 
 480:Generated_Source\PSoC5/SPIS_1.c ****     #else /* !SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 481:Generated_Source\PSoC5/SPIS_1.c **** 
 482:Generated_Source\PSoC5/SPIS_1.c ****         tmpStatus = SPIS_1_RX_STATUS_REG;
 483:Generated_Source\PSoC5/SPIS_1.c **** 
 484:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 485:Generated_Source\PSoC5/SPIS_1.c **** 
 486:Generated_Source\PSoC5/SPIS_1.c ****     return(tmpStatus);
 372              		.loc 1 486 0
 373 0016 03F06103 		and	r3, r3, #97
 374              	.LVL9:
 375              	.LBB45:
 376              	.LBB44:
 281:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 377              		.loc 1 281 0
 378 001a 0A60     		str	r2, [r1]
 379              	.LBE44:
 380              	.LBE45:
 487:Generated_Source\PSoC5/SPIS_1.c **** }
 381              		.loc 1 487 0
 382 001c 1843     		orrs	r0, r0, r3
 383 001e 10BD     		pop	{r4, pc}
 384              	.L30:
 385              		.align	2
 386              	.L29:
 387 0020 80E100E0 		.word	-536813184
 388 0024 00000000 		.word	SPIS_1_swStatusRx
 389 0028 64640040 		.word	1073767524
 390 002c 00E100E0 		.word	-536813312
 391              		.cfi_endproc
 392              	.LFE11:
 393              		.size	SPIS_1_ReadRxStatus, .-SPIS_1_ReadRxStatus
 394              		.section	.text.SPIS_1_WriteTxData,"ax",%progbits
 395              		.align	1
 396              		.global	SPIS_1_WriteTxData
 397              		.thumb
 398              		.thumb_func
 399              		.type	SPIS_1_WriteTxData, %function
 400              	SPIS_1_WriteTxData:
 401              	.LFB12:
 488:Generated_Source\PSoC5/SPIS_1.c **** 
 489:Generated_Source\PSoC5/SPIS_1.c **** 
 490:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 491:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_WriteTxData
 492:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 493:Generated_Source\PSoC5/SPIS_1.c **** *
 494:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 495:Generated_Source\PSoC5/SPIS_1.c **** *  Write a byte of data to be sent across the SPI.
 496:Generated_Source\PSoC5/SPIS_1.c **** *
 497:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 498:Generated_Source\PSoC5/SPIS_1.c **** *  txDataByte: The data value to send across the SPI.
 499:Generated_Source\PSoC5/SPIS_1.c **** *
 500:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 501:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 502:Generated_Source\PSoC5/SPIS_1.c **** *
 503:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 17


 504:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_txBufferWrite - used for the account of the bytes which
 505:Generated_Source\PSoC5/SPIS_1.c **** *  have been written down in the TX software buffer, modified every function
 506:Generated_Source\PSoC5/SPIS_1.c **** *  call if TX Software Buffer is used.
 507:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_txBufferRead - used for the account of the bytes which
 508:Generated_Source\PSoC5/SPIS_1.c **** *  have been read from the TX software buffer.
 509:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_txBuffer[SPIS_1_TX_BUFFER_SIZE] - used to store
 510:Generated_Source\PSoC5/SPIS_1.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:Generated_Source\PSoC5/SPIS_1.c **** *
 512:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 513:Generated_Source\PSoC5/SPIS_1.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:Generated_Source\PSoC5/SPIS_1.c **** *
 515:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
 516:Generated_Source\PSoC5/SPIS_1.c **** *  If this function is called again before the previous byte is finished then
 517:Generated_Source\PSoC5/SPIS_1.c **** *  the next byte will be appended to the transfer with no time between
 518:Generated_Source\PSoC5/SPIS_1.c **** *  the byte transfers. Clear Tx status register of the component.
 519:Generated_Source\PSoC5/SPIS_1.c **** *
 520:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
 521:Generated_Source\PSoC5/SPIS_1.c **** *  No.
 522:Generated_Source\PSoC5/SPIS_1.c **** *
 523:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 524:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_WriteTxData(uint8 txData) 
 525:Generated_Source\PSoC5/SPIS_1.c **** {
 402              		.loc 1 525 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LVL10:
 407 0000 70B5     		push	{r4, r5, r6, lr}
 408              		.cfi_def_cfa_offset 16
 409              		.cfi_offset 4, -16
 410              		.cfi_offset 5, -12
 411              		.cfi_offset 6, -8
 412              		.cfi_offset 14, -4
 526:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_TX_SOFTWARE_BUF_ENABLED)
 527:Generated_Source\PSoC5/SPIS_1.c **** 
 528:Generated_Source\PSoC5/SPIS_1.c ****         uint8 tempStatus;
 529:Generated_Source\PSoC5/SPIS_1.c ****         uint8 tmpTxBufferRead;
 530:Generated_Source\PSoC5/SPIS_1.c **** 
 531:Generated_Source\PSoC5/SPIS_1.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:Generated_Source\PSoC5/SPIS_1.c ****         do
 533:Generated_Source\PSoC5/SPIS_1.c ****         {
 534:Generated_Source\PSoC5/SPIS_1.c ****             tmpTxBufferRead = SPIS_1_txBufferRead;
 535:Generated_Source\PSoC5/SPIS_1.c ****             if (0u == tmpTxBufferRead)
 536:Generated_Source\PSoC5/SPIS_1.c ****             {
 537:Generated_Source\PSoC5/SPIS_1.c ****                 tmpTxBufferRead = SPIS_1_TX_BUFFER_SIZE - 1u;
 538:Generated_Source\PSoC5/SPIS_1.c ****             }
 539:Generated_Source\PSoC5/SPIS_1.c ****             else
 540:Generated_Source\PSoC5/SPIS_1.c ****             {
 541:Generated_Source\PSoC5/SPIS_1.c ****                 tmpTxBufferRead--;
 542:Generated_Source\PSoC5/SPIS_1.c ****             }
 543:Generated_Source\PSoC5/SPIS_1.c **** 
 544:Generated_Source\PSoC5/SPIS_1.c ****         }
 545:Generated_Source\PSoC5/SPIS_1.c ****         while(tmpTxBufferRead == SPIS_1_txBufferWrite);
 413              		.loc 1 545 0
 414 0002 2649     		ldr	r1, .L45
 534:Generated_Source\PSoC5/SPIS_1.c ****             if (0u == tmpTxBufferRead)
 415              		.loc 1 534 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 18


 416 0004 264E     		ldr	r6, .L45+4
 417              	.L33:
 418 0006 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 419              	.LVL11:
 420 0008 254C     		ldr	r4, .L45+4
 535:Generated_Source\PSoC5/SPIS_1.c ****             {
 421              		.loc 1 535 0
 422 000a 02F0FF03 		and	r3, r2, #255
 423 000e 12B1     		cbz	r2, .L39
 541:Generated_Source\PSoC5/SPIS_1.c ****             }
 424              		.loc 1 541 0
 425 0010 013B     		subs	r3, r3, #1
 426 0012 DBB2     		uxtb	r3, r3
 427              	.LVL12:
 428 0014 00E0     		b	.L32
 429              	.LVL13:
 430              	.L39:
 537:Generated_Source\PSoC5/SPIS_1.c ****             }
 431              		.loc 1 537 0
 432 0016 0723     		movs	r3, #7
 433              	.LVL14:
 434              	.L32:
 435              		.loc 1 545 0
 436 0018 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 437 001a 204D     		ldr	r5, .L45
 438 001c 9342     		cmp	r3, r2
 439 001e 2B46     		mov	r3, r5
 440              	.LVL15:
 441 0020 F1D0     		beq	.L33
 442              	.LBB46:
 443              	.LBB47:
 306:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 444              		.loc 1 306 0
 445 0022 204A     		ldr	r2, .L45+8
 446 0024 0221     		movs	r1, #2
 447 0026 1160     		str	r1, [r2]
 448              	.LBE47:
 449              	.LBE46:
 546:Generated_Source\PSoC5/SPIS_1.c **** 
 547:Generated_Source\PSoC5/SPIS_1.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableTxInt();
 549:Generated_Source\PSoC5/SPIS_1.c **** 
 550:Generated_Source\PSoC5/SPIS_1.c ****         tempStatus = SPIS_1_GET_STATUS_TX(SPIS_1_swStatusTx);
 450              		.loc 1 550 0
 451 0028 1F4A     		ldr	r2, .L45+12
 452 002a 2049     		ldr	r1, .L45+16
 453 002c 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 454 002e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 455 0030 02F06102 		and	r2, r2, #97
 456 0034 3243     		orrs	r2, r2, r6
 457              	.LVL16:
 551:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_swStatusTx = tempStatus;
 458              		.loc 1 551 0
 459 0036 0A70     		strb	r2, [r1]
 552:Generated_Source\PSoC5/SPIS_1.c **** 
 553:Generated_Source\PSoC5/SPIS_1.c ****         if((SPIS_1_txBufferRead == SPIS_1_txBufferWrite) &&
 460              		.loc 1 553 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 19


 461 0038 2678     		ldrb	r6, [r4]	@ zero_extendqisi2
 462 003a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 463              	.LVL17:
 464 003c 9642     		cmp	r6, r2
 465 003e 05D1     		bne	.L34
 554:Generated_Source\PSoC5/SPIS_1.c ****             (0u != (SPIS_1_swStatusTx & SPIS_1_STS_TX_FIFO_NOT_FULL)))
 466              		.loc 1 554 0 discriminator 1
 467 0040 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 553:Generated_Source\PSoC5/SPIS_1.c ****             (0u != (SPIS_1_swStatusTx & SPIS_1_STS_TX_FIFO_NOT_FULL)))
 468              		.loc 1 553 0 discriminator 1
 469 0042 9207     		lsls	r2, r2, #30
 470 0044 02D5     		bpl	.L34
 555:Generated_Source\PSoC5/SPIS_1.c ****         {
 556:Generated_Source\PSoC5/SPIS_1.c ****             /* Put data element into the TX FIFO */
 557:Generated_Source\PSoC5/SPIS_1.c ****             CY_SET_REG8(SPIS_1_TXDATA_PTR, txData);
 471              		.loc 1 557 0
 472 0046 1A4B     		ldr	r3, .L45+20
 473 0048 1870     		strb	r0, [r3]
 474              	.LVL18:
 475 004a 23E0     		b	.L35
 476              	.LVL19:
 477              	.L34:
 558:Generated_Source\PSoC5/SPIS_1.c ****         }
 559:Generated_Source\PSoC5/SPIS_1.c ****         else
 560:Generated_Source\PSoC5/SPIS_1.c ****         {
 561:Generated_Source\PSoC5/SPIS_1.c ****             /* Put data element into the software buffer */
 562:Generated_Source\PSoC5/SPIS_1.c ****             SPIS_1_txBufferWrite++;
 478              		.loc 1 562 0
 479 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 480 004e 0132     		adds	r2, r2, #1
 481 0050 D2B2     		uxtb	r2, r2
 482 0052 1A70     		strb	r2, [r3]
 483              	.LVL20:
 563:Generated_Source\PSoC5/SPIS_1.c ****             if(SPIS_1_txBufferWrite >= SPIS_1_TX_BUFFER_SIZE)
 484              		.loc 1 563 0
 485 0054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 486 0056 072A     		cmp	r2, #7
 564:Generated_Source\PSoC5/SPIS_1.c ****             {
 565:Generated_Source\PSoC5/SPIS_1.c ****                 SPIS_1_txBufferWrite = 0u;
 487              		.loc 1 565 0
 488 0058 82BF     		ittt	hi
 489 005a 104A     		ldrhi	r2, .L45
 490 005c 0021     		movhi	r1, #0
 491 005e 1170     		strbhi	r1, [r2]
 566:Generated_Source\PSoC5/SPIS_1.c ****             }
 567:Generated_Source\PSoC5/SPIS_1.c **** 
 568:Generated_Source\PSoC5/SPIS_1.c ****             if(SPIS_1_txBufferWrite == SPIS_1_txBufferRead)
 492              		.loc 1 568 0
 493 0060 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 494 0062 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 495 0064 0E49     		ldr	r1, .L45+4
 496 0066 9542     		cmp	r5, r2
 497 0068 0BD1     		bne	.L37
 569:Generated_Source\PSoC5/SPIS_1.c ****             {
 570:Generated_Source\PSoC5/SPIS_1.c ****                 SPIS_1_txBufferRead++;
 498              		.loc 1 570 0
 499 006a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 20


 500 006c 0132     		adds	r2, r2, #1
 501 006e D2B2     		uxtb	r2, r2
 502 0070 0A70     		strb	r2, [r1]
 571:Generated_Source\PSoC5/SPIS_1.c ****                 if(SPIS_1_txBufferRead >= SPIS_1_RX_BUFFER_SIZE)
 503              		.loc 1 571 0
 504 0072 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 505 0074 072A     		cmp	r2, #7
 572:Generated_Source\PSoC5/SPIS_1.c ****                 {
 573:Generated_Source\PSoC5/SPIS_1.c ****                     SPIS_1_txBufferRead = 0u;
 506              		.loc 1 573 0
 507 0076 84BF     		itt	hi
 508 0078 0022     		movhi	r2, #0
 509 007a 0A70     		strbhi	r2, [r1]
 574:Generated_Source\PSoC5/SPIS_1.c ****                 }
 575:Generated_Source\PSoC5/SPIS_1.c ****                 SPIS_1_txBufferFull = 1u;
 510              		.loc 1 575 0
 511 007c 0D4A     		ldr	r2, .L45+24
 512 007e 0121     		movs	r1, #1
 513 0080 1170     		strb	r1, [r2]
 514              	.L37:
 576:Generated_Source\PSoC5/SPIS_1.c ****             }
 577:Generated_Source\PSoC5/SPIS_1.c **** 
 578:Generated_Source\PSoC5/SPIS_1.c ****             SPIS_1_txBuffer[SPIS_1_txBufferWrite] = txData;
 515              		.loc 1 578 0
 516 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517 0084 0C4A     		ldr	r2, .L45+28
 518 0086 DBB2     		uxtb	r3, r3
 519 0088 D054     		strb	r0, [r2, r3]
 579:Generated_Source\PSoC5/SPIS_1.c **** 
 580:Generated_Source\PSoC5/SPIS_1.c ****             SPIS_1_TX_STATUS_MASK_REG |= SPIS_1_STS_TX_FIFO_NOT_FULL;
 520              		.loc 1 580 0
 521 008a 0C4A     		ldr	r2, .L45+32
 522 008c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 523 008e 43F00203 		orr	r3, r3, #2
 524 0092 1370     		strb	r3, [r2]
 525              	.L35:
 526              	.LBB48:
 527              	.LBB49:
 256:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 528              		.loc 1 256 0
 529 0094 0A4B     		ldr	r3, .L45+36
 530 0096 0222     		movs	r2, #2
 531 0098 1A60     		str	r2, [r3]
 532 009a 70BD     		pop	{r4, r5, r6, pc}
 533              	.L46:
 534              		.align	2
 535              	.L45:
 536 009c 00000000 		.word	SPIS_1_txBufferWrite
 537 00a0 00000000 		.word	SPIS_1_txBufferRead
 538 00a4 80E100E0 		.word	-536813184
 539 00a8 67640040 		.word	1073767527
 540 00ac 00000000 		.word	SPIS_1_swStatusTx
 541 00b0 42640040 		.word	1073767490
 542 00b4 00000000 		.word	SPIS_1_txBufferFull
 543 00b8 00000000 		.word	SPIS_1_txBuffer
 544 00bc 87640040 		.word	1073767559
 545 00c0 00E100E0 		.word	-536813312
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 21


 546              	.LBE49:
 547              	.LBE48:
 548              		.cfi_endproc
 549              	.LFE12:
 550              		.size	SPIS_1_WriteTxData, .-SPIS_1_WriteTxData
 551              		.section	.text.SPIS_1_WriteTxDataZero,"ax",%progbits
 552              		.align	1
 553              		.global	SPIS_1_WriteTxDataZero
 554              		.thumb
 555              		.thumb_func
 556              		.type	SPIS_1_WriteTxDataZero, %function
 557              	SPIS_1_WriteTxDataZero:
 558              	.LFB13:
 581:Generated_Source\PSoC5/SPIS_1.c ****         }
 582:Generated_Source\PSoC5/SPIS_1.c **** 
 583:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable Interrupt. */
 584:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableTxInt();
 585:Generated_Source\PSoC5/SPIS_1.c **** 
 586:Generated_Source\PSoC5/SPIS_1.c ****     #else /* !SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 587:Generated_Source\PSoC5/SPIS_1.c ****         /* Wait until TX FIFO has a place */
 588:Generated_Source\PSoC5/SPIS_1.c ****         while(0u == (SPIS_1_TX_STATUS_REG & SPIS_1_STS_TX_FIFO_NOT_FULL))
 589:Generated_Source\PSoC5/SPIS_1.c ****         {
 590:Generated_Source\PSoC5/SPIS_1.c ****         }
 591:Generated_Source\PSoC5/SPIS_1.c **** 
 592:Generated_Source\PSoC5/SPIS_1.c ****         /* Put data element into the TX FIFO */
 593:Generated_Source\PSoC5/SPIS_1.c ****         CY_SET_REG8(SPIS_1_TXDATA_PTR, txData);
 594:Generated_Source\PSoC5/SPIS_1.c ****         
 595:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 596:Generated_Source\PSoC5/SPIS_1.c **** }
 597:Generated_Source\PSoC5/SPIS_1.c **** 
 598:Generated_Source\PSoC5/SPIS_1.c **** #if(SPIS_1_MODE_USE_ZERO != 0u)
 599:Generated_Source\PSoC5/SPIS_1.c **** 
 600:Generated_Source\PSoC5/SPIS_1.c ****     /*******************************************************************************
 601:Generated_Source\PSoC5/SPIS_1.c ****     * Function Name: SPIS_1_WriteTxDataZero
 602:Generated_Source\PSoC5/SPIS_1.c ****     ********************************************************************************
 603:Generated_Source\PSoC5/SPIS_1.c ****     *
 604:Generated_Source\PSoC5/SPIS_1.c ****     * Summary:
 605:Generated_Source\PSoC5/SPIS_1.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:Generated_Source\PSoC5/SPIS_1.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:Generated_Source\PSoC5/SPIS_1.c ****     *
 608:Generated_Source\PSoC5/SPIS_1.c ****     * Parameters:
 609:Generated_Source\PSoC5/SPIS_1.c ****     *  txDataByte: The data value to send across the SPI.
 610:Generated_Source\PSoC5/SPIS_1.c ****     *
 611:Generated_Source\PSoC5/SPIS_1.c ****     * Return:
 612:Generated_Source\PSoC5/SPIS_1.c ****     *  None.
 613:Generated_Source\PSoC5/SPIS_1.c ****     *
 614:Generated_Source\PSoC5/SPIS_1.c ****     * Theory:
 615:Generated_Source\PSoC5/SPIS_1.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:Generated_Source\PSoC5/SPIS_1.c ****     *  status register of the component.
 617:Generated_Source\PSoC5/SPIS_1.c ****     *
 618:Generated_Source\PSoC5/SPIS_1.c ****     *******************************************************************************/
 619:Generated_Source\PSoC5/SPIS_1.c ****     void SPIS_1_WriteTxDataZero(uint8 txDataByte)
 620:Generated_Source\PSoC5/SPIS_1.c ****                                         
 621:Generated_Source\PSoC5/SPIS_1.c ****     {
 559              		.loc 1 621 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 22


 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564              	.LVL21:
 622:Generated_Source\PSoC5/SPIS_1.c ****         CY_SET_REG8(SPIS_1_TXDATA_ZERO_PTR, txDataByte);
 565              		.loc 1 622 0
 566 0000 014B     		ldr	r3, .L48
 567 0002 1870     		strb	r0, [r3]
 568 0004 7047     		bx	lr
 569              	.L49:
 570 0006 00BF     		.align	2
 571              	.L48:
 572 0008 02640040 		.word	1073767426
 573              		.cfi_endproc
 574              	.LFE13:
 575              		.size	SPIS_1_WriteTxDataZero, .-SPIS_1_WriteTxDataZero
 576              		.section	.text.SPIS_1_ReadRxData,"ax",%progbits
 577              		.align	1
 578              		.global	SPIS_1_ReadRxData
 579              		.thumb
 580              		.thumb_func
 581              		.type	SPIS_1_ReadRxData, %function
 582              	SPIS_1_ReadRxData:
 583              	.LFB14:
 623:Generated_Source\PSoC5/SPIS_1.c ****     }
 624:Generated_Source\PSoC5/SPIS_1.c **** 
 625:Generated_Source\PSoC5/SPIS_1.c **** #endif /* (SPIS_1_MODE_USE_ZERO != 0u) */
 626:Generated_Source\PSoC5/SPIS_1.c **** 
 627:Generated_Source\PSoC5/SPIS_1.c **** 
 628:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 629:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_ReadRxData
 630:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 631:Generated_Source\PSoC5/SPIS_1.c **** *
 632:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 633:Generated_Source\PSoC5/SPIS_1.c **** *  Read the next byte of data received across the SPI.
 634:Generated_Source\PSoC5/SPIS_1.c **** *
 635:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 636:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 637:Generated_Source\PSoC5/SPIS_1.c **** *
 638:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 639:Generated_Source\PSoC5/SPIS_1.c **** *  The next byte of data read from the FIFO.
 640:Generated_Source\PSoC5/SPIS_1.c **** *
 641:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 642:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_rxBufferWrite - used for the account of the bytes which
 643:Generated_Source\PSoC5/SPIS_1.c **** *  have been written down in the RX software buffer.
 644:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_rxBufferRead - used for the account of the bytes which
 645:Generated_Source\PSoC5/SPIS_1.c **** *  have been read from the RX software buffer, modified every function
 646:Generated_Source\PSoC5/SPIS_1.c **** *  call if RX Software Buffer is used.
 647:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_rxBuffer[SPIS_1_RX_BUFFER_SIZE] - used to store
 648:Generated_Source\PSoC5/SPIS_1.c **** *  received data.
 649:Generated_Source\PSoC5/SPIS_1.c **** *
 650:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 651:Generated_Source\PSoC5/SPIS_1.c **** *  Allows the user to read a byte of data received.
 652:Generated_Source\PSoC5/SPIS_1.c **** *
 653:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
 654:Generated_Source\PSoC5/SPIS_1.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 655:Generated_Source\PSoC5/SPIS_1.c **** *  empty status before calling Read function.
 656:Generated_Source\PSoC5/SPIS_1.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 23


 657:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
 658:Generated_Source\PSoC5/SPIS_1.c **** *  No.
 659:Generated_Source\PSoC5/SPIS_1.c **** *
 660:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC5/SPIS_1.c **** uint8 SPIS_1_ReadRxData(void) 
 662:Generated_Source\PSoC5/SPIS_1.c **** {
 584              		.loc 1 662 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LBB50:
 590              	.LBB51:
 331:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 591              		.loc 1 331 0
 592 0000 104B     		ldr	r3, .L55
 593 0002 0122     		movs	r2, #1
 594 0004 1A60     		str	r2, [r3]
 595              	.LBE51:
 596              	.LBE50:
 663:Generated_Source\PSoC5/SPIS_1.c ****     uint8 rxData;
 664:Generated_Source\PSoC5/SPIS_1.c **** 
 665:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_RX_SOFTWARE_BUF_ENABLED)
 666:Generated_Source\PSoC5/SPIS_1.c **** 
 667:Generated_Source\PSoC5/SPIS_1.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 668:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableRxInt();
 669:Generated_Source\PSoC5/SPIS_1.c **** 
 670:Generated_Source\PSoC5/SPIS_1.c ****         if(SPIS_1_rxBufferRead != SPIS_1_rxBufferWrite)
 597              		.loc 1 670 0
 598 0006 104B     		ldr	r3, .L55+4
 599 0008 104A     		ldr	r2, .L55+8
 600 000a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 601 000c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 602 000e 9142     		cmp	r1, r2
 603 0010 0FD0     		beq	.L52
 671:Generated_Source\PSoC5/SPIS_1.c ****         {
 672:Generated_Source\PSoC5/SPIS_1.c ****             if(SPIS_1_rxBufferFull == 0u)
 604              		.loc 1 672 0
 605 0012 0F4A     		ldr	r2, .L55+12
 606 0014 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 607 0016 01F0FF00 		and	r0, r1, #255
 608 001a 41B9     		cbnz	r1, .L53
 673:Generated_Source\PSoC5/SPIS_1.c ****             {
 674:Generated_Source\PSoC5/SPIS_1.c ****                 SPIS_1_rxBufferRead++;
 609              		.loc 1 674 0
 610 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 611 001e 0132     		adds	r2, r2, #1
 612 0020 D2B2     		uxtb	r2, r2
 613 0022 1A70     		strb	r2, [r3]
 675:Generated_Source\PSoC5/SPIS_1.c ****                 if(SPIS_1_rxBufferRead >= SPIS_1_RX_BUFFER_SIZE)
 614              		.loc 1 675 0
 615 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 616 0026 072A     		cmp	r2, #7
 617 0028 03D9     		bls	.L52
 676:Generated_Source\PSoC5/SPIS_1.c ****                 {
 677:Generated_Source\PSoC5/SPIS_1.c ****                     SPIS_1_rxBufferRead = 0u;
 618              		.loc 1 677 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 24


 619 002a 1870     		strb	r0, [r3]
 620 002c 01E0     		b	.L52
 621              	.L53:
 678:Generated_Source\PSoC5/SPIS_1.c ****                 }
 679:Generated_Source\PSoC5/SPIS_1.c ****             }
 680:Generated_Source\PSoC5/SPIS_1.c ****             else
 681:Generated_Source\PSoC5/SPIS_1.c ****             {
 682:Generated_Source\PSoC5/SPIS_1.c ****                 SPIS_1_rxBufferFull = 0u;
 622              		.loc 1 682 0
 623 002e 0021     		movs	r1, #0
 624 0030 1170     		strb	r1, [r2]
 625              	.L52:
 683:Generated_Source\PSoC5/SPIS_1.c ****             }
 684:Generated_Source\PSoC5/SPIS_1.c ****         }
 685:Generated_Source\PSoC5/SPIS_1.c **** 
 686:Generated_Source\PSoC5/SPIS_1.c ****         rxData = SPIS_1_rxBuffer[SPIS_1_rxBufferRead];
 626              		.loc 1 686 0
 627 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 628 0034 074A     		ldr	r2, .L55+16
 629 0036 DBB2     		uxtb	r3, r3
 630 0038 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 631              	.LVL22:
 632              	.LBB52:
 633              	.LBB53:
 281:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 634              		.loc 1 281 0
 635 003a 074B     		ldr	r3, .L55+20
 636 003c 0122     		movs	r2, #1
 637 003e 1A60     		str	r2, [r3]
 638              	.LBE53:
 639              	.LBE52:
 687:Generated_Source\PSoC5/SPIS_1.c **** 
 688:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable Interrupt. */
 689:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableRxInt();
 690:Generated_Source\PSoC5/SPIS_1.c **** 
 691:Generated_Source\PSoC5/SPIS_1.c ****     #else /* !SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 692:Generated_Source\PSoC5/SPIS_1.c **** 
 693:Generated_Source\PSoC5/SPIS_1.c ****         rxData = CY_GET_REG8(SPIS_1_RXDATA_PTR);
 694:Generated_Source\PSoC5/SPIS_1.c **** 
 695:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 696:Generated_Source\PSoC5/SPIS_1.c **** 
 697:Generated_Source\PSoC5/SPIS_1.c ****     return (rxData);
 698:Generated_Source\PSoC5/SPIS_1.c **** 
 699:Generated_Source\PSoC5/SPIS_1.c **** }
 640              		.loc 1 699 0
 641 0040 7047     		bx	lr
 642              	.L56:
 643 0042 00BF     		.align	2
 644              	.L55:
 645 0044 80E100E0 		.word	-536813184
 646 0048 00000000 		.word	SPIS_1_rxBufferRead
 647 004c 00000000 		.word	SPIS_1_rxBufferWrite
 648 0050 00000000 		.word	SPIS_1_rxBufferFull
 649 0054 00000000 		.word	SPIS_1_rxBuffer
 650 0058 00E100E0 		.word	-536813312
 651              		.cfi_endproc
 652              	.LFE14:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 25


 653              		.size	SPIS_1_ReadRxData, .-SPIS_1_ReadRxData
 654              		.section	.text.SPIS_1_GetRxBufferSize,"ax",%progbits
 655              		.align	1
 656              		.global	SPIS_1_GetRxBufferSize
 657              		.thumb
 658              		.thumb_func
 659              		.type	SPIS_1_GetRxBufferSize, %function
 660              	SPIS_1_GetRxBufferSize:
 661              	.LFB15:
 700:Generated_Source\PSoC5/SPIS_1.c **** 
 701:Generated_Source\PSoC5/SPIS_1.c **** 
 702:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 703:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_GetRxBufferSize
 704:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 705:Generated_Source\PSoC5/SPIS_1.c **** *
 706:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 707:Generated_Source\PSoC5/SPIS_1.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:Generated_Source\PSoC5/SPIS_1.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:Generated_Source\PSoC5/SPIS_1.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:Generated_Source\PSoC5/SPIS_1.c **** *
 711:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 712:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 713:Generated_Source\PSoC5/SPIS_1.c **** *
 714:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 715:Generated_Source\PSoC5/SPIS_1.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:Generated_Source\PSoC5/SPIS_1.c **** *
 717:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 718:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_rxBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPIS_1.c **** *  have been written down in the RX software buffer.
 720:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_rxBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPIS_1.c **** *  have been read from the RX software buffer.
 722:Generated_Source\PSoC5/SPIS_1.c **** *
 723:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 724:Generated_Source\PSoC5/SPIS_1.c **** *  Allows the user to find out how full the RX Buffer is.
 725:Generated_Source\PSoC5/SPIS_1.c **** *
 726:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPIS_1.c **** uint8 SPIS_1_GetRxBufferSize(void) 
 728:Generated_Source\PSoC5/SPIS_1.c **** {
 662              		.loc 1 728 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LBB54:
 668              	.LBB55:
 331:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 669              		.loc 1 331 0
 670 0000 0D4B     		ldr	r3, .L62
 671 0002 0122     		movs	r2, #1
 672 0004 1A60     		str	r2, [r3]
 673              	.LBE55:
 674              	.LBE54:
 729:Generated_Source\PSoC5/SPIS_1.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPIS_1.c **** 
 731:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_RX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPIS_1.c **** 
 733:Generated_Source\PSoC5/SPIS_1.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 26


 734:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableRxInt();
 735:Generated_Source\PSoC5/SPIS_1.c **** 
 736:Generated_Source\PSoC5/SPIS_1.c ****         if(SPIS_1_rxBufferRead == SPIS_1_rxBufferWrite)
 675              		.loc 1 736 0
 676 0006 0D4A     		ldr	r2, .L62+4
 677 0008 0D4B     		ldr	r3, .L62+8
 678 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 679 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 680 000e 8842     		cmp	r0, r1
 681 0010 0DD0     		beq	.L60
 737:Generated_Source\PSoC5/SPIS_1.c ****         {
 738:Generated_Source\PSoC5/SPIS_1.c ****             size = 0u; /* No data in RX buffer */
 739:Generated_Source\PSoC5/SPIS_1.c ****         }
 740:Generated_Source\PSoC5/SPIS_1.c ****         else if(SPIS_1_rxBufferRead < SPIS_1_rxBufferWrite)
 682              		.loc 1 740 0
 683 0012 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 684 0014 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 685 0016 8842     		cmp	r0, r1
 741:Generated_Source\PSoC5/SPIS_1.c ****         {
 742:Generated_Source\PSoC5/SPIS_1.c ****             size = (SPIS_1_rxBufferWrite - SPIS_1_rxBufferRead);
 743:Generated_Source\PSoC5/SPIS_1.c ****         }
 744:Generated_Source\PSoC5/SPIS_1.c ****         else
 745:Generated_Source\PSoC5/SPIS_1.c ****         {
 746:Generated_Source\PSoC5/SPIS_1.c ****             size = (SPIS_1_RX_BUFFER_SIZE - SPIS_1_rxBufferRead) + SPIS_1_rxBufferWrite;
 686              		.loc 1 746 0
 687 0018 2BBF     		itete	cs
 688 001a 1878     		ldrbcs	r0, [r3]	@ zero_extendqisi2
 742:Generated_Source\PSoC5/SPIS_1.c ****         }
 689              		.loc 1 742 0
 690 001c 1B78     		ldrbcc	r3, [r3]	@ zero_extendqisi2
 691              		.loc 1 746 0
 692 001e 1378     		ldrbcs	r3, [r2]	@ zero_extendqisi2
 742:Generated_Source\PSoC5/SPIS_1.c ****         }
 693              		.loc 1 742 0
 694 0020 1078     		ldrbcc	r0, [r2]	@ zero_extendqisi2
 695              		.loc 1 746 0
 696 0022 2ABF     		itet	cs
 697 0024 0830     		addcs	r0, r0, #8
 742:Generated_Source\PSoC5/SPIS_1.c ****         }
 698              		.loc 1 742 0
 699 0026 181A     		subcc	r0, r3, r0
 700              		.loc 1 746 0
 701 0028 C01A     		subcs	r0, r0, r3
 702 002a C0B2     		uxtb	r0, r0
 703              	.LVL23:
 704 002c 00E0     		b	.L58
 705              	.LVL24:
 706              	.L60:
 738:Generated_Source\PSoC5/SPIS_1.c ****         }
 707              		.loc 1 738 0
 708 002e 0020     		movs	r0, #0
 709              	.L58:
 710              	.LVL25:
 711              	.LBB56:
 712              	.LBB57:
 281:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 713              		.loc 1 281 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 27


 714 0030 044B     		ldr	r3, .L62+12
 715 0032 0122     		movs	r2, #1
 716 0034 1A60     		str	r2, [r3]
 717              	.LBE57:
 718              	.LBE56:
 747:Generated_Source\PSoC5/SPIS_1.c ****         }
 748:Generated_Source\PSoC5/SPIS_1.c **** 
 749:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable interrupt. */
 750:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableRxInt();
 751:Generated_Source\PSoC5/SPIS_1.c **** 
 752:Generated_Source\PSoC5/SPIS_1.c ****     #else /* !SPIS_1_RX_SOFTWARE_BUF_ENABLED*/
 753:Generated_Source\PSoC5/SPIS_1.c **** 
 754:Generated_Source\PSoC5/SPIS_1.c ****         /* We can only know if there is data in the fifo. */
 755:Generated_Source\PSoC5/SPIS_1.c ****         size = ((SPIS_1_RX_STATUS_REG & SPIS_1_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 756:Generated_Source\PSoC5/SPIS_1.c **** 
 757:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 758:Generated_Source\PSoC5/SPIS_1.c **** 
 759:Generated_Source\PSoC5/SPIS_1.c ****     return (size);
 760:Generated_Source\PSoC5/SPIS_1.c **** }
 719              		.loc 1 760 0
 720 0036 7047     		bx	lr
 721              	.L63:
 722              		.align	2
 723              	.L62:
 724 0038 80E100E0 		.word	-536813184
 725 003c 00000000 		.word	SPIS_1_rxBufferRead
 726 0040 00000000 		.word	SPIS_1_rxBufferWrite
 727 0044 00E100E0 		.word	-536813312
 728              		.cfi_endproc
 729              	.LFE15:
 730              		.size	SPIS_1_GetRxBufferSize, .-SPIS_1_GetRxBufferSize
 731              		.section	.text.SPIS_1_GetTxBufferSize,"ax",%progbits
 732              		.align	1
 733              		.global	SPIS_1_GetTxBufferSize
 734              		.thumb
 735              		.thumb_func
 736              		.type	SPIS_1_GetTxBufferSize, %function
 737              	SPIS_1_GetTxBufferSize:
 738              	.LFB16:
 761:Generated_Source\PSoC5/SPIS_1.c **** 
 762:Generated_Source\PSoC5/SPIS_1.c **** 
 763:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 764:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_GetTxBufferSize
 765:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 766:Generated_Source\PSoC5/SPIS_1.c **** *
 767:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 768:Generated_Source\PSoC5/SPIS_1.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:Generated_Source\PSoC5/SPIS_1.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:Generated_Source\PSoC5/SPIS_1.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:Generated_Source\PSoC5/SPIS_1.c **** *  Software Buffer.
 772:Generated_Source\PSoC5/SPIS_1.c **** *
 773:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 774:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 775:Generated_Source\PSoC5/SPIS_1.c **** *
 776:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 777:Generated_Source\PSoC5/SPIS_1.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:Generated_Source\PSoC5/SPIS_1.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 28


 779:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 780:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_txBufferWrite - used for the account of the bytes which
 781:Generated_Source\PSoC5/SPIS_1.c **** *  have been written down in the TX software buffer.
 782:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_txBufferRead - used for the account of the bytes which
 783:Generated_Source\PSoC5/SPIS_1.c **** *  have been read from the TX software buffer.
 784:Generated_Source\PSoC5/SPIS_1.c **** *
 785:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 786:Generated_Source\PSoC5/SPIS_1.c **** *  Allows the user to find out how full the TX Buffer is.
 787:Generated_Source\PSoC5/SPIS_1.c **** *
 788:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
 789:Generated_Source\PSoC5/SPIS_1.c **** *  Clear status register of the component.
 790:Generated_Source\PSoC5/SPIS_1.c **** *
 791:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 792:Generated_Source\PSoC5/SPIS_1.c **** uint8  SPIS_1_GetTxBufferSize(void) 
 793:Generated_Source\PSoC5/SPIS_1.c **** {
 739              		.loc 1 793 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744              	.LBB58:
 745              	.LBB59:
 306:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 746              		.loc 1 306 0
 747 0000 0D4B     		ldr	r3, .L69
 748 0002 0222     		movs	r2, #2
 749 0004 1A60     		str	r2, [r3]
 750              	.LBE59:
 751              	.LBE58:
 794:Generated_Source\PSoC5/SPIS_1.c ****     uint8 size;
 795:Generated_Source\PSoC5/SPIS_1.c **** 
 796:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_TX_SOFTWARE_BUF_ENABLED)
 797:Generated_Source\PSoC5/SPIS_1.c **** 
 798:Generated_Source\PSoC5/SPIS_1.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableTxInt();
 800:Generated_Source\PSoC5/SPIS_1.c **** 
 801:Generated_Source\PSoC5/SPIS_1.c ****         if(SPIS_1_txBufferRead == SPIS_1_txBufferWrite)
 752              		.loc 1 801 0
 753 0006 0D4A     		ldr	r2, .L69+4
 754 0008 0D4B     		ldr	r3, .L69+8
 755 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 756 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 757 000e 8842     		cmp	r0, r1
 758 0010 0DD0     		beq	.L67
 802:Generated_Source\PSoC5/SPIS_1.c ****         {
 803:Generated_Source\PSoC5/SPIS_1.c ****             size = 0u;
 804:Generated_Source\PSoC5/SPIS_1.c ****         }
 805:Generated_Source\PSoC5/SPIS_1.c ****         else if(SPIS_1_txBufferRead < SPIS_1_txBufferWrite)
 759              		.loc 1 805 0
 760 0012 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 761 0014 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 762 0016 8842     		cmp	r0, r1
 806:Generated_Source\PSoC5/SPIS_1.c ****         {
 807:Generated_Source\PSoC5/SPIS_1.c ****             size = (SPIS_1_txBufferWrite - SPIS_1_txBufferRead);
 808:Generated_Source\PSoC5/SPIS_1.c ****         }
 809:Generated_Source\PSoC5/SPIS_1.c ****         else
 810:Generated_Source\PSoC5/SPIS_1.c ****         {
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 29


 811:Generated_Source\PSoC5/SPIS_1.c ****             size = (SPIS_1_TX_BUFFER_SIZE - SPIS_1_txBufferRead) + SPIS_1_txBufferWrite;
 763              		.loc 1 811 0
 764 0018 2BBF     		itete	cs
 765 001a 1878     		ldrbcs	r0, [r3]	@ zero_extendqisi2
 807:Generated_Source\PSoC5/SPIS_1.c ****         }
 766              		.loc 1 807 0
 767 001c 1B78     		ldrbcc	r3, [r3]	@ zero_extendqisi2
 768              		.loc 1 811 0
 769 001e 1378     		ldrbcs	r3, [r2]	@ zero_extendqisi2
 807:Generated_Source\PSoC5/SPIS_1.c ****         }
 770              		.loc 1 807 0
 771 0020 1078     		ldrbcc	r0, [r2]	@ zero_extendqisi2
 772              		.loc 1 811 0
 773 0022 2ABF     		itet	cs
 774 0024 0830     		addcs	r0, r0, #8
 807:Generated_Source\PSoC5/SPIS_1.c ****         }
 775              		.loc 1 807 0
 776 0026 181A     		subcc	r0, r3, r0
 777              		.loc 1 811 0
 778 0028 C01A     		subcs	r0, r0, r3
 779 002a C0B2     		uxtb	r0, r0
 780              	.LVL26:
 781 002c 00E0     		b	.L65
 782              	.LVL27:
 783              	.L67:
 803:Generated_Source\PSoC5/SPIS_1.c ****         }
 784              		.loc 1 803 0
 785 002e 0020     		movs	r0, #0
 786              	.L65:
 787              	.LVL28:
 788              	.LBB60:
 789              	.LBB61:
 256:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 790              		.loc 1 256 0
 791 0030 044B     		ldr	r3, .L69+12
 792 0032 0222     		movs	r2, #2
 793 0034 1A60     		str	r2, [r3]
 794              	.LBE61:
 795              	.LBE60:
 812:Generated_Source\PSoC5/SPIS_1.c ****         }
 813:Generated_Source\PSoC5/SPIS_1.c **** 
 814:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable Interrupt. */
 815:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableTxInt();
 816:Generated_Source\PSoC5/SPIS_1.c **** 
 817:Generated_Source\PSoC5/SPIS_1.c ****     #else /* !SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 818:Generated_Source\PSoC5/SPIS_1.c **** 
 819:Generated_Source\PSoC5/SPIS_1.c ****         size = SPIS_1_TX_STATUS_REG;
 820:Generated_Source\PSoC5/SPIS_1.c **** 
 821:Generated_Source\PSoC5/SPIS_1.c ****         /* Is the fifo is full. */
 822:Generated_Source\PSoC5/SPIS_1.c ****         if((size & SPIS_1_STS_TX_FIFO_EMPTY) != 0u)
 823:Generated_Source\PSoC5/SPIS_1.c ****         {
 824:Generated_Source\PSoC5/SPIS_1.c ****             size = 0u;
 825:Generated_Source\PSoC5/SPIS_1.c ****         }
 826:Generated_Source\PSoC5/SPIS_1.c ****         else if((size & SPIS_1_STS_TX_FIFO_NOT_FULL) != 0u)
 827:Generated_Source\PSoC5/SPIS_1.c ****         {
 828:Generated_Source\PSoC5/SPIS_1.c ****             size = 1u;
 829:Generated_Source\PSoC5/SPIS_1.c ****         }
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 30


 830:Generated_Source\PSoC5/SPIS_1.c ****         else
 831:Generated_Source\PSoC5/SPIS_1.c ****         {
 832:Generated_Source\PSoC5/SPIS_1.c ****             size = 4u;
 833:Generated_Source\PSoC5/SPIS_1.c ****         }
 834:Generated_Source\PSoC5/SPIS_1.c **** 
 835:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 836:Generated_Source\PSoC5/SPIS_1.c **** 
 837:Generated_Source\PSoC5/SPIS_1.c ****     return (size);
 838:Generated_Source\PSoC5/SPIS_1.c **** }
 796              		.loc 1 838 0
 797 0036 7047     		bx	lr
 798              	.L70:
 799              		.align	2
 800              	.L69:
 801 0038 80E100E0 		.word	-536813184
 802 003c 00000000 		.word	SPIS_1_txBufferRead
 803 0040 00000000 		.word	SPIS_1_txBufferWrite
 804 0044 00E100E0 		.word	-536813312
 805              		.cfi_endproc
 806              	.LFE16:
 807              		.size	SPIS_1_GetTxBufferSize, .-SPIS_1_GetTxBufferSize
 808              		.section	.text.SPIS_1_ClearRxBuffer,"ax",%progbits
 809              		.align	1
 810              		.global	SPIS_1_ClearRxBuffer
 811              		.thumb
 812              		.thumb_func
 813              		.type	SPIS_1_ClearRxBuffer, %function
 814              	SPIS_1_ClearRxBuffer:
 815              	.LFB17:
 839:Generated_Source\PSoC5/SPIS_1.c **** 
 840:Generated_Source\PSoC5/SPIS_1.c **** 
 841:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 842:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_ClearRxBuffer
 843:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 844:Generated_Source\PSoC5/SPIS_1.c **** *
 845:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 846:Generated_Source\PSoC5/SPIS_1.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:Generated_Source\PSoC5/SPIS_1.c **** *
 848:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 849:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 850:Generated_Source\PSoC5/SPIS_1.c **** *
 851:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 852:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 853:Generated_Source\PSoC5/SPIS_1.c **** *
 854:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 855:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_rxBufferWrite - used for the account of the bytes which
 856:Generated_Source\PSoC5/SPIS_1.c **** *  have been written down in the RX software buffer, modified every function
 857:Generated_Source\PSoC5/SPIS_1.c **** *  call - resets to zero.
 858:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_rxBufferRead - used for the account of the bytes which
 859:Generated_Source\PSoC5/SPIS_1.c **** *  have been read from the RX software buffer, modified every function call -
 860:Generated_Source\PSoC5/SPIS_1.c **** *  resets to zero.
 861:Generated_Source\PSoC5/SPIS_1.c **** *
 862:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 863:Generated_Source\PSoC5/SPIS_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:Generated_Source\PSoC5/SPIS_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:Generated_Source\PSoC5/SPIS_1.c **** *  remained in the RAM.
 866:Generated_Source\PSoC5/SPIS_1.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 31


 867:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
 868:Generated_Source\PSoC5/SPIS_1.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:Generated_Source\PSoC5/SPIS_1.c **** *
 870:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
 871:Generated_Source\PSoC5/SPIS_1.c **** *  No.
 872:Generated_Source\PSoC5/SPIS_1.c **** *
 873:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 874:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_ClearRxBuffer(void) 
 875:Generated_Source\PSoC5/SPIS_1.c **** {
 816              		.loc 1 875 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 876:Generated_Source\PSoC5/SPIS_1.c ****     /* Clear Hardware RX FIFO */
 877:Generated_Source\PSoC5/SPIS_1.c ****     while((SPIS_1_RX_STATUS_REG & SPIS_1_STS_RX_FIFO_NOT_EMPTY) != 0u)
 821              		.loc 1 877 0
 822 0000 0A49     		ldr	r1, .L75
 878:Generated_Source\PSoC5/SPIS_1.c ****     {
 879:Generated_Source\PSoC5/SPIS_1.c ****         CY_GET_REG8(SPIS_1_RXDATA_PTR);
 823              		.loc 1 879 0
 824 0002 0B48     		ldr	r0, .L75+4
 825              	.L72:
 877:Generated_Source\PSoC5/SPIS_1.c ****     {
 826              		.loc 1 877 0
 827 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 828 0006 03F00803 		and	r3, r3, #8
 829 000a 03F0FF02 		and	r2, r3, #255
 830 000e 0BB1     		cbz	r3, .L74
 831              		.loc 1 879 0
 832 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 833 0012 F7E7     		b	.L72
 834              	.L74:
 835              	.LBB62:
 836              	.LBB63:
 331:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 837              		.loc 1 331 0
 838 0014 0749     		ldr	r1, .L75+8
 839 0016 0123     		movs	r3, #1
 840 0018 0B60     		str	r3, [r1]
 841              	.LBE63:
 842              	.LBE62:
 880:Generated_Source\PSoC5/SPIS_1.c ****     }
 881:Generated_Source\PSoC5/SPIS_1.c **** 
 882:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_RX_SOFTWARE_BUF_ENABLED)
 883:Generated_Source\PSoC5/SPIS_1.c **** 
 884:Generated_Source\PSoC5/SPIS_1.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableRxInt();
 886:Generated_Source\PSoC5/SPIS_1.c **** 
 887:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_rxBufferRead  = 0u;
 843              		.loc 1 887 0
 844 001a 0749     		ldr	r1, .L75+12
 845 001c 0A70     		strb	r2, [r1]
 888:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_rxBufferWrite = 0u;
 846              		.loc 1 888 0
 847 001e 0749     		ldr	r1, .L75+16
 848 0020 0A70     		strb	r2, [r1]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 32


 889:Generated_Source\PSoC5/SPIS_1.c **** 		SPIS_1_rxBufferFull  = 0u;
 849              		.loc 1 889 0
 850 0022 0749     		ldr	r1, .L75+20
 851 0024 0A70     		strb	r2, [r1]
 852              	.LBB64:
 853              	.LBB65:
 281:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
 854              		.loc 1 281 0
 855 0026 074A     		ldr	r2, .L75+24
 856 0028 1360     		str	r3, [r2]
 857 002a 7047     		bx	lr
 858              	.L76:
 859              		.align	2
 860              	.L75:
 861 002c 64640040 		.word	1073767524
 862 0030 52640040 		.word	1073767506
 863 0034 80E100E0 		.word	-536813184
 864 0038 00000000 		.word	SPIS_1_rxBufferRead
 865 003c 00000000 		.word	SPIS_1_rxBufferWrite
 866 0040 00000000 		.word	SPIS_1_rxBufferFull
 867 0044 00E100E0 		.word	-536813312
 868              	.LBE65:
 869              	.LBE64:
 870              		.cfi_endproc
 871              	.LFE17:
 872              		.size	SPIS_1_ClearRxBuffer, .-SPIS_1_ClearRxBuffer
 873              		.section	.text.SPIS_1_ClearTxBuffer,"ax",%progbits
 874              		.align	1
 875              		.global	SPIS_1_ClearTxBuffer
 876              		.thumb
 877              		.thumb_func
 878              		.type	SPIS_1_ClearTxBuffer, %function
 879              	SPIS_1_ClearTxBuffer:
 880              	.LFB18:
 890:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable interrupt. */
 891:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableRxInt();
 892:Generated_Source\PSoC5/SPIS_1.c **** 
 893:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 894:Generated_Source\PSoC5/SPIS_1.c **** }
 895:Generated_Source\PSoC5/SPIS_1.c **** 
 896:Generated_Source\PSoC5/SPIS_1.c **** 
 897:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
 898:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_ClearTxBuffer
 899:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
 900:Generated_Source\PSoC5/SPIS_1.c **** *
 901:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
 902:Generated_Source\PSoC5/SPIS_1.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:Generated_Source\PSoC5/SPIS_1.c **** *
 904:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
 905:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 906:Generated_Source\PSoC5/SPIS_1.c **** *
 907:Generated_Source\PSoC5/SPIS_1.c **** * Return:
 908:Generated_Source\PSoC5/SPIS_1.c **** *  None.
 909:Generated_Source\PSoC5/SPIS_1.c **** *
 910:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
 911:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_txBufferWrite - used for the account of the bytes which
 912:Generated_Source\PSoC5/SPIS_1.c **** *  have been written down in the TX software buffer, modified every function
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 33


 913:Generated_Source\PSoC5/SPIS_1.c **** *  call - resets to zero.
 914:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_txBufferRead - used for the account of the bytes which
 915:Generated_Source\PSoC5/SPIS_1.c **** *  have been read from the TX software buffer, modified every function call -
 916:Generated_Source\PSoC5/SPIS_1.c **** *  resets to zero.
 917:Generated_Source\PSoC5/SPIS_1.c **** *
 918:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
 919:Generated_Source\PSoC5/SPIS_1.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:Generated_Source\PSoC5/SPIS_1.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:Generated_Source\PSoC5/SPIS_1.c **** *  remained in the RAM.
 922:Generated_Source\PSoC5/SPIS_1.c **** *
 923:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
 924:Generated_Source\PSoC5/SPIS_1.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:Generated_Source\PSoC5/SPIS_1.c **** *  overwritten.
 926:Generated_Source\PSoC5/SPIS_1.c **** *
 927:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
 928:Generated_Source\PSoC5/SPIS_1.c **** *  No.
 929:Generated_Source\PSoC5/SPIS_1.c **** *
 930:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
 931:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_ClearTxBuffer(void) 
 932:Generated_Source\PSoC5/SPIS_1.c **** {
 881              		.loc 1 932 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 08B5     		push	{r3, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 3, -8
 888              		.cfi_offset 14, -4
 933:Generated_Source\PSoC5/SPIS_1.c ****     uint8 enableInterrupts;
 934:Generated_Source\PSoC5/SPIS_1.c **** 
 935:Generated_Source\PSoC5/SPIS_1.c ****     /* Clear Hardware TX FIFO */
 936:Generated_Source\PSoC5/SPIS_1.c ****     enableInterrupts = CyEnterCriticalSection();
 889              		.loc 1 936 0
 890 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 891              	.LVL29:
 937:Generated_Source\PSoC5/SPIS_1.c **** 
 938:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_DATA_WIDTH <= 8u)
 939:Generated_Source\PSoC5/SPIS_1.c **** 
 940:Generated_Source\PSoC5/SPIS_1.c ****         /* Clear TX FIFO */
 941:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_1_FIFO_CLR;
 892              		.loc 1 941 0
 893 0006 0E4B     		ldr	r3, .L78
 894 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 895 000a 42F00302 		orr	r2, r2, #3
 896 000e 1A70     		strb	r2, [r3]
 942:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_1_FIFO_CLR;
 897              		.loc 1 942 0
 898 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 899 0012 02F0FC02 		and	r2, r2, #252
 900 0016 1A70     		strb	r2, [r3]
 943:Generated_Source\PSoC5/SPIS_1.c **** 
 944:Generated_Source\PSoC5/SPIS_1.c ****     #else
 945:Generated_Source\PSoC5/SPIS_1.c **** 
 946:Generated_Source\PSoC5/SPIS_1.c ****         /* Clear TX FIFO */
 947:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_1_FIFO_CLR;
 948:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_1_FIFO_CLR;
 949:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_1_FIFO_CLR;
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 34


 950:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_1_FIFO_CLR;
 951:Generated_Source\PSoC5/SPIS_1.c **** 
 952:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_DATA_WIDTH > 8u */
 953:Generated_Source\PSoC5/SPIS_1.c **** 
 954:Generated_Source\PSoC5/SPIS_1.c ****     CyExitCriticalSection(enableInterrupts);
 901              		.loc 1 954 0
 902 0018 FFF7FEFF 		bl	CyExitCriticalSection
 903              	.LVL30:
 904              	.LBB66:
 905              	.LBB67:
 306:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 906              		.loc 1 306 0
 907 001c 094B     		ldr	r3, .L78+4
 908 001e 0222     		movs	r2, #2
 909              	.LBE67:
 910              	.LBE66:
 955:Generated_Source\PSoC5/SPIS_1.c **** 
 956:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_TX_SOFTWARE_BUF_ENABLED)
 957:Generated_Source\PSoC5/SPIS_1.c **** 
 958:Generated_Source\PSoC5/SPIS_1.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableTxInt();
 960:Generated_Source\PSoC5/SPIS_1.c **** 
 961:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_txBufferRead  = 0u;
 911              		.loc 1 961 0
 912 0020 0949     		ldr	r1, .L78+8
 913              	.LBB69:
 914              	.LBB68:
 306:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 915              		.loc 1 306 0
 916 0022 1A60     		str	r2, [r3]
 917              	.LBE68:
 918              	.LBE69:
 919              		.loc 1 961 0
 920 0024 0023     		movs	r3, #0
 921 0026 0B70     		strb	r3, [r1]
 962:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_txBufferWrite = 0u;
 922              		.loc 1 962 0
 923 0028 0849     		ldr	r1, .L78+12
 924 002a 0B70     		strb	r3, [r1]
 963:Generated_Source\PSoC5/SPIS_1.c **** 		SPIS_1_txBufferFull  = 0u;
 925              		.loc 1 963 0
 926 002c 0849     		ldr	r1, .L78+16
 927 002e 0B70     		strb	r3, [r1]
 964:Generated_Source\PSoC5/SPIS_1.c **** 		
 965:Generated_Source\PSoC5/SPIS_1.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_STATUS_MASK_REG &= (uint8)~SPIS_1_STS_TX_FIFO_NOT_FULL;
 928              		.loc 1 966 0
 929 0030 0849     		ldr	r1, .L78+20
 930 0032 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 931 0034 03F0FD03 		and	r3, r3, #253
 932 0038 0B70     		strb	r3, [r1]
 933              	.LBB70:
 934              	.LBB71:
 256:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
 935              		.loc 1 256 0
 936 003a 074B     		ldr	r3, .L78+24
 937 003c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 35


 938 003e 08BD     		pop	{r3, pc}
 939              	.L79:
 940              		.align	2
 941              	.L78:
 942 0040 92640040 		.word	1073767570
 943 0044 80E100E0 		.word	-536813184
 944 0048 00000000 		.word	SPIS_1_txBufferRead
 945 004c 00000000 		.word	SPIS_1_txBufferWrite
 946 0050 00000000 		.word	SPIS_1_txBufferFull
 947 0054 87640040 		.word	1073767559
 948 0058 00E100E0 		.word	-536813312
 949              	.LBE71:
 950              	.LBE70:
 951              		.cfi_endproc
 952              	.LFE18:
 953              		.size	SPIS_1_ClearTxBuffer, .-SPIS_1_ClearTxBuffer
 954              		.section	.text.SPIS_1_PutArray,"ax",%progbits
 955              		.align	1
 956              		.global	SPIS_1_PutArray
 957              		.thumb
 958              		.thumb_func
 959              		.type	SPIS_1_PutArray, %function
 960              	SPIS_1_PutArray:
 961              	.LFB19:
 967:Generated_Source\PSoC5/SPIS_1.c **** 
 968:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable Interrupt. */
 969:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableTxInt();
 970:Generated_Source\PSoC5/SPIS_1.c **** 
 971:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 972:Generated_Source\PSoC5/SPIS_1.c **** }
 973:Generated_Source\PSoC5/SPIS_1.c **** 
 974:Generated_Source\PSoC5/SPIS_1.c **** 
 975:Generated_Source\PSoC5/SPIS_1.c **** #if (SPIS_1_BIDIRECTIONAL_MODE != 0u)
 976:Generated_Source\PSoC5/SPIS_1.c **** 
 977:Generated_Source\PSoC5/SPIS_1.c ****     /*******************************************************************************
 978:Generated_Source\PSoC5/SPIS_1.c ****     * Function Name: SPIS_1_TxEnable
 979:Generated_Source\PSoC5/SPIS_1.c ****     ********************************************************************************
 980:Generated_Source\PSoC5/SPIS_1.c ****     *
 981:Generated_Source\PSoC5/SPIS_1.c ****     * Summary:
 982:Generated_Source\PSoC5/SPIS_1.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:Generated_Source\PSoC5/SPIS_1.c ****     *  will set the bi-directional pin to transmit.
 984:Generated_Source\PSoC5/SPIS_1.c ****     *
 985:Generated_Source\PSoC5/SPIS_1.c ****     * Parameters:
 986:Generated_Source\PSoC5/SPIS_1.c ****     *  None.
 987:Generated_Source\PSoC5/SPIS_1.c ****     *
 988:Generated_Source\PSoC5/SPIS_1.c ****     * Return:
 989:Generated_Source\PSoC5/SPIS_1.c ****     *  None.
 990:Generated_Source\PSoC5/SPIS_1.c ****     *
 991:Generated_Source\PSoC5/SPIS_1.c ****     *******************************************************************************/
 992:Generated_Source\PSoC5/SPIS_1.c ****     void SPIS_1_TxEnable(void) 
 993:Generated_Source\PSoC5/SPIS_1.c ****     {
 994:Generated_Source\PSoC5/SPIS_1.c ****             SPIS_1_CONTROL_REG |= SPIS_1_CTRL_TX_SIGNAL_EN;
 995:Generated_Source\PSoC5/SPIS_1.c ****     }
 996:Generated_Source\PSoC5/SPIS_1.c **** 
 997:Generated_Source\PSoC5/SPIS_1.c **** 
 998:Generated_Source\PSoC5/SPIS_1.c ****     /*******************************************************************************
 999:Generated_Source\PSoC5/SPIS_1.c ****     * Function Name: SPIS_1_TxDisable
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 36


1000:Generated_Source\PSoC5/SPIS_1.c ****     ********************************************************************************
1001:Generated_Source\PSoC5/SPIS_1.c ****     *
1002:Generated_Source\PSoC5/SPIS_1.c ****     * Summary:
1003:Generated_Source\PSoC5/SPIS_1.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:Generated_Source\PSoC5/SPIS_1.c ****     *  will set the bi-directional pin to receive.
1005:Generated_Source\PSoC5/SPIS_1.c ****     *
1006:Generated_Source\PSoC5/SPIS_1.c ****     * Parameters:
1007:Generated_Source\PSoC5/SPIS_1.c ****     *  None.
1008:Generated_Source\PSoC5/SPIS_1.c ****     *
1009:Generated_Source\PSoC5/SPIS_1.c ****     * Return:
1010:Generated_Source\PSoC5/SPIS_1.c ****     *  None.
1011:Generated_Source\PSoC5/SPIS_1.c ****     *
1012:Generated_Source\PSoC5/SPIS_1.c ****     *******************************************************************************/
1013:Generated_Source\PSoC5/SPIS_1.c ****     void SPIS_1_TxDisable(void) 
1014:Generated_Source\PSoC5/SPIS_1.c ****     {
1015:Generated_Source\PSoC5/SPIS_1.c ****             SPIS_1_CONTROL_REG &= (uint8)~SPIS_1_CTRL_TX_SIGNAL_EN;
1016:Generated_Source\PSoC5/SPIS_1.c ****     }
1017:Generated_Source\PSoC5/SPIS_1.c **** 
1018:Generated_Source\PSoC5/SPIS_1.c **** #endif /* SPIS_1_BIDIRECTIONAL_MODE != 0u */
1019:Generated_Source\PSoC5/SPIS_1.c **** 
1020:Generated_Source\PSoC5/SPIS_1.c **** 
1021:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
1022:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_PutArray
1023:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
1024:Generated_Source\PSoC5/SPIS_1.c **** *
1025:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
1026:Generated_Source\PSoC5/SPIS_1.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:Generated_Source\PSoC5/SPIS_1.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1028:Generated_Source\PSoC5/SPIS_1.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:Generated_Source\PSoC5/SPIS_1.c **** *  WriteTxDataZero() function.
1030:Generated_Source\PSoC5/SPIS_1.c **** *
1031:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
1032:Generated_Source\PSoC5/SPIS_1.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:Generated_Source\PSoC5/SPIS_1.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:Generated_Source\PSoC5/SPIS_1.c **** *
1035:Generated_Source\PSoC5/SPIS_1.c **** * Return:
1036:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1037:Generated_Source\PSoC5/SPIS_1.c **** *
1038:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
1039:Generated_Source\PSoC5/SPIS_1.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:Generated_Source\PSoC5/SPIS_1.c **** *  this loop if data is not being initiated by the master if there is not
1041:Generated_Source\PSoC5/SPIS_1.c **** *  enough room in the TX FIFO.
1042:Generated_Source\PSoC5/SPIS_1.c **** *
1043:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
1044:Generated_Source\PSoC5/SPIS_1.c **** *  No.
1045:Generated_Source\PSoC5/SPIS_1.c **** *
1046:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
1047:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_PutArray(const uint8 buffer[], uint8 byteCount)
1048:Generated_Source\PSoC5/SPIS_1.c ****                                                                     
1049:Generated_Source\PSoC5/SPIS_1.c **** {
 962              		.loc 1 1049 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL31:
 967 0000 38B5     		push	{r3, r4, r5, lr}
 968              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 37


 969              		.cfi_offset 3, -16
 970              		.cfi_offset 4, -12
 971              		.cfi_offset 5, -8
 972              		.cfi_offset 14, -4
 973              		.loc 1 1049 0
 974 0002 0C46     		mov	r4, r1
 975 0004 451E     		subs	r5, r0, #1
 976              	.LVL32:
 977              	.L81:
1050:Generated_Source\PSoC5/SPIS_1.c ****     uint8 bufIndex;
1051:Generated_Source\PSoC5/SPIS_1.c ****     bufIndex = 0u;
1052:Generated_Source\PSoC5/SPIS_1.c **** 
1053:Generated_Source\PSoC5/SPIS_1.c ****     while(byteCount > 0u)
 978              		.loc 1 1053 0
 979 0006 34B1     		cbz	r4, .L83
1054:Generated_Source\PSoC5/SPIS_1.c ****     {
1055:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_WriteTxData(buffer[bufIndex]);
 980              		.loc 1 1055 0
 981 0008 15F8010F 		ldrb	r0, [r5, #1]!	@ zero_extendqisi2
 982              	.LVL33:
1056:Generated_Source\PSoC5/SPIS_1.c ****         bufIndex++;
1057:Generated_Source\PSoC5/SPIS_1.c ****         byteCount--;
 983              		.loc 1 1057 0
 984 000c 013C     		subs	r4, r4, #1
 985              	.LVL34:
1055:Generated_Source\PSoC5/SPIS_1.c ****         bufIndex++;
 986              		.loc 1 1055 0
 987 000e FFF7FEFF 		bl	SPIS_1_WriteTxData
 988              	.LVL35:
 989              		.loc 1 1057 0
 990 0012 E4B2     		uxtb	r4, r4
 991              	.LVL36:
 992 0014 F7E7     		b	.L81
 993              	.L83:
1058:Generated_Source\PSoC5/SPIS_1.c ****     }
1059:Generated_Source\PSoC5/SPIS_1.c **** }
 994              		.loc 1 1059 0
 995 0016 38BD     		pop	{r3, r4, r5, pc}
 996              		.cfi_endproc
 997              	.LFE19:
 998              		.size	SPIS_1_PutArray, .-SPIS_1_PutArray
 999              		.section	.text.SPIS_1_ClearFIFO,"ax",%progbits
 1000              		.align	1
 1001              		.global	SPIS_1_ClearFIFO
 1002              		.thumb
 1003              		.thumb_func
 1004              		.type	SPIS_1_ClearFIFO, %function
 1005              	SPIS_1_ClearFIFO:
 1006              	.LFB20:
1060:Generated_Source\PSoC5/SPIS_1.c **** 
1061:Generated_Source\PSoC5/SPIS_1.c **** 
1062:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
1063:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_ClearFIFO
1064:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
1065:Generated_Source\PSoC5/SPIS_1.c **** *
1066:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
1067:Generated_Source\PSoC5/SPIS_1.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 38


1068:Generated_Source\PSoC5/SPIS_1.c **** *
1069:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
1070:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1071:Generated_Source\PSoC5/SPIS_1.c **** *
1072:Generated_Source\PSoC5/SPIS_1.c **** * Return:
1073:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1074:Generated_Source\PSoC5/SPIS_1.c **** *
1075:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
1076:Generated_Source\PSoC5/SPIS_1.c **** *  Clear status register of the component.
1077:Generated_Source\PSoC5/SPIS_1.c **** *
1078:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
1079:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_ClearFIFO(void) 
1080:Generated_Source\PSoC5/SPIS_1.c **** {
 1007              		.loc 1 1080 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011 0000 08B5     		push	{r3, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 3, -8
 1014              		.cfi_offset 14, -4
1081:Generated_Source\PSoC5/SPIS_1.c ****     uint8 enableInterrupts;
1082:Generated_Source\PSoC5/SPIS_1.c **** 
1083:Generated_Source\PSoC5/SPIS_1.c ****     while((SPIS_1_RX_STATUS_REG & SPIS_1_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1015              		.loc 1 1083 0
 1016 0002 0B4A     		ldr	r2, .L88
1084:Generated_Source\PSoC5/SPIS_1.c ****     {
1085:Generated_Source\PSoC5/SPIS_1.c ****         CY_GET_REG8(SPIS_1_RXDATA_PTR);
 1017              		.loc 1 1085 0
 1018 0004 0B49     		ldr	r1, .L88+4
 1019              	.L85:
1083:Generated_Source\PSoC5/SPIS_1.c ****     {
 1020              		.loc 1 1083 0
 1021 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1022 0008 1B07     		lsls	r3, r3, #28
 1023 000a 01D5     		bpl	.L87
 1024              		.loc 1 1085 0
 1025 000c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1026 000e FAE7     		b	.L85
 1027              	.L87:
1086:Generated_Source\PSoC5/SPIS_1.c ****     }
1087:Generated_Source\PSoC5/SPIS_1.c **** 
1088:Generated_Source\PSoC5/SPIS_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1028              		.loc 1 1088 0
 1029 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 1030              	.LVL37:
1089:Generated_Source\PSoC5/SPIS_1.c **** 
1090:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_DATA_WIDTH <= 8u)
1091:Generated_Source\PSoC5/SPIS_1.c **** 
1092:Generated_Source\PSoC5/SPIS_1.c ****         /* Clear TX FIFO */
1093:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_1_FIFO_CLR;
 1031              		.loc 1 1093 0
 1032 0014 084B     		ldr	r3, .L88+8
 1033 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1034 0018 42F00302 		orr	r2, r2, #3
 1035 001c 1A70     		strb	r2, [r3]
1094:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_1_FIFO_CLR;
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 39


 1036              		.loc 1 1094 0
 1037 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1038 0020 02F0FC02 		and	r2, r2, #252
 1039 0024 1A70     		strb	r2, [r3]
1095:Generated_Source\PSoC5/SPIS_1.c **** 
1096:Generated_Source\PSoC5/SPIS_1.c ****     #else
1097:Generated_Source\PSoC5/SPIS_1.c **** 
1098:Generated_Source\PSoC5/SPIS_1.c ****         /* Clear TX FIFO */
1099:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_1_FIFO_CLR;
1100:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_1_FIFO_CLR;
1101:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_1_FIFO_CLR;
1102:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_1_FIFO_CLR;
1103:Generated_Source\PSoC5/SPIS_1.c **** 
1104:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_DATA_WIDTH <= 8u */
1105:Generated_Source\PSoC5/SPIS_1.c **** 
1106:Generated_Source\PSoC5/SPIS_1.c ****     CyExitCriticalSection(enableInterrupts);
1107:Generated_Source\PSoC5/SPIS_1.c **** }
 1040              		.loc 1 1107 0
 1041 0026 BDE80840 		pop	{r3, lr}
 1042              		.cfi_restore 14
 1043              		.cfi_restore 3
 1044              		.cfi_def_cfa_offset 0
1106:Generated_Source\PSoC5/SPIS_1.c **** }
 1045              		.loc 1 1106 0
 1046 002a FFF7FEBF 		b	CyExitCriticalSection
 1047              	.LVL38:
 1048              	.L89:
 1049 002e 00BF     		.align	2
 1050              	.L88:
 1051 0030 64640040 		.word	1073767524
 1052 0034 52640040 		.word	1073767506
 1053 0038 92640040 		.word	1073767570
 1054              		.cfi_endproc
 1055              	.LFE20:
 1056              		.size	SPIS_1_ClearFIFO, .-SPIS_1_ClearFIFO
 1057              		.section	.text.SPIS_1_Init,"ax",%progbits
 1058              		.align	1
 1059              		.global	SPIS_1_Init
 1060              		.thumb
 1061              		.thumb_func
 1062              		.type	SPIS_1_Init, %function
 1063              	SPIS_1_Init:
 1064              	.LFB0:
  68:Generated_Source\PSoC5/SPIS_1.c ****     /*Initialize the Bit counter */
 1065              		.loc 1 68 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069 0000 38B5     		push	{r3, r4, r5, lr}
 1070              		.cfi_def_cfa_offset 16
 1071              		.cfi_offset 3, -16
 1072              		.cfi_offset 4, -12
 1073              		.cfi_offset 5, -8
 1074              		.cfi_offset 14, -4
  70:Generated_Source\PSoC5/SPIS_1.c **** 
 1075              		.loc 1 70 0
 1076 0002 184B     		ldr	r3, .L91
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 40


 1077 0004 0724     		movs	r4, #7
  75:Generated_Source\PSoC5/SPIS_1.c **** 
 1078              		.loc 1 75 0
 1079 0006 184D     		ldr	r5, .L91+4
  70:Generated_Source\PSoC5/SPIS_1.c **** 
 1080              		.loc 1 70 0
 1081 0008 1C70     		strb	r4, [r3]
  75:Generated_Source\PSoC5/SPIS_1.c **** 
 1082              		.loc 1 75 0
 1083 000a 0223     		movs	r3, #2
 1084 000c 2B60     		str	r3, [r5]
  78:Generated_Source\PSoC5/SPIS_1.c **** 
 1085              		.loc 1 78 0
 1086 000e 1749     		ldr	r1, .L91+8
 1087 0010 0120     		movs	r0, #1
 1088 0012 FFF7FEFF 		bl	CyIntSetVector
 1089              	.LVL39:
  81:Generated_Source\PSoC5/SPIS_1.c **** 
 1090              		.loc 1 81 0
 1091 0016 2146     		mov	r1, r4
 1092 0018 0120     		movs	r0, #1
 1093 001a FFF7FEFF 		bl	CyIntSetPriority
 1094              	.LVL40:
  87:Generated_Source\PSoC5/SPIS_1.c **** 
 1095              		.loc 1 87 0
 1096 001e 0123     		movs	r3, #1
 1097 0020 2B60     		str	r3, [r5]
  90:Generated_Source\PSoC5/SPIS_1.c **** 
 1098              		.loc 1 90 0
 1099 0022 1349     		ldr	r1, .L91+12
 1100 0024 0020     		movs	r0, #0
 1101 0026 FFF7FEFF 		bl	CyIntSetVector
 1102              	.LVL41:
  93:Generated_Source\PSoC5/SPIS_1.c **** 
 1103              		.loc 1 93 0
 1104 002a 2146     		mov	r1, r4
 1105 002c 0020     		movs	r0, #0
 1106 002e FFF7FEFF 		bl	CyIntSetPriority
 1107              	.LVL42:
  98:Generated_Source\PSoC5/SPIS_1.c **** 
 1108              		.loc 1 98 0
 1109 0032 FFF7FEFF 		bl	SPIS_1_ClearFIFO
 1110              	.LVL43:
 101:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_rxBufferRead = 0u;
 1111              		.loc 1 101 0
 1112 0036 0F4B     		ldr	r3, .L91+16
 1113 0038 0024     		movs	r4, #0
 1114 003a 1C70     		strb	r4, [r3]
 102:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_rxBufferWrite = 0u;
 1115              		.loc 1 102 0
 1116 003c 0E4B     		ldr	r3, .L91+20
 1117 003e 1C70     		strb	r4, [r3]
 103:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_RX_SOFTWARE_BUF_ENABLED */
 1118              		.loc 1 103 0
 1119 0040 0E4B     		ldr	r3, .L91+24
 1120 0042 1C70     		strb	r4, [r3]
 107:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_txBufferRead = 0u;
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 41


 1121              		.loc 1 107 0
 1122 0044 0E4B     		ldr	r3, .L91+28
 1123 0046 1C70     		strb	r4, [r3]
 108:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_txBufferWrite = 0u;
 1124              		.loc 1 108 0
 1125 0048 0E4B     		ldr	r3, .L91+32
 1126 004a 1C70     		strb	r4, [r3]
 109:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_TX_SOFTWARE_BUF_ENABLED */
 1127              		.loc 1 109 0
 1128 004c 0E4B     		ldr	r3, .L91+36
 1129 004e 1C70     		strb	r4, [r3]
 112:Generated_Source\PSoC5/SPIS_1.c ****     (void) SPIS_1_ReadRxStatus(); /* Clear any pending status bits */
 1130              		.loc 1 112 0
 1131 0050 FFF7FEFF 		bl	SPIS_1_ReadTxStatus
 1132              	.LVL44:
 113:Generated_Source\PSoC5/SPIS_1.c **** 
 1133              		.loc 1 113 0
 1134 0054 FFF7FEFF 		bl	SPIS_1_ReadRxStatus
 1135              	.LVL45:
 118:Generated_Source\PSoC5/SPIS_1.c ****                                                 (uint8)~SPIS_1_STS_TX_FIFO_NOT_FULL);
 1136              		.loc 1 118 0
 1137 0058 0C4B     		ldr	r3, .L91+40
 124:Generated_Source\PSoC5/SPIS_1.c **** }
 1138              		.loc 1 124 0
 1139 005a 0822     		movs	r2, #8
 118:Generated_Source\PSoC5/SPIS_1.c ****                                                 (uint8)~SPIS_1_STS_TX_FIFO_NOT_FULL);
 1140              		.loc 1 118 0
 1141 005c 1C70     		strb	r4, [r3]
 124:Generated_Source\PSoC5/SPIS_1.c **** }
 1142              		.loc 1 124 0
 1143 005e 03F8032C 		strb	r2, [r3, #-3]
 1144 0062 38BD     		pop	{r3, r4, r5, pc}
 1145              	.L92:
 1146              		.align	2
 1147              	.L91:
 1148 0064 82640040 		.word	1073767554
 1149 0068 80E100E0 		.word	-536813184
 1150 006c 00000000 		.word	SPIS_1_TX_ISR
 1151 0070 00000000 		.word	SPIS_1_RX_ISR
 1152 0074 00000000 		.word	SPIS_1_rxBufferFull
 1153 0078 00000000 		.word	SPIS_1_rxBufferRead
 1154 007c 00000000 		.word	SPIS_1_rxBufferWrite
 1155 0080 00000000 		.word	SPIS_1_txBufferFull
 1156 0084 00000000 		.word	SPIS_1_txBufferRead
 1157 0088 00000000 		.word	SPIS_1_txBufferWrite
 1158 008c 87640040 		.word	1073767559
 1159              		.cfi_endproc
 1160              	.LFE0:
 1161              		.size	SPIS_1_Init, .-SPIS_1_Init
 1162              		.section	.text.SPIS_1_Start,"ax",%progbits
 1163              		.align	1
 1164              		.global	SPIS_1_Start
 1165              		.thumb
 1166              		.thumb_func
 1167              		.type	SPIS_1_Start, %function
 1168              	SPIS_1_Start:
 1169              	.LFB2:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 42


 188:Generated_Source\PSoC5/SPIS_1.c ****     if(SPIS_1_initVar == 0u)
 1170              		.loc 1 188 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174 0000 10B5     		push	{r4, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 4, -8
 1177              		.cfi_offset 14, -4
 189:Generated_Source\PSoC5/SPIS_1.c ****     {
 1178              		.loc 1 189 0
 1179 0002 054C     		ldr	r4, .L95
 1180 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1181 0006 1BB9     		cbnz	r3, .L94
 191:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_initVar = 1u;
 1182              		.loc 1 191 0
 1183 0008 FFF7FEFF 		bl	SPIS_1_Init
 1184              	.LVL46:
 192:Generated_Source\PSoC5/SPIS_1.c ****     }
 1185              		.loc 1 192 0
 1186 000c 0123     		movs	r3, #1
 1187 000e 2370     		strb	r3, [r4]
 1188              	.L94:
 196:Generated_Source\PSoC5/SPIS_1.c **** 
 1189              		.loc 1 196 0
 1190 0010 BDE81040 		pop	{r4, lr}
 1191              		.cfi_restore 14
 1192              		.cfi_restore 4
 1193              		.cfi_def_cfa_offset 0
 195:Generated_Source\PSoC5/SPIS_1.c **** }
 1194              		.loc 1 195 0
 1195 0014 FFF7FEBF 		b	SPIS_1_Enable
 1196              	.LVL47:
 1197              	.L96:
 1198              		.align	2
 1199              	.L95:
 1200 0018 00000000 		.word	.LANCHOR0
 1201              		.cfi_endproc
 1202              	.LFE2:
 1203              		.size	SPIS_1_Start, .-SPIS_1_Start
 1204              		.section	.text.SPIS_1_EnableInt,"ax",%progbits
 1205              		.align	1
 1206              		.global	SPIS_1_EnableInt
 1207              		.thumb
 1208              		.thumb_func
 1209              		.type	SPIS_1_EnableInt, %function
 1210              	SPIS_1_EnableInt:
 1211              	.LFB21:
1108:Generated_Source\PSoC5/SPIS_1.c **** 
1109:Generated_Source\PSoC5/SPIS_1.c **** 
1110:Generated_Source\PSoC5/SPIS_1.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:Generated_Source\PSoC5/SPIS_1.c **** *  Please do not use it in new projects.
1112:Generated_Source\PSoC5/SPIS_1.c **** */
1113:Generated_Source\PSoC5/SPIS_1.c **** 
1114:Generated_Source\PSoC5/SPIS_1.c **** 
1115:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
1116:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_EnableInt
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 43


1117:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
1118:Generated_Source\PSoC5/SPIS_1.c **** *
1119:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
1120:Generated_Source\PSoC5/SPIS_1.c **** *  Enable internal interrupt generation.
1121:Generated_Source\PSoC5/SPIS_1.c **** *
1122:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
1123:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1124:Generated_Source\PSoC5/SPIS_1.c **** *
1125:Generated_Source\PSoC5/SPIS_1.c **** * Return:
1126:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1127:Generated_Source\PSoC5/SPIS_1.c **** *
1128:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
1129:Generated_Source\PSoC5/SPIS_1.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:Generated_Source\PSoC5/SPIS_1.c **** *
1131:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
1132:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_EnableInt(void) 
1133:Generated_Source\PSoC5/SPIS_1.c **** {
 1212              		.loc 1 1133 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              		@ link register save eliminated.
1134:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_TX_INT_ENABLED)
1135:Generated_Source\PSoC5/SPIS_1.c ****         CyIntEnable(SPIS_1_TX_ISR_NUMBER);
 1217              		.loc 1 1135 0
 1218 0000 024B     		ldr	r3, .L98
 1219 0002 0222     		movs	r2, #2
 1220 0004 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
1137:Generated_Source\PSoC5/SPIS_1.c **** 
1138:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_RX_INT_ENABLED)
1139:Generated_Source\PSoC5/SPIS_1.c ****         CyIntEnable(SPIS_1_RX_ISR_NUMBER);
 1221              		.loc 1 1139 0
 1222 0006 0122     		movs	r2, #1
 1223 0008 1A60     		str	r2, [r3]
 1224 000a 7047     		bx	lr
 1225              	.L99:
 1226              		.align	2
 1227              	.L98:
 1228 000c 00E100E0 		.word	-536813312
 1229              		.cfi_endproc
 1230              	.LFE21:
 1231              		.size	SPIS_1_EnableInt, .-SPIS_1_EnableInt
 1232              		.section	.text.SPIS_1_DisableInt,"ax",%progbits
 1233              		.align	1
 1234              		.global	SPIS_1_DisableInt
 1235              		.thumb
 1236              		.thumb_func
 1237              		.type	SPIS_1_DisableInt, %function
 1238              	SPIS_1_DisableInt:
 1239              	.LFB22:
1140:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
1141:Generated_Source\PSoC5/SPIS_1.c **** }
1142:Generated_Source\PSoC5/SPIS_1.c **** 
1143:Generated_Source\PSoC5/SPIS_1.c **** 
1144:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
1145:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_DisableInt
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 44


1146:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
1147:Generated_Source\PSoC5/SPIS_1.c **** *
1148:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
1149:Generated_Source\PSoC5/SPIS_1.c **** *  Disable internal interrupt generation.
1150:Generated_Source\PSoC5/SPIS_1.c **** *
1151:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
1152:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1153:Generated_Source\PSoC5/SPIS_1.c **** *
1154:Generated_Source\PSoC5/SPIS_1.c **** * Return:
1155:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1156:Generated_Source\PSoC5/SPIS_1.c **** *
1157:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
1158:Generated_Source\PSoC5/SPIS_1.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:Generated_Source\PSoC5/SPIS_1.c **** *
1160:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
1161:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_DisableInt(void) 
1162:Generated_Source\PSoC5/SPIS_1.c **** {
 1240              		.loc 1 1162 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              		@ link register save eliminated.
1163:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_TX_INT_ENABLED)
1164:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_TX_ISR_NUMBER);
 1245              		.loc 1 1164 0
 1246 0000 024B     		ldr	r3, .L101
 1247 0002 0222     		movs	r2, #2
 1248 0004 1A60     		str	r2, [r3]
1165:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_TX_INT_ENABLED */
1166:Generated_Source\PSoC5/SPIS_1.c **** 
1167:Generated_Source\PSoC5/SPIS_1.c ****     #if(SPIS_1_INTERNAL_RX_INT_ENABLED)
1168:Generated_Source\PSoC5/SPIS_1.c ****         CyIntDisable(SPIS_1_RX_ISR_NUMBER);
 1249              		.loc 1 1168 0
 1250 0006 0122     		movs	r2, #1
 1251 0008 1A60     		str	r2, [r3]
 1252 000a 7047     		bx	lr
 1253              	.L102:
 1254              		.align	2
 1255              	.L101:
 1256 000c 80E100E0 		.word	-536813184
 1257              		.cfi_endproc
 1258              	.LFE22:
 1259              		.size	SPIS_1_DisableInt, .-SPIS_1_DisableInt
 1260              		.section	.text.SPIS_1_SetInterruptMode,"ax",%progbits
 1261              		.align	1
 1262              		.global	SPIS_1_SetInterruptMode
 1263              		.thumb
 1264              		.thumb_func
 1265              		.type	SPIS_1_SetInterruptMode, %function
 1266              	SPIS_1_SetInterruptMode:
 1267              	.LFB23:
1169:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* SPIS_1_INTERNAL_RX_INT_ENABLED */
1170:Generated_Source\PSoC5/SPIS_1.c **** }
1171:Generated_Source\PSoC5/SPIS_1.c **** 
1172:Generated_Source\PSoC5/SPIS_1.c **** 
1173:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
1174:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_SetInterruptMode
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 45


1175:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
1176:Generated_Source\PSoC5/SPIS_1.c **** *
1177:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
1178:Generated_Source\PSoC5/SPIS_1.c **** *  Configure which status bits trigger an interrupt event.
1179:Generated_Source\PSoC5/SPIS_1.c **** *
1180:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
1181:Generated_Source\PSoC5/SPIS_1.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:Generated_Source\PSoC5/SPIS_1.c **** *  header file).
1183:Generated_Source\PSoC5/SPIS_1.c **** *
1184:Generated_Source\PSoC5/SPIS_1.c **** * Return:
1185:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1186:Generated_Source\PSoC5/SPIS_1.c **** *
1187:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
1188:Generated_Source\PSoC5/SPIS_1.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:Generated_Source\PSoC5/SPIS_1.c **** *
1190:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
1191:Generated_Source\PSoC5/SPIS_1.c **** void SPIS_1_SetInterruptMode(uint8 intSrc) 
1192:Generated_Source\PSoC5/SPIS_1.c **** {
 1268              		.loc 1 1192 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 1273              	.LVL48:
1193:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_TX_STATUS_MASK_REG  = intSrc;
 1274              		.loc 1 1193 0
 1275 0000 024B     		ldr	r3, .L104
 1276 0002 1870     		strb	r0, [r3]
1194:Generated_Source\PSoC5/SPIS_1.c ****     SPIS_1_RX_STATUS_MASK_REG  = intSrc;
 1277              		.loc 1 1194 0
 1278 0004 03F8030C 		strb	r0, [r3, #-3]
 1279 0008 7047     		bx	lr
 1280              	.L105:
 1281 000a 00BF     		.align	2
 1282              	.L104:
 1283 000c 87640040 		.word	1073767559
 1284              		.cfi_endproc
 1285              	.LFE23:
 1286              		.size	SPIS_1_SetInterruptMode, .-SPIS_1_SetInterruptMode
 1287              		.section	.text.SPIS_1_ReadStatus,"ax",%progbits
 1288              		.align	1
 1289              		.global	SPIS_1_ReadStatus
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	SPIS_1_ReadStatus, %function
 1293              	SPIS_1_ReadStatus:
 1294              	.LFB24:
1195:Generated_Source\PSoC5/SPIS_1.c **** }
1196:Generated_Source\PSoC5/SPIS_1.c **** 
1197:Generated_Source\PSoC5/SPIS_1.c **** 
1198:Generated_Source\PSoC5/SPIS_1.c **** /*******************************************************************************
1199:Generated_Source\PSoC5/SPIS_1.c **** * Function Name: SPIS_1_ReadStatus
1200:Generated_Source\PSoC5/SPIS_1.c **** ********************************************************************************
1201:Generated_Source\PSoC5/SPIS_1.c **** *
1202:Generated_Source\PSoC5/SPIS_1.c **** * Summary:
1203:Generated_Source\PSoC5/SPIS_1.c **** *  Read the status register for the component.
1204:Generated_Source\PSoC5/SPIS_1.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 46


1205:Generated_Source\PSoC5/SPIS_1.c **** * Parameters:
1206:Generated_Source\PSoC5/SPIS_1.c **** *  None.
1207:Generated_Source\PSoC5/SPIS_1.c **** *
1208:Generated_Source\PSoC5/SPIS_1.c **** * Return:
1209:Generated_Source\PSoC5/SPIS_1.c **** *  Contents of the status register.
1210:Generated_Source\PSoC5/SPIS_1.c **** *
1211:Generated_Source\PSoC5/SPIS_1.c **** * Global variables:
1212:Generated_Source\PSoC5/SPIS_1.c **** *  SPIS_1_swStatus - used to store in software status register,
1213:Generated_Source\PSoC5/SPIS_1.c **** *  modified every function call - resets to zero.
1214:Generated_Source\PSoC5/SPIS_1.c **** *
1215:Generated_Source\PSoC5/SPIS_1.c **** * Theory:
1216:Generated_Source\PSoC5/SPIS_1.c **** *  Allows the user and the API to read the status register for error detection
1217:Generated_Source\PSoC5/SPIS_1.c **** *  and flow control.
1218:Generated_Source\PSoC5/SPIS_1.c **** *
1219:Generated_Source\PSoC5/SPIS_1.c **** * Side Effects:
1220:Generated_Source\PSoC5/SPIS_1.c **** *  Clear status register of the component.
1221:Generated_Source\PSoC5/SPIS_1.c **** *
1222:Generated_Source\PSoC5/SPIS_1.c **** * Reentrant:
1223:Generated_Source\PSoC5/SPIS_1.c **** *  No.
1224:Generated_Source\PSoC5/SPIS_1.c **** *
1225:Generated_Source\PSoC5/SPIS_1.c **** *******************************************************************************/
1226:Generated_Source\PSoC5/SPIS_1.c **** uint8 SPIS_1_ReadStatus(void) 
1227:Generated_Source\PSoC5/SPIS_1.c **** {
 1295              		.loc 1 1227 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 1299 0000 70B5     		push	{r4, r5, r6, lr}
 1300              		.cfi_def_cfa_offset 16
 1301              		.cfi_offset 4, -16
 1302              		.cfi_offset 5, -12
 1303              		.cfi_offset 6, -8
 1304              		.cfi_offset 14, -4
1228:Generated_Source\PSoC5/SPIS_1.c ****     uint8 tmpStatus;
1229:Generated_Source\PSoC5/SPIS_1.c **** 
1230:Generated_Source\PSoC5/SPIS_1.c ****     #if ((SPIS_1_TX_SOFTWARE_BUF_ENABLED) || (SPIS_1_RX_SOFTWARE_BUF_ENABLED))
1231:Generated_Source\PSoC5/SPIS_1.c **** 
1232:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_DisableInt();
 1305              		.loc 1 1232 0
 1306 0002 FFF7FEFF 		bl	SPIS_1_DisableInt
 1307              	.LVL49:
1233:Generated_Source\PSoC5/SPIS_1.c **** 
1234:Generated_Source\PSoC5/SPIS_1.c ****         tmpStatus = SPIS_1_GET_STATUS_TX(SPIS_1_swStatusTx) |
 1308              		.loc 1 1234 0
 1309 0006 0D4E     		ldr	r6, .L107
1235:Generated_Source\PSoC5/SPIS_1.c ****               (SPIS_1_GET_STATUS_RX(SPIS_1_swStatusRx) & (uint8)~SPIS_1_STS_RX_FIFO_FULL);
 1310              		.loc 1 1235 0
 1311 0008 0D4A     		ldr	r2, .L107+4
1234:Generated_Source\PSoC5/SPIS_1.c ****               (SPIS_1_GET_STATUS_RX(SPIS_1_swStatusRx) & (uint8)~SPIS_1_STS_RX_FIFO_FULL);
 1312              		.loc 1 1234 0
 1313 000a 0E4B     		ldr	r3, .L107+8
 1314 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1315 000e 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 1316              		.loc 1 1235 0
 1317 0010 13F8031C 		ldrb	r1, [r3, #-3]	@ zero_extendqisi2
 1318 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1319 0016 CDB2     		uxtb	r5, r1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 47


 1320 0018 D9B2     		uxtb	r1, r3
1236:Generated_Source\PSoC5/SPIS_1.c **** 
1237:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_swStatusTx = 0u;
 1321              		.loc 1 1237 0
 1322 001a 0023     		movs	r3, #0
 1323 001c 3370     		strb	r3, [r6]
1234:Generated_Source\PSoC5/SPIS_1.c ****               (SPIS_1_GET_STATUS_RX(SPIS_1_swStatusRx) & (uint8)~SPIS_1_STS_RX_FIFO_FULL);
 1324              		.loc 1 1234 0
 1325 001e C0B2     		uxtb	r0, r0
1238:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_swStatusRx = 0u;
 1326              		.loc 1 1238 0
 1327 0020 1370     		strb	r3, [r2]
1239:Generated_Source\PSoC5/SPIS_1.c **** 
1240:Generated_Source\PSoC5/SPIS_1.c ****         /* Enable Interrupts */
1241:Generated_Source\PSoC5/SPIS_1.c ****         SPIS_1_EnableInt();
 1328              		.loc 1 1241 0
 1329 0022 FFF7FEFF 		bl	SPIS_1_EnableInt
 1330              	.LVL50:
1234:Generated_Source\PSoC5/SPIS_1.c ****               (SPIS_1_GET_STATUS_RX(SPIS_1_swStatusRx) & (uint8)~SPIS_1_STS_RX_FIFO_FULL);
 1331              		.loc 1 1234 0
 1332 0026 E4B2     		uxtb	r4, r4
1242:Generated_Source\PSoC5/SPIS_1.c **** 
1243:Generated_Source\PSoC5/SPIS_1.c ****     #else /* !((SPIS_1_TX_SOFTWARE_BUF_ENABLED) || (SPIS_1_RX_SOFTWARE_BUF_ENABLED)) */
1244:Generated_Source\PSoC5/SPIS_1.c **** 
1245:Generated_Source\PSoC5/SPIS_1.c ****         tmpStatus = SPIS_1_TX_STATUS_REG | (SPIS_1_RX_STATUS_REG &
1246:Generated_Source\PSoC5/SPIS_1.c ****                                                       (uint8)~SPIS_1_STS_RX_FIFO_FULL);
1247:Generated_Source\PSoC5/SPIS_1.c **** 
1248:Generated_Source\PSoC5/SPIS_1.c ****     #endif /* (SPIS_1_TX_SOFTWARE_BUF_ENABLED) || (SPIS_1_RX_SOFTWARE_BUF_ENABLED) */
1249:Generated_Source\PSoC5/SPIS_1.c **** 
1250:Generated_Source\PSoC5/SPIS_1.c ****     return(tmpStatus);
 1333              		.loc 1 1250 0
 1334 0028 01F06101 		and	r1, r1, #97
 1335 002c 2943     		orrs	r1, r1, r5
 1336 002e 04F06104 		and	r4, r4, #97
 1337 0032 21F04001 		bic	r1, r1, #64
 1338 0036 2043     		orrs	r0, r0, r4
1251:Generated_Source\PSoC5/SPIS_1.c **** }
 1339              		.loc 1 1251 0
 1340 0038 0843     		orrs	r0, r0, r1
 1341 003a 70BD     		pop	{r4, r5, r6, pc}
 1342              	.L108:
 1343              		.align	2
 1344              	.L107:
 1345 003c 00000000 		.word	SPIS_1_swStatusTx
 1346 0040 00000000 		.word	SPIS_1_swStatusRx
 1347 0044 67640040 		.word	1073767527
 1348              		.cfi_endproc
 1349              	.LFE24:
 1350              		.size	SPIS_1_ReadStatus, .-SPIS_1_ReadStatus
 1351              		.comm	SPIS_1_swStatusRx,1,1
 1352              		.comm	SPIS_1_swStatusTx,1,1
 1353              		.global	SPIS_1_initVar
 1354              		.comm	SPIS_1_rxBufferFull,1,1
 1355              		.comm	SPIS_1_rxBufferWrite,1,1
 1356              		.comm	SPIS_1_rxBufferRead,1,1
 1357              		.comm	SPIS_1_rxBuffer,8,1
 1358              		.comm	SPIS_1_txBufferFull,1,1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 48


 1359              		.comm	SPIS_1_txBufferWrite,1,1
 1360              		.comm	SPIS_1_txBufferRead,1,1
 1361              		.comm	SPIS_1_txBuffer,8,1
 1362              		.bss
 1363              		.set	.LANCHOR0,. + 0
 1364              		.type	SPIS_1_initVar, %object
 1365              		.size	SPIS_1_initVar, 1
 1366              	SPIS_1_initVar:
 1367 0000 00       		.space	1
 1368              		.text
 1369              	.Letext0:
 1370              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1371              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1372              		.section	.debug_info,"",%progbits
 1373              	.Ldebug_info0:
 1374 0000 33070000 		.4byte	0x733
 1375 0004 0400     		.2byte	0x4
 1376 0006 00000000 		.4byte	.Ldebug_abbrev0
 1377 000a 04       		.byte	0x4
 1378 000b 01       		.uleb128 0x1
 1379 000c D5000000 		.4byte	.LASF70
 1380 0010 0C       		.byte	0xc
 1381 0011 EF040000 		.4byte	.LASF71
 1382 0015 0E040000 		.4byte	.LASF72
 1383 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1384 001d 00000000 		.4byte	0
 1385 0021 00000000 		.4byte	.Ldebug_line0
 1386 0025 02       		.uleb128 0x2
 1387 0026 01       		.byte	0x1
 1388 0027 06       		.byte	0x6
 1389 0028 C9000000 		.4byte	.LASF0
 1390 002c 02       		.uleb128 0x2
 1391 002d 01       		.byte	0x1
 1392 002e 08       		.byte	0x8
 1393 002f 45030000 		.4byte	.LASF1
 1394 0033 02       		.uleb128 0x2
 1395 0034 02       		.byte	0x2
 1396 0035 05       		.byte	0x5
 1397 0036 66030000 		.4byte	.LASF2
 1398 003a 02       		.uleb128 0x2
 1399 003b 02       		.byte	0x2
 1400 003c 07       		.byte	0x7
 1401 003d 98020000 		.4byte	.LASF3
 1402 0041 02       		.uleb128 0x2
 1403 0042 04       		.byte	0x4
 1404 0043 05       		.byte	0x5
 1405 0044 77010000 		.4byte	.LASF4
 1406 0048 02       		.uleb128 0x2
 1407 0049 04       		.byte	0x4
 1408 004a 07       		.byte	0x7
 1409 004b 5E020000 		.4byte	.LASF5
 1410 004f 02       		.uleb128 0x2
 1411 0050 08       		.byte	0x8
 1412 0051 05       		.byte	0x5
 1413 0052 BB000000 		.4byte	.LASF6
 1414 0056 02       		.uleb128 0x2
 1415 0057 08       		.byte	0x8
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 49


 1416 0058 07       		.byte	0x7
 1417 0059 5B000000 		.4byte	.LASF7
 1418 005d 03       		.uleb128 0x3
 1419 005e 04       		.byte	0x4
 1420 005f 05       		.byte	0x5
 1421 0060 696E7400 		.ascii	"int\000"
 1422 0064 02       		.uleb128 0x2
 1423 0065 04       		.byte	0x4
 1424 0066 07       		.byte	0x7
 1425 0067 29020000 		.4byte	.LASF8
 1426 006b 04       		.uleb128 0x4
 1427 006c A0010000 		.4byte	.LASF9
 1428 0070 02       		.byte	0x2
 1429 0071 9201     		.2byte	0x192
 1430 0073 2C000000 		.4byte	0x2c
 1431 0077 04       		.uleb128 0x4
 1432 0078 CD010000 		.4byte	.LASF10
 1433 007c 02       		.byte	0x2
 1434 007d 9401     		.2byte	0x194
 1435 007f 48000000 		.4byte	0x48
 1436 0083 02       		.uleb128 0x2
 1437 0084 04       		.byte	0x4
 1438 0085 04       		.byte	0x4
 1439 0086 25030000 		.4byte	.LASF11
 1440 008a 02       		.uleb128 0x2
 1441 008b 08       		.byte	0x8
 1442 008c 04       		.byte	0x4
 1443 008d A6010000 		.4byte	.LASF12
 1444 0091 02       		.uleb128 0x2
 1445 0092 01       		.byte	0x1
 1446 0093 08       		.byte	0x8
 1447 0094 BB030000 		.4byte	.LASF13
 1448 0098 04       		.uleb128 0x4
 1449 0099 40030000 		.4byte	.LASF14
 1450 009d 02       		.byte	0x2
 1451 009e 3C02     		.2byte	0x23c
 1452 00a0 A4000000 		.4byte	0xa4
 1453 00a4 05       		.uleb128 0x5
 1454 00a5 6B000000 		.4byte	0x6b
 1455 00a9 04       		.uleb128 0x4
 1456 00aa DC020000 		.4byte	.LASF15
 1457 00ae 02       		.byte	0x2
 1458 00af 3E02     		.2byte	0x23e
 1459 00b1 B5000000 		.4byte	0xb5
 1460 00b5 05       		.uleb128 0x5
 1461 00b6 77000000 		.4byte	0x77
 1462 00ba 02       		.uleb128 0x2
 1463 00bb 08       		.byte	0x8
 1464 00bc 04       		.byte	0x4
 1465 00bd EB020000 		.4byte	.LASF16
 1466 00c1 02       		.uleb128 0x2
 1467 00c2 04       		.byte	0x4
 1468 00c3 07       		.byte	0x7
 1469 00c4 E2020000 		.4byte	.LASF17
 1470 00c8 06       		.uleb128 0x6
 1471 00c9 91000000 		.4byte	.LASF18
 1472 00cd 01       		.byte	0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 50


 1473 00ce FD       		.byte	0xfd
 1474 00cf 01       		.byte	0x1
 1475 00d0 07       		.uleb128 0x7
 1476 00d1 4A020000 		.4byte	.LASF19
 1477 00d5 01       		.byte	0x1
 1478 00d6 2F01     		.2byte	0x12f
 1479 00d8 01       		.byte	0x1
 1480 00d9 07       		.uleb128 0x7
 1481 00da 3E040000 		.4byte	.LASF20
 1482 00de 01       		.byte	0x1
 1483 00df 1601     		.2byte	0x116
 1484 00e1 01       		.byte	0x1
 1485 00e2 07       		.uleb128 0x7
 1486 00e3 47000000 		.4byte	.LASF21
 1487 00e7 01       		.byte	0x1
 1488 00e8 4801     		.2byte	0x148
 1489 00ea 01       		.byte	0x1
 1490 00eb 08       		.uleb128 0x8
 1491 00ec AD010000 		.4byte	.LASF22
 1492 00f0 01       		.byte	0x1
 1493 00f1 8E       		.byte	0x8e
 1494 00f2 00000000 		.4byte	.LFB1
 1495 00f6 38000000 		.4byte	.LFE1-.LFB1
 1496 00fa 01       		.uleb128 0x1
 1497 00fb 9C       		.byte	0x9c
 1498 00fc 22010000 		.4byte	0x122
 1499 0100 09       		.uleb128 0x9
 1500 0101 51040000 		.4byte	.LASF24
 1501 0105 01       		.byte	0x1
 1502 0106 90       		.byte	0x90
 1503 0107 6B000000 		.4byte	0x6b
 1504 010b 00000000 		.4byte	.LLST0
 1505 010f 0A       		.uleb128 0xa
 1506 0110 06000000 		.4byte	.LVL0
 1507 0114 0A070000 		.4byte	0x70a
 1508 0118 0A       		.uleb128 0xa
 1509 0119 24000000 		.4byte	.LVL1
 1510 011d 15070000 		.4byte	0x715
 1511 0121 00       		.byte	0
 1512 0122 08       		.uleb128 0x8
 1513 0123 CC040000 		.4byte	.LASF23
 1514 0127 01       		.byte	0x1
 1515 0128 D8       		.byte	0xd8
 1516 0129 00000000 		.4byte	.LFB3
 1517 012d 34000000 		.4byte	.LFE3-.LFB3
 1518 0131 01       		.uleb128 0x1
 1519 0132 9C       		.byte	0x9c
 1520 0133 59010000 		.4byte	0x159
 1521 0137 09       		.uleb128 0x9
 1522 0138 51040000 		.4byte	.LASF24
 1523 013c 01       		.byte	0x1
 1524 013d DA       		.byte	0xda
 1525 013e 6B000000 		.4byte	0x6b
 1526 0142 13000000 		.4byte	.LLST1
 1527 0146 0A       		.uleb128 0xa
 1528 0147 06000000 		.4byte	.LVL2
 1529 014b 0A070000 		.4byte	0x70a
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 51


 1530 014f 0A       		.uleb128 0xa
 1531 0150 20000000 		.4byte	.LVL3
 1532 0154 15070000 		.4byte	0x715
 1533 0158 00       		.byte	0
 1534 0159 0B       		.uleb128 0xb
 1535 015a C8000000 		.4byte	0xc8
 1536 015e 00000000 		.4byte	.LFB4
 1537 0162 0C000000 		.4byte	.LFE4-.LFB4
 1538 0166 01       		.uleb128 0x1
 1539 0167 9C       		.byte	0x9c
 1540 0168 0B       		.uleb128 0xb
 1541 0169 D9000000 		.4byte	0xd9
 1542 016d 00000000 		.4byte	.LFB5
 1543 0171 0C000000 		.4byte	.LFE5-.LFB5
 1544 0175 01       		.uleb128 0x1
 1545 0176 9C       		.byte	0x9c
 1546 0177 0B       		.uleb128 0xb
 1547 0178 D0000000 		.4byte	0xd0
 1548 017c 00000000 		.4byte	.LFB6
 1549 0180 0C000000 		.4byte	.LFE6-.LFB6
 1550 0184 01       		.uleb128 0x1
 1551 0185 9C       		.byte	0x9c
 1552 0186 0B       		.uleb128 0xb
 1553 0187 E2000000 		.4byte	0xe2
 1554 018b 00000000 		.4byte	.LFB7
 1555 018f 0C000000 		.4byte	.LFE7-.LFB7
 1556 0193 01       		.uleb128 0x1
 1557 0194 9C       		.byte	0x9c
 1558 0195 0C       		.uleb128 0xc
 1559 0196 D4010000 		.4byte	.LASF25
 1560 019a 01       		.byte	0x1
 1561 019b 6201     		.2byte	0x162
 1562 019d 00000000 		.4byte	.LFB8
 1563 01a1 0C000000 		.4byte	.LFE8-.LFB8
 1564 01a5 01       		.uleb128 0x1
 1565 01a6 9C       		.byte	0x9c
 1566 01a7 BA010000 		.4byte	0x1ba
 1567 01ab 0D       		.uleb128 0xd
 1568 01ac D5020000 		.4byte	.LASF27
 1569 01b0 01       		.byte	0x1
 1570 01b1 6201     		.2byte	0x162
 1571 01b3 6B000000 		.4byte	0x6b
 1572 01b7 01       		.uleb128 0x1
 1573 01b8 50       		.byte	0x50
 1574 01b9 00       		.byte	0
 1575 01ba 0C       		.uleb128 0xc
 1576 01bb B2040000 		.4byte	.LASF26
 1577 01bf 01       		.byte	0x1
 1578 01c0 7A01     		.2byte	0x17a
 1579 01c2 00000000 		.4byte	.LFB9
 1580 01c6 0C000000 		.4byte	.LFE9-.LFB9
 1581 01ca 01       		.uleb128 0x1
 1582 01cb 9C       		.byte	0x9c
 1583 01cc DF010000 		.4byte	0x1df
 1584 01d0 0D       		.uleb128 0xd
 1585 01d1 D5020000 		.4byte	.LASF27
 1586 01d5 01       		.byte	0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 52


 1587 01d6 7A01     		.2byte	0x17a
 1588 01d8 6B000000 		.4byte	0x6b
 1589 01dc 01       		.uleb128 0x1
 1590 01dd 50       		.byte	0x50
 1591 01de 00       		.byte	0
 1592 01df 0E       		.uleb128 0xe
 1593 01e0 36020000 		.4byte	.LASF29
 1594 01e4 01       		.byte	0x1
 1595 01e5 9C01     		.2byte	0x19c
 1596 01e7 6B000000 		.4byte	0x6b
 1597 01eb 00000000 		.4byte	.LFB10
 1598 01ef 30000000 		.4byte	.LFE10-.LFB10
 1599 01f3 01       		.uleb128 0x1
 1600 01f4 9C       		.byte	0x9c
 1601 01f5 2A020000 		.4byte	0x22a
 1602 01f9 0F       		.uleb128 0xf
 1603 01fa 72000000 		.4byte	.LASF28
 1604 01fe 01       		.byte	0x1
 1605 01ff 9E01     		.2byte	0x19e
 1606 0201 6B000000 		.4byte	0x6b
 1607 0205 26000000 		.4byte	.LLST2
 1608 0209 10       		.uleb128 0x10
 1609 020a D0000000 		.4byte	0xd0
 1610 020e 02000000 		.4byte	.LBB34
 1611 0212 06000000 		.4byte	.LBE34-.LBB34
 1612 0216 01       		.byte	0x1
 1613 0217 A201     		.2byte	0x1a2
 1614 0219 11       		.uleb128 0x11
 1615 021a C8000000 		.4byte	0xc8
 1616 021e 14000000 		.4byte	.LBB36
 1617 0222 00000000 		.4byte	.Ldebug_ranges0+0
 1618 0226 01       		.byte	0x1
 1619 0227 A901     		.2byte	0x1a9
 1620 0229 00       		.byte	0
 1621 022a 0E       		.uleb128 0xe
 1622 022b 9E040000 		.4byte	.LASF30
 1623 022f 01       		.byte	0x1
 1624 0230 D101     		.2byte	0x1d1
 1625 0232 6B000000 		.4byte	0x6b
 1626 0236 00000000 		.4byte	.LFB11
 1627 023a 30000000 		.4byte	.LFE11-.LFB11
 1628 023e 01       		.uleb128 0x1
 1629 023f 9C       		.byte	0x9c
 1630 0240 75020000 		.4byte	0x275
 1631 0244 0F       		.uleb128 0xf
 1632 0245 72000000 		.4byte	.LASF28
 1633 0249 01       		.byte	0x1
 1634 024a D301     		.2byte	0x1d3
 1635 024c 6B000000 		.4byte	0x6b
 1636 0250 41000000 		.4byte	.LLST3
 1637 0254 10       		.uleb128 0x10
 1638 0255 E2000000 		.4byte	0xe2
 1639 0259 02000000 		.4byte	.LBB40
 1640 025d 06000000 		.4byte	.LBE40-.LBB40
 1641 0261 01       		.byte	0x1
 1642 0262 D701     		.2byte	0x1d7
 1643 0264 11       		.uleb128 0x11
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 53


 1644 0265 D9000000 		.4byte	0xd9
 1645 0269 14000000 		.4byte	.LBB42
 1646 026d 18000000 		.4byte	.Ldebug_ranges0+0x18
 1647 0271 01       		.byte	0x1
 1648 0272 DE01     		.2byte	0x1de
 1649 0274 00       		.byte	0
 1650 0275 0C       		.uleb128 0xc
 1651 0276 53030000 		.4byte	.LASF31
 1652 027a 01       		.byte	0x1
 1653 027b 0C02     		.2byte	0x20c
 1654 027d 00000000 		.4byte	.LFB12
 1655 0281 C4000000 		.4byte	.LFE12-.LFB12
 1656 0285 01       		.uleb128 0x1
 1657 0286 9C       		.byte	0x9c
 1658 0287 DA020000 		.4byte	0x2da
 1659 028b 0D       		.uleb128 0xd
 1660 028c D8040000 		.4byte	.LASF32
 1661 0290 01       		.byte	0x1
 1662 0291 0C02     		.2byte	0x20c
 1663 0293 6B000000 		.4byte	0x6b
 1664 0297 01       		.uleb128 0x1
 1665 0298 50       		.byte	0x50
 1666 0299 0F       		.uleb128 0xf
 1667 029a F7020000 		.4byte	.LASF33
 1668 029e 01       		.byte	0x1
 1669 029f 1002     		.2byte	0x210
 1670 02a1 6B000000 		.4byte	0x6b
 1671 02a5 5C000000 		.4byte	.LLST4
 1672 02a9 0F       		.uleb128 0xf
 1673 02aa 80010000 		.4byte	.LASF34
 1674 02ae 01       		.byte	0x1
 1675 02af 1102     		.2byte	0x211
 1676 02b1 6B000000 		.4byte	0x6b
 1677 02b5 8D000000 		.4byte	.LLST5
 1678 02b9 10       		.uleb128 0x10
 1679 02ba D0000000 		.4byte	0xd0
 1680 02be 22000000 		.4byte	.LBB46
 1681 02c2 06000000 		.4byte	.LBE46-.LBB46
 1682 02c6 01       		.byte	0x1
 1683 02c7 2402     		.2byte	0x224
 1684 02c9 10       		.uleb128 0x10
 1685 02ca C8000000 		.4byte	0xc8
 1686 02ce 94000000 		.4byte	.LBB48
 1687 02d2 30000000 		.4byte	.LBE48-.LBB48
 1688 02d6 01       		.byte	0x1
 1689 02d7 4802     		.2byte	0x248
 1690 02d9 00       		.byte	0
 1691 02da 0C       		.uleb128 0xc
 1692 02db 87040000 		.4byte	.LASF35
 1693 02df 01       		.byte	0x1
 1694 02e0 6B02     		.2byte	0x26b
 1695 02e2 00000000 		.4byte	.LFB13
 1696 02e6 0C000000 		.4byte	.LFE13-.LFB13
 1697 02ea 01       		.uleb128 0x1
 1698 02eb 9C       		.byte	0x9c
 1699 02ec FF020000 		.4byte	0x2ff
 1700 02f0 0D       		.uleb128 0xd
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 54


 1701 02f1 16000000 		.4byte	.LASF36
 1702 02f5 01       		.byte	0x1
 1703 02f6 6B02     		.2byte	0x26b
 1704 02f8 6B000000 		.4byte	0x6b
 1705 02fc 01       		.uleb128 0x1
 1706 02fd 50       		.byte	0x50
 1707 02fe 00       		.byte	0
 1708 02ff 0E       		.uleb128 0xe
 1709 0300 BB010000 		.4byte	.LASF37
 1710 0304 01       		.byte	0x1
 1711 0305 9502     		.2byte	0x295
 1712 0307 6B000000 		.4byte	0x6b
 1713 030b 00000000 		.4byte	.LFB14
 1714 030f 5C000000 		.4byte	.LFE14-.LFB14
 1715 0313 01       		.uleb128 0x1
 1716 0314 9C       		.byte	0x9c
 1717 0315 48030000 		.4byte	0x348
 1718 0319 12       		.uleb128 0x12
 1719 031a A2030000 		.4byte	.LASF38
 1720 031e 01       		.byte	0x1
 1721 031f 9702     		.2byte	0x297
 1722 0321 6B000000 		.4byte	0x6b
 1723 0325 01       		.uleb128 0x1
 1724 0326 50       		.byte	0x50
 1725 0327 10       		.uleb128 0x10
 1726 0328 E2000000 		.4byte	0xe2
 1727 032c 00000000 		.4byte	.LBB50
 1728 0330 06000000 		.4byte	.LBE50-.LBB50
 1729 0334 01       		.byte	0x1
 1730 0335 9C02     		.2byte	0x29c
 1731 0337 10       		.uleb128 0x10
 1732 0338 D9000000 		.4byte	0xd9
 1733 033c 3A000000 		.4byte	.LBB52
 1734 0340 06000000 		.4byte	.LBE52-.LBB52
 1735 0344 01       		.byte	0x1
 1736 0345 B102     		.2byte	0x2b1
 1737 0347 00       		.byte	0
 1738 0348 0E       		.uleb128 0xe
 1739 0349 8B030000 		.4byte	.LASF39
 1740 034d 01       		.byte	0x1
 1741 034e D702     		.2byte	0x2d7
 1742 0350 6B000000 		.4byte	0x6b
 1743 0354 00000000 		.4byte	.LFB15
 1744 0358 48000000 		.4byte	.LFE15-.LFB15
 1745 035c 01       		.uleb128 0x1
 1746 035d 9C       		.byte	0x9c
 1747 035e 93030000 		.4byte	0x393
 1748 0362 0F       		.uleb128 0xf
 1749 0363 93020000 		.4byte	.LASF40
 1750 0367 01       		.byte	0x1
 1751 0368 D902     		.2byte	0x2d9
 1752 036a 6B000000 		.4byte	0x6b
 1753 036e C1000000 		.4byte	.LLST6
 1754 0372 10       		.uleb128 0x10
 1755 0373 E2000000 		.4byte	0xe2
 1756 0377 00000000 		.4byte	.LBB54
 1757 037b 06000000 		.4byte	.LBE54-.LBB54
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 55


 1758 037f 01       		.byte	0x1
 1759 0380 DE02     		.2byte	0x2de
 1760 0382 10       		.uleb128 0x10
 1761 0383 D9000000 		.4byte	0xd9
 1762 0387 30000000 		.4byte	.LBB56
 1763 038b 06000000 		.4byte	.LBE56-.LBB56
 1764 038f 01       		.byte	0x1
 1765 0390 EE02     		.2byte	0x2ee
 1766 0392 00       		.byte	0
 1767 0393 0E       		.uleb128 0xe
 1768 0394 A4000000 		.4byte	.LASF41
 1769 0398 01       		.byte	0x1
 1770 0399 1803     		.2byte	0x318
 1771 039b 6B000000 		.4byte	0x6b
 1772 039f 00000000 		.4byte	.LFB16
 1773 03a3 48000000 		.4byte	.LFE16-.LFB16
 1774 03a7 01       		.uleb128 0x1
 1775 03a8 9C       		.byte	0x9c
 1776 03a9 DE030000 		.4byte	0x3de
 1777 03ad 0F       		.uleb128 0xf
 1778 03ae 93020000 		.4byte	.LASF40
 1779 03b2 01       		.byte	0x1
 1780 03b3 1A03     		.2byte	0x31a
 1781 03b5 6B000000 		.4byte	0x6b
 1782 03b9 DF000000 		.4byte	.LLST7
 1783 03bd 10       		.uleb128 0x10
 1784 03be D0000000 		.4byte	0xd0
 1785 03c2 00000000 		.4byte	.LBB58
 1786 03c6 06000000 		.4byte	.LBE58-.LBB58
 1787 03ca 01       		.byte	0x1
 1788 03cb 1F03     		.2byte	0x31f
 1789 03cd 10       		.uleb128 0x10
 1790 03ce C8000000 		.4byte	0xc8
 1791 03d2 30000000 		.4byte	.LBB60
 1792 03d6 06000000 		.4byte	.LBE60-.LBB60
 1793 03da 01       		.byte	0x1
 1794 03db 2F03     		.2byte	0x32f
 1795 03dd 00       		.byte	0
 1796 03de 0C       		.uleb128 0xc
 1797 03df D8030000 		.4byte	.LASF42
 1798 03e3 01       		.byte	0x1
 1799 03e4 6A03     		.2byte	0x36a
 1800 03e6 00000000 		.4byte	.LFB17
 1801 03ea 48000000 		.4byte	.LFE17-.LFB17
 1802 03ee 01       		.uleb128 0x1
 1803 03ef 9C       		.byte	0x9c
 1804 03f0 15040000 		.4byte	0x415
 1805 03f4 10       		.uleb128 0x10
 1806 03f5 E2000000 		.4byte	0xe2
 1807 03f9 14000000 		.4byte	.LBB62
 1808 03fd 06000000 		.4byte	.LBE62-.LBB62
 1809 0401 01       		.byte	0x1
 1810 0402 7503     		.2byte	0x375
 1811 0404 10       		.uleb128 0x10
 1812 0405 D9000000 		.4byte	0xd9
 1813 0409 26000000 		.4byte	.LBB64
 1814 040d 22000000 		.4byte	.LBE64-.LBB64
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 56


 1815 0411 01       		.byte	0x1
 1816 0412 7B03     		.2byte	0x37b
 1817 0414 00       		.byte	0
 1818 0415 0C       		.uleb128 0xc
 1819 0416 62040000 		.4byte	.LASF43
 1820 041a 01       		.byte	0x1
 1821 041b A303     		.2byte	0x3a3
 1822 041d 00000000 		.4byte	.LFB18
 1823 0421 5C000000 		.4byte	.LFE18-.LFB18
 1824 0425 01       		.uleb128 0x1
 1825 0426 9C       		.byte	0x9c
 1826 0427 6E040000 		.4byte	0x46e
 1827 042b 0F       		.uleb128 0xf
 1828 042c 51040000 		.4byte	.LASF24
 1829 0430 01       		.byte	0x1
 1830 0431 A503     		.2byte	0x3a5
 1831 0433 6B000000 		.4byte	0x6b
 1832 0437 FD000000 		.4byte	.LLST8
 1833 043b 11       		.uleb128 0x11
 1834 043c D0000000 		.4byte	0xd0
 1835 0440 1C000000 		.4byte	.LBB66
 1836 0444 30000000 		.4byte	.Ldebug_ranges0+0x30
 1837 0448 01       		.byte	0x1
 1838 0449 BF03     		.2byte	0x3bf
 1839 044b 10       		.uleb128 0x10
 1840 044c C8000000 		.4byte	0xc8
 1841 0450 3A000000 		.4byte	.LBB70
 1842 0454 22000000 		.4byte	.LBE70-.LBB70
 1843 0458 01       		.byte	0x1
 1844 0459 C903     		.2byte	0x3c9
 1845 045b 0A       		.uleb128 0xa
 1846 045c 06000000 		.4byte	.LVL29
 1847 0460 0A070000 		.4byte	0x70a
 1848 0464 0A       		.uleb128 0xa
 1849 0465 1C000000 		.4byte	.LVL30
 1850 0469 15070000 		.4byte	0x715
 1851 046d 00       		.byte	0
 1852 046e 0C       		.uleb128 0xc
 1853 046f DF040000 		.4byte	.LASF44
 1854 0473 01       		.byte	0x1
 1855 0474 1704     		.2byte	0x417
 1856 0476 00000000 		.4byte	.LFB19
 1857 047a 18000000 		.4byte	.LFE19-.LFB19
 1858 047e 01       		.uleb128 0x1
 1859 047f 9C       		.byte	0x9c
 1860 0480 BE040000 		.4byte	0x4be
 1861 0484 13       		.uleb128 0x13
 1862 0485 D1030000 		.4byte	.LASF45
 1863 0489 01       		.byte	0x1
 1864 048a 1704     		.2byte	0x417
 1865 048c BE040000 		.4byte	0x4be
 1866 0490 10010000 		.4byte	.LLST9
 1867 0494 13       		.uleb128 0x13
 1868 0495 81030000 		.4byte	.LASF46
 1869 0499 01       		.byte	0x1
 1870 049a 1704     		.2byte	0x417
 1871 049c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 57


 1872 04a0 31010000 		.4byte	.LLST10
 1873 04a4 0F       		.uleb128 0xf
 1874 04a5 CC020000 		.4byte	.LASF47
 1875 04a9 01       		.byte	0x1
 1876 04aa 1A04     		.2byte	0x41a
 1877 04ac 6B000000 		.4byte	0x6b
 1878 04b0 5A010000 		.4byte	.LLST11
 1879 04b4 0A       		.uleb128 0xa
 1880 04b5 12000000 		.4byte	.LVL35
 1881 04b9 75020000 		.4byte	0x275
 1882 04bd 00       		.byte	0
 1883 04be 14       		.uleb128 0x14
 1884 04bf 04       		.byte	0x4
 1885 04c0 C4040000 		.4byte	0x4c4
 1886 04c4 15       		.uleb128 0x15
 1887 04c5 6B000000 		.4byte	0x6b
 1888 04c9 0C       		.uleb128 0xc
 1889 04ca C0030000 		.4byte	.LASF48
 1890 04ce 01       		.byte	0x1
 1891 04cf 3704     		.2byte	0x437
 1892 04d1 00000000 		.4byte	.LFB20
 1893 04d5 3C000000 		.4byte	.LFE20-.LFB20
 1894 04d9 01       		.uleb128 0x1
 1895 04da 9C       		.byte	0x9c
 1896 04db 02050000 		.4byte	0x502
 1897 04df 0F       		.uleb128 0xf
 1898 04e0 51040000 		.4byte	.LASF24
 1899 04e4 01       		.byte	0x1
 1900 04e5 3904     		.2byte	0x439
 1901 04e7 6B000000 		.4byte	0x6b
 1902 04eb 94010000 		.4byte	.LLST12
 1903 04ef 0A       		.uleb128 0xa
 1904 04f0 14000000 		.4byte	.LVL37
 1905 04f4 0A070000 		.4byte	0x70a
 1906 04f8 16       		.uleb128 0x16
 1907 04f9 2E000000 		.4byte	.LVL38
 1908 04fd 15070000 		.4byte	0x715
 1909 0501 00       		.byte	0
 1910 0502 08       		.uleb128 0x8
 1911 0503 87020000 		.4byte	.LASF49
 1912 0507 01       		.byte	0x1
 1913 0508 43       		.byte	0x43
 1914 0509 00000000 		.4byte	.LFB0
 1915 050d 90000000 		.4byte	.LFE0-.LFB0
 1916 0511 01       		.uleb128 0x1
 1917 0512 9C       		.byte	0x9c
 1918 0513 8B050000 		.4byte	0x58b
 1919 0517 17       		.uleb128 0x17
 1920 0518 16000000 		.4byte	.LVL39
 1921 051c 20070000 		.4byte	0x720
 1922 0520 2A050000 		.4byte	0x52a
 1923 0524 18       		.uleb128 0x18
 1924 0525 01       		.uleb128 0x1
 1925 0526 50       		.byte	0x50
 1926 0527 01       		.uleb128 0x1
 1927 0528 31       		.byte	0x31
 1928 0529 00       		.byte	0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 58


 1929 052a 17       		.uleb128 0x17
 1930 052b 1E000000 		.4byte	.LVL40
 1931 052f 2B070000 		.4byte	0x72b
 1932 0533 43050000 		.4byte	0x543
 1933 0537 18       		.uleb128 0x18
 1934 0538 01       		.uleb128 0x1
 1935 0539 50       		.byte	0x50
 1936 053a 01       		.uleb128 0x1
 1937 053b 31       		.byte	0x31
 1938 053c 18       		.uleb128 0x18
 1939 053d 01       		.uleb128 0x1
 1940 053e 51       		.byte	0x51
 1941 053f 02       		.uleb128 0x2
 1942 0540 74       		.byte	0x74
 1943 0541 00       		.sleb128 0
 1944 0542 00       		.byte	0
 1945 0543 17       		.uleb128 0x17
 1946 0544 2A000000 		.4byte	.LVL41
 1947 0548 20070000 		.4byte	0x720
 1948 054c 56050000 		.4byte	0x556
 1949 0550 18       		.uleb128 0x18
 1950 0551 01       		.uleb128 0x1
 1951 0552 50       		.byte	0x50
 1952 0553 01       		.uleb128 0x1
 1953 0554 30       		.byte	0x30
 1954 0555 00       		.byte	0
 1955 0556 17       		.uleb128 0x17
 1956 0557 32000000 		.4byte	.LVL42
 1957 055b 2B070000 		.4byte	0x72b
 1958 055f 6F050000 		.4byte	0x56f
 1959 0563 18       		.uleb128 0x18
 1960 0564 01       		.uleb128 0x1
 1961 0565 50       		.byte	0x50
 1962 0566 01       		.uleb128 0x1
 1963 0567 30       		.byte	0x30
 1964 0568 18       		.uleb128 0x18
 1965 0569 01       		.uleb128 0x1
 1966 056a 51       		.byte	0x51
 1967 056b 02       		.uleb128 0x2
 1968 056c 74       		.byte	0x74
 1969 056d 00       		.sleb128 0
 1970 056e 00       		.byte	0
 1971 056f 0A       		.uleb128 0xa
 1972 0570 36000000 		.4byte	.LVL43
 1973 0574 C9040000 		.4byte	0x4c9
 1974 0578 0A       		.uleb128 0xa
 1975 0579 54000000 		.4byte	.LVL44
 1976 057d DF010000 		.4byte	0x1df
 1977 0581 0A       		.uleb128 0xa
 1978 0582 58000000 		.4byte	.LVL45
 1979 0586 2A020000 		.4byte	0x22a
 1980 058a 00       		.byte	0
 1981 058b 08       		.uleb128 0x8
 1982 058c 01040000 		.4byte	.LASF50
 1983 0590 01       		.byte	0x1
 1984 0591 BB       		.byte	0xbb
 1985 0592 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 59


 1986 0596 1C000000 		.4byte	.LFE2-.LFB2
 1987 059a 01       		.uleb128 0x1
 1988 059b 9C       		.byte	0x9c
 1989 059c B3050000 		.4byte	0x5b3
 1990 05a0 0A       		.uleb128 0xa
 1991 05a1 0C000000 		.4byte	.LVL46
 1992 05a5 02050000 		.4byte	0x502
 1993 05a9 16       		.uleb128 0x16
 1994 05aa 18000000 		.4byte	.LVL47
 1995 05ae EB000000 		.4byte	0xeb
 1996 05b2 00       		.byte	0
 1997 05b3 19       		.uleb128 0x19
 1998 05b4 70030000 		.4byte	.LASF51
 1999 05b8 01       		.byte	0x1
 2000 05b9 6C04     		.2byte	0x46c
 2001 05bb 00000000 		.4byte	.LFB21
 2002 05bf 10000000 		.4byte	.LFE21-.LFB21
 2003 05c3 01       		.uleb128 0x1
 2004 05c4 9C       		.byte	0x9c
 2005 05c5 19       		.uleb128 0x19
 2006 05c6 02030000 		.4byte	.LASF52
 2007 05ca 01       		.byte	0x1
 2008 05cb 8904     		.2byte	0x489
 2009 05cd 00000000 		.4byte	.LFB22
 2010 05d1 10000000 		.4byte	.LFE22-.LFB22
 2011 05d5 01       		.uleb128 0x1
 2012 05d6 9C       		.byte	0x9c
 2013 05d7 0C       		.uleb128 0xc
 2014 05d8 11020000 		.4byte	.LASF53
 2015 05dc 01       		.byte	0x1
 2016 05dd A704     		.2byte	0x4a7
 2017 05df 00000000 		.4byte	.LFB23
 2018 05e3 10000000 		.4byte	.LFE23-.LFB23
 2019 05e7 01       		.uleb128 0x1
 2020 05e8 9C       		.byte	0x9c
 2021 05e9 FC050000 		.4byte	0x5fc
 2022 05ed 0D       		.uleb128 0xd
 2023 05ee D5020000 		.4byte	.LASF27
 2024 05f2 01       		.byte	0x1
 2025 05f3 A704     		.2byte	0x4a7
 2026 05f5 6B000000 		.4byte	0x6b
 2027 05f9 01       		.uleb128 0x1
 2028 05fa 50       		.byte	0x50
 2029 05fb 00       		.byte	0
 2030 05fc 0E       		.uleb128 0xe
 2031 05fd AB020000 		.4byte	.LASF54
 2032 0601 01       		.byte	0x1
 2033 0602 CA04     		.2byte	0x4ca
 2034 0604 6B000000 		.4byte	0x6b
 2035 0608 00000000 		.4byte	.LFB24
 2036 060c 48000000 		.4byte	.LFE24-.LFB24
 2037 0610 01       		.uleb128 0x1
 2038 0611 9C       		.byte	0x9c
 2039 0612 35060000 		.4byte	0x635
 2040 0616 1A       		.uleb128 0x1a
 2041 0617 72000000 		.4byte	.LASF28
 2042 061b 01       		.byte	0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 60


 2043 061c CC04     		.2byte	0x4cc
 2044 061e 6B000000 		.4byte	0x6b
 2045 0622 0A       		.uleb128 0xa
 2046 0623 06000000 		.4byte	.LVL49
 2047 0627 C5050000 		.4byte	0x5c5
 2048 062b 0A       		.uleb128 0xa
 2049 062c 26000000 		.4byte	.LVL50
 2050 0630 B3050000 		.4byte	0x5b3
 2051 0634 00       		.byte	0
 2052 0635 1B       		.uleb128 0x1b
 2053 0636 BD020000 		.4byte	.LASF55
 2054 063a 01       		.byte	0x1
 2055 063b 26       		.byte	0x26
 2056 063c 6B000000 		.4byte	0x6b
 2057 0640 05       		.uleb128 0x5
 2058 0641 03       		.byte	0x3
 2059 0642 00000000 		.4byte	SPIS_1_initVar
 2060 0646 1B       		.uleb128 0x1b
 2061 0647 A9030000 		.4byte	.LASF56
 2062 064b 01       		.byte	0x1
 2063 064c 28       		.byte	0x28
 2064 064d A4000000 		.4byte	0xa4
 2065 0651 05       		.uleb128 0x5
 2066 0652 03       		.byte	0x3
 2067 0653 00000000 		.4byte	SPIS_1_swStatusTx
 2068 0657 1B       		.uleb128 0x1b
 2069 0658 35000000 		.4byte	.LASF57
 2070 065c 01       		.byte	0x1
 2071 065d 29       		.byte	0x29
 2072 065e A4000000 		.4byte	0xa4
 2073 0662 05       		.uleb128 0x5
 2074 0663 03       		.byte	0x3
 2075 0664 00000000 		.4byte	SPIS_1_swStatusRx
 2076 0668 1C       		.uleb128 0x1c
 2077 0669 A4000000 		.4byte	0xa4
 2078 066d 78060000 		.4byte	0x678
 2079 0671 1D       		.uleb128 0x1d
 2080 0672 C1000000 		.4byte	0xc1
 2081 0676 07       		.byte	0x7
 2082 0677 00       		.byte	0
 2083 0678 1B       		.uleb128 0x1b
 2084 0679 90010000 		.4byte	.LASF58
 2085 067d 01       		.byte	0x1
 2086 067e 1F       		.byte	0x1f
 2087 067f 89060000 		.4byte	0x689
 2088 0683 05       		.uleb128 0x5
 2089 0684 03       		.byte	0x3
 2090 0685 00000000 		.4byte	SPIS_1_rxBuffer
 2091 0689 05       		.uleb128 0x5
 2092 068a 68060000 		.4byte	0x668
 2093 068e 1B       		.uleb128 0x1b
 2094 068f FD010000 		.4byte	.LASF59
 2095 0693 01       		.byte	0x1
 2096 0694 20       		.byte	0x20
 2097 0695 A4000000 		.4byte	0xa4
 2098 0699 05       		.uleb128 0x5
 2099 069a 03       		.byte	0x3
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 61


 2100 069b 00000000 		.4byte	SPIS_1_rxBufferRead
 2101 069f 1B       		.uleb128 0x1b
 2102 06a0 7C000000 		.4byte	.LASF60
 2103 06a4 01       		.byte	0x1
 2104 06a5 21       		.byte	0x21
 2105 06a6 A4000000 		.4byte	0xa4
 2106 06aa 05       		.uleb128 0x5
 2107 06ab 03       		.byte	0x3
 2108 06ac 00000000 		.4byte	SPIS_1_rxBufferWrite
 2109 06b0 1B       		.uleb128 0x1b
 2110 06b1 63010000 		.4byte	.LASF61
 2111 06b5 01       		.byte	0x1
 2112 06b6 22       		.byte	0x22
 2113 06b7 A4000000 		.4byte	0xa4
 2114 06bb 05       		.uleb128 0x5
 2115 06bc 03       		.byte	0x3
 2116 06bd 00000000 		.4byte	SPIS_1_rxBufferFull
 2117 06c1 1B       		.uleb128 0x1b
 2118 06c2 77040000 		.4byte	.LASF62
 2119 06c6 01       		.byte	0x1
 2120 06c7 16       		.byte	0x16
 2121 06c8 D2060000 		.4byte	0x6d2
 2122 06cc 05       		.uleb128 0x5
 2123 06cd 03       		.byte	0x3
 2124 06ce 00000000 		.4byte	SPIS_1_txBuffer
 2125 06d2 05       		.uleb128 0x5
 2126 06d3 68060000 		.4byte	0x668
 2127 06d7 1B       		.uleb128 0x1b
 2128 06d8 21000000 		.4byte	.LASF63
 2129 06dc 01       		.byte	0x1
 2130 06dd 17       		.byte	0x17
 2131 06de A4000000 		.4byte	0xa4
 2132 06e2 05       		.uleb128 0x5
 2133 06e3 03       		.byte	0x3
 2134 06e4 00000000 		.4byte	SPIS_1_txBufferRead
 2135 06e8 1B       		.uleb128 0x1b
 2136 06e9 2B030000 		.4byte	.LASF64
 2137 06ed 01       		.byte	0x1
 2138 06ee 18       		.byte	0x18
 2139 06ef A4000000 		.4byte	0xa4
 2140 06f3 05       		.uleb128 0x5
 2141 06f4 03       		.byte	0x3
 2142 06f5 00000000 		.4byte	SPIS_1_txBufferWrite
 2143 06f9 1B       		.uleb128 0x1b
 2144 06fa ED030000 		.4byte	.LASF65
 2145 06fe 01       		.byte	0x1
 2146 06ff 19       		.byte	0x19
 2147 0700 A4000000 		.4byte	0xa4
 2148 0704 05       		.uleb128 0x5
 2149 0705 03       		.byte	0x3
 2150 0706 00000000 		.4byte	SPIS_1_txBufferFull
 2151 070a 1E       		.uleb128 0x1e
 2152 070b 70020000 		.4byte	.LASF66
 2153 070f 70020000 		.4byte	.LASF66
 2154 0713 03       		.byte	0x3
 2155 0714 7D       		.byte	0x7d
 2156 0715 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 62


 2157 0716 00000000 		.4byte	.LASF67
 2158 071a 00000000 		.4byte	.LASF67
 2159 071e 03       		.byte	0x3
 2160 071f 7E       		.byte	0x7e
 2161 0720 1E       		.uleb128 0x1e
 2162 0721 EE010000 		.4byte	.LASF68
 2163 0725 EE010000 		.4byte	.LASF68
 2164 0729 03       		.byte	0x3
 2165 072a 88       		.byte	0x88
 2166 072b 1E       		.uleb128 0x1e
 2167 072c 14030000 		.4byte	.LASF69
 2168 0730 14030000 		.4byte	.LASF69
 2169 0734 03       		.byte	0x3
 2170 0735 8B       		.byte	0x8b
 2171 0736 00       		.byte	0
 2172              		.section	.debug_abbrev,"",%progbits
 2173              	.Ldebug_abbrev0:
 2174 0000 01       		.uleb128 0x1
 2175 0001 11       		.uleb128 0x11
 2176 0002 01       		.byte	0x1
 2177 0003 25       		.uleb128 0x25
 2178 0004 0E       		.uleb128 0xe
 2179 0005 13       		.uleb128 0x13
 2180 0006 0B       		.uleb128 0xb
 2181 0007 03       		.uleb128 0x3
 2182 0008 0E       		.uleb128 0xe
 2183 0009 1B       		.uleb128 0x1b
 2184 000a 0E       		.uleb128 0xe
 2185 000b 55       		.uleb128 0x55
 2186 000c 17       		.uleb128 0x17
 2187 000d 11       		.uleb128 0x11
 2188 000e 01       		.uleb128 0x1
 2189 000f 10       		.uleb128 0x10
 2190 0010 17       		.uleb128 0x17
 2191 0011 00       		.byte	0
 2192 0012 00       		.byte	0
 2193 0013 02       		.uleb128 0x2
 2194 0014 24       		.uleb128 0x24
 2195 0015 00       		.byte	0
 2196 0016 0B       		.uleb128 0xb
 2197 0017 0B       		.uleb128 0xb
 2198 0018 3E       		.uleb128 0x3e
 2199 0019 0B       		.uleb128 0xb
 2200 001a 03       		.uleb128 0x3
 2201 001b 0E       		.uleb128 0xe
 2202 001c 00       		.byte	0
 2203 001d 00       		.byte	0
 2204 001e 03       		.uleb128 0x3
 2205 001f 24       		.uleb128 0x24
 2206 0020 00       		.byte	0
 2207 0021 0B       		.uleb128 0xb
 2208 0022 0B       		.uleb128 0xb
 2209 0023 3E       		.uleb128 0x3e
 2210 0024 0B       		.uleb128 0xb
 2211 0025 03       		.uleb128 0x3
 2212 0026 08       		.uleb128 0x8
 2213 0027 00       		.byte	0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 63


 2214 0028 00       		.byte	0
 2215 0029 04       		.uleb128 0x4
 2216 002a 16       		.uleb128 0x16
 2217 002b 00       		.byte	0
 2218 002c 03       		.uleb128 0x3
 2219 002d 0E       		.uleb128 0xe
 2220 002e 3A       		.uleb128 0x3a
 2221 002f 0B       		.uleb128 0xb
 2222 0030 3B       		.uleb128 0x3b
 2223 0031 05       		.uleb128 0x5
 2224 0032 49       		.uleb128 0x49
 2225 0033 13       		.uleb128 0x13
 2226 0034 00       		.byte	0
 2227 0035 00       		.byte	0
 2228 0036 05       		.uleb128 0x5
 2229 0037 35       		.uleb128 0x35
 2230 0038 00       		.byte	0
 2231 0039 49       		.uleb128 0x49
 2232 003a 13       		.uleb128 0x13
 2233 003b 00       		.byte	0
 2234 003c 00       		.byte	0
 2235 003d 06       		.uleb128 0x6
 2236 003e 2E       		.uleb128 0x2e
 2237 003f 00       		.byte	0
 2238 0040 3F       		.uleb128 0x3f
 2239 0041 19       		.uleb128 0x19
 2240 0042 03       		.uleb128 0x3
 2241 0043 0E       		.uleb128 0xe
 2242 0044 3A       		.uleb128 0x3a
 2243 0045 0B       		.uleb128 0xb
 2244 0046 3B       		.uleb128 0x3b
 2245 0047 0B       		.uleb128 0xb
 2246 0048 27       		.uleb128 0x27
 2247 0049 19       		.uleb128 0x19
 2248 004a 20       		.uleb128 0x20
 2249 004b 0B       		.uleb128 0xb
 2250 004c 00       		.byte	0
 2251 004d 00       		.byte	0
 2252 004e 07       		.uleb128 0x7
 2253 004f 2E       		.uleb128 0x2e
 2254 0050 00       		.byte	0
 2255 0051 3F       		.uleb128 0x3f
 2256 0052 19       		.uleb128 0x19
 2257 0053 03       		.uleb128 0x3
 2258 0054 0E       		.uleb128 0xe
 2259 0055 3A       		.uleb128 0x3a
 2260 0056 0B       		.uleb128 0xb
 2261 0057 3B       		.uleb128 0x3b
 2262 0058 05       		.uleb128 0x5
 2263 0059 27       		.uleb128 0x27
 2264 005a 19       		.uleb128 0x19
 2265 005b 20       		.uleb128 0x20
 2266 005c 0B       		.uleb128 0xb
 2267 005d 00       		.byte	0
 2268 005e 00       		.byte	0
 2269 005f 08       		.uleb128 0x8
 2270 0060 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 64


 2271 0061 01       		.byte	0x1
 2272 0062 3F       		.uleb128 0x3f
 2273 0063 19       		.uleb128 0x19
 2274 0064 03       		.uleb128 0x3
 2275 0065 0E       		.uleb128 0xe
 2276 0066 3A       		.uleb128 0x3a
 2277 0067 0B       		.uleb128 0xb
 2278 0068 3B       		.uleb128 0x3b
 2279 0069 0B       		.uleb128 0xb
 2280 006a 27       		.uleb128 0x27
 2281 006b 19       		.uleb128 0x19
 2282 006c 11       		.uleb128 0x11
 2283 006d 01       		.uleb128 0x1
 2284 006e 12       		.uleb128 0x12
 2285 006f 06       		.uleb128 0x6
 2286 0070 40       		.uleb128 0x40
 2287 0071 18       		.uleb128 0x18
 2288 0072 9742     		.uleb128 0x2117
 2289 0074 19       		.uleb128 0x19
 2290 0075 01       		.uleb128 0x1
 2291 0076 13       		.uleb128 0x13
 2292 0077 00       		.byte	0
 2293 0078 00       		.byte	0
 2294 0079 09       		.uleb128 0x9
 2295 007a 34       		.uleb128 0x34
 2296 007b 00       		.byte	0
 2297 007c 03       		.uleb128 0x3
 2298 007d 0E       		.uleb128 0xe
 2299 007e 3A       		.uleb128 0x3a
 2300 007f 0B       		.uleb128 0xb
 2301 0080 3B       		.uleb128 0x3b
 2302 0081 0B       		.uleb128 0xb
 2303 0082 49       		.uleb128 0x49
 2304 0083 13       		.uleb128 0x13
 2305 0084 02       		.uleb128 0x2
 2306 0085 17       		.uleb128 0x17
 2307 0086 00       		.byte	0
 2308 0087 00       		.byte	0
 2309 0088 0A       		.uleb128 0xa
 2310 0089 898201   		.uleb128 0x4109
 2311 008c 00       		.byte	0
 2312 008d 11       		.uleb128 0x11
 2313 008e 01       		.uleb128 0x1
 2314 008f 31       		.uleb128 0x31
 2315 0090 13       		.uleb128 0x13
 2316 0091 00       		.byte	0
 2317 0092 00       		.byte	0
 2318 0093 0B       		.uleb128 0xb
 2319 0094 2E       		.uleb128 0x2e
 2320 0095 00       		.byte	0
 2321 0096 31       		.uleb128 0x31
 2322 0097 13       		.uleb128 0x13
 2323 0098 11       		.uleb128 0x11
 2324 0099 01       		.uleb128 0x1
 2325 009a 12       		.uleb128 0x12
 2326 009b 06       		.uleb128 0x6
 2327 009c 40       		.uleb128 0x40
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 65


 2328 009d 18       		.uleb128 0x18
 2329 009e 9742     		.uleb128 0x2117
 2330 00a0 19       		.uleb128 0x19
 2331 00a1 00       		.byte	0
 2332 00a2 00       		.byte	0
 2333 00a3 0C       		.uleb128 0xc
 2334 00a4 2E       		.uleb128 0x2e
 2335 00a5 01       		.byte	0x1
 2336 00a6 3F       		.uleb128 0x3f
 2337 00a7 19       		.uleb128 0x19
 2338 00a8 03       		.uleb128 0x3
 2339 00a9 0E       		.uleb128 0xe
 2340 00aa 3A       		.uleb128 0x3a
 2341 00ab 0B       		.uleb128 0xb
 2342 00ac 3B       		.uleb128 0x3b
 2343 00ad 05       		.uleb128 0x5
 2344 00ae 27       		.uleb128 0x27
 2345 00af 19       		.uleb128 0x19
 2346 00b0 11       		.uleb128 0x11
 2347 00b1 01       		.uleb128 0x1
 2348 00b2 12       		.uleb128 0x12
 2349 00b3 06       		.uleb128 0x6
 2350 00b4 40       		.uleb128 0x40
 2351 00b5 18       		.uleb128 0x18
 2352 00b6 9742     		.uleb128 0x2117
 2353 00b8 19       		.uleb128 0x19
 2354 00b9 01       		.uleb128 0x1
 2355 00ba 13       		.uleb128 0x13
 2356 00bb 00       		.byte	0
 2357 00bc 00       		.byte	0
 2358 00bd 0D       		.uleb128 0xd
 2359 00be 05       		.uleb128 0x5
 2360 00bf 00       		.byte	0
 2361 00c0 03       		.uleb128 0x3
 2362 00c1 0E       		.uleb128 0xe
 2363 00c2 3A       		.uleb128 0x3a
 2364 00c3 0B       		.uleb128 0xb
 2365 00c4 3B       		.uleb128 0x3b
 2366 00c5 05       		.uleb128 0x5
 2367 00c6 49       		.uleb128 0x49
 2368 00c7 13       		.uleb128 0x13
 2369 00c8 02       		.uleb128 0x2
 2370 00c9 18       		.uleb128 0x18
 2371 00ca 00       		.byte	0
 2372 00cb 00       		.byte	0
 2373 00cc 0E       		.uleb128 0xe
 2374 00cd 2E       		.uleb128 0x2e
 2375 00ce 01       		.byte	0x1
 2376 00cf 3F       		.uleb128 0x3f
 2377 00d0 19       		.uleb128 0x19
 2378 00d1 03       		.uleb128 0x3
 2379 00d2 0E       		.uleb128 0xe
 2380 00d3 3A       		.uleb128 0x3a
 2381 00d4 0B       		.uleb128 0xb
 2382 00d5 3B       		.uleb128 0x3b
 2383 00d6 05       		.uleb128 0x5
 2384 00d7 27       		.uleb128 0x27
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 66


 2385 00d8 19       		.uleb128 0x19
 2386 00d9 49       		.uleb128 0x49
 2387 00da 13       		.uleb128 0x13
 2388 00db 11       		.uleb128 0x11
 2389 00dc 01       		.uleb128 0x1
 2390 00dd 12       		.uleb128 0x12
 2391 00de 06       		.uleb128 0x6
 2392 00df 40       		.uleb128 0x40
 2393 00e0 18       		.uleb128 0x18
 2394 00e1 9742     		.uleb128 0x2117
 2395 00e3 19       		.uleb128 0x19
 2396 00e4 01       		.uleb128 0x1
 2397 00e5 13       		.uleb128 0x13
 2398 00e6 00       		.byte	0
 2399 00e7 00       		.byte	0
 2400 00e8 0F       		.uleb128 0xf
 2401 00e9 34       		.uleb128 0x34
 2402 00ea 00       		.byte	0
 2403 00eb 03       		.uleb128 0x3
 2404 00ec 0E       		.uleb128 0xe
 2405 00ed 3A       		.uleb128 0x3a
 2406 00ee 0B       		.uleb128 0xb
 2407 00ef 3B       		.uleb128 0x3b
 2408 00f0 05       		.uleb128 0x5
 2409 00f1 49       		.uleb128 0x49
 2410 00f2 13       		.uleb128 0x13
 2411 00f3 02       		.uleb128 0x2
 2412 00f4 17       		.uleb128 0x17
 2413 00f5 00       		.byte	0
 2414 00f6 00       		.byte	0
 2415 00f7 10       		.uleb128 0x10
 2416 00f8 1D       		.uleb128 0x1d
 2417 00f9 00       		.byte	0
 2418 00fa 31       		.uleb128 0x31
 2419 00fb 13       		.uleb128 0x13
 2420 00fc 11       		.uleb128 0x11
 2421 00fd 01       		.uleb128 0x1
 2422 00fe 12       		.uleb128 0x12
 2423 00ff 06       		.uleb128 0x6
 2424 0100 58       		.uleb128 0x58
 2425 0101 0B       		.uleb128 0xb
 2426 0102 59       		.uleb128 0x59
 2427 0103 05       		.uleb128 0x5
 2428 0104 00       		.byte	0
 2429 0105 00       		.byte	0
 2430 0106 11       		.uleb128 0x11
 2431 0107 1D       		.uleb128 0x1d
 2432 0108 00       		.byte	0
 2433 0109 31       		.uleb128 0x31
 2434 010a 13       		.uleb128 0x13
 2435 010b 52       		.uleb128 0x52
 2436 010c 01       		.uleb128 0x1
 2437 010d 55       		.uleb128 0x55
 2438 010e 17       		.uleb128 0x17
 2439 010f 58       		.uleb128 0x58
 2440 0110 0B       		.uleb128 0xb
 2441 0111 59       		.uleb128 0x59
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 67


 2442 0112 05       		.uleb128 0x5
 2443 0113 00       		.byte	0
 2444 0114 00       		.byte	0
 2445 0115 12       		.uleb128 0x12
 2446 0116 34       		.uleb128 0x34
 2447 0117 00       		.byte	0
 2448 0118 03       		.uleb128 0x3
 2449 0119 0E       		.uleb128 0xe
 2450 011a 3A       		.uleb128 0x3a
 2451 011b 0B       		.uleb128 0xb
 2452 011c 3B       		.uleb128 0x3b
 2453 011d 05       		.uleb128 0x5
 2454 011e 49       		.uleb128 0x49
 2455 011f 13       		.uleb128 0x13
 2456 0120 02       		.uleb128 0x2
 2457 0121 18       		.uleb128 0x18
 2458 0122 00       		.byte	0
 2459 0123 00       		.byte	0
 2460 0124 13       		.uleb128 0x13
 2461 0125 05       		.uleb128 0x5
 2462 0126 00       		.byte	0
 2463 0127 03       		.uleb128 0x3
 2464 0128 0E       		.uleb128 0xe
 2465 0129 3A       		.uleb128 0x3a
 2466 012a 0B       		.uleb128 0xb
 2467 012b 3B       		.uleb128 0x3b
 2468 012c 05       		.uleb128 0x5
 2469 012d 49       		.uleb128 0x49
 2470 012e 13       		.uleb128 0x13
 2471 012f 02       		.uleb128 0x2
 2472 0130 17       		.uleb128 0x17
 2473 0131 00       		.byte	0
 2474 0132 00       		.byte	0
 2475 0133 14       		.uleb128 0x14
 2476 0134 0F       		.uleb128 0xf
 2477 0135 00       		.byte	0
 2478 0136 0B       		.uleb128 0xb
 2479 0137 0B       		.uleb128 0xb
 2480 0138 49       		.uleb128 0x49
 2481 0139 13       		.uleb128 0x13
 2482 013a 00       		.byte	0
 2483 013b 00       		.byte	0
 2484 013c 15       		.uleb128 0x15
 2485 013d 26       		.uleb128 0x26
 2486 013e 00       		.byte	0
 2487 013f 49       		.uleb128 0x49
 2488 0140 13       		.uleb128 0x13
 2489 0141 00       		.byte	0
 2490 0142 00       		.byte	0
 2491 0143 16       		.uleb128 0x16
 2492 0144 898201   		.uleb128 0x4109
 2493 0147 00       		.byte	0
 2494 0148 11       		.uleb128 0x11
 2495 0149 01       		.uleb128 0x1
 2496 014a 9542     		.uleb128 0x2115
 2497 014c 19       		.uleb128 0x19
 2498 014d 31       		.uleb128 0x31
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 68


 2499 014e 13       		.uleb128 0x13
 2500 014f 00       		.byte	0
 2501 0150 00       		.byte	0
 2502 0151 17       		.uleb128 0x17
 2503 0152 898201   		.uleb128 0x4109
 2504 0155 01       		.byte	0x1
 2505 0156 11       		.uleb128 0x11
 2506 0157 01       		.uleb128 0x1
 2507 0158 31       		.uleb128 0x31
 2508 0159 13       		.uleb128 0x13
 2509 015a 01       		.uleb128 0x1
 2510 015b 13       		.uleb128 0x13
 2511 015c 00       		.byte	0
 2512 015d 00       		.byte	0
 2513 015e 18       		.uleb128 0x18
 2514 015f 8A8201   		.uleb128 0x410a
 2515 0162 00       		.byte	0
 2516 0163 02       		.uleb128 0x2
 2517 0164 18       		.uleb128 0x18
 2518 0165 9142     		.uleb128 0x2111
 2519 0167 18       		.uleb128 0x18
 2520 0168 00       		.byte	0
 2521 0169 00       		.byte	0
 2522 016a 19       		.uleb128 0x19
 2523 016b 2E       		.uleb128 0x2e
 2524 016c 00       		.byte	0
 2525 016d 3F       		.uleb128 0x3f
 2526 016e 19       		.uleb128 0x19
 2527 016f 03       		.uleb128 0x3
 2528 0170 0E       		.uleb128 0xe
 2529 0171 3A       		.uleb128 0x3a
 2530 0172 0B       		.uleb128 0xb
 2531 0173 3B       		.uleb128 0x3b
 2532 0174 05       		.uleb128 0x5
 2533 0175 27       		.uleb128 0x27
 2534 0176 19       		.uleb128 0x19
 2535 0177 11       		.uleb128 0x11
 2536 0178 01       		.uleb128 0x1
 2537 0179 12       		.uleb128 0x12
 2538 017a 06       		.uleb128 0x6
 2539 017b 40       		.uleb128 0x40
 2540 017c 18       		.uleb128 0x18
 2541 017d 9742     		.uleb128 0x2117
 2542 017f 19       		.uleb128 0x19
 2543 0180 00       		.byte	0
 2544 0181 00       		.byte	0
 2545 0182 1A       		.uleb128 0x1a
 2546 0183 34       		.uleb128 0x34
 2547 0184 00       		.byte	0
 2548 0185 03       		.uleb128 0x3
 2549 0186 0E       		.uleb128 0xe
 2550 0187 3A       		.uleb128 0x3a
 2551 0188 0B       		.uleb128 0xb
 2552 0189 3B       		.uleb128 0x3b
 2553 018a 05       		.uleb128 0x5
 2554 018b 49       		.uleb128 0x49
 2555 018c 13       		.uleb128 0x13
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 69


 2556 018d 00       		.byte	0
 2557 018e 00       		.byte	0
 2558 018f 1B       		.uleb128 0x1b
 2559 0190 34       		.uleb128 0x34
 2560 0191 00       		.byte	0
 2561 0192 03       		.uleb128 0x3
 2562 0193 0E       		.uleb128 0xe
 2563 0194 3A       		.uleb128 0x3a
 2564 0195 0B       		.uleb128 0xb
 2565 0196 3B       		.uleb128 0x3b
 2566 0197 0B       		.uleb128 0xb
 2567 0198 49       		.uleb128 0x49
 2568 0199 13       		.uleb128 0x13
 2569 019a 3F       		.uleb128 0x3f
 2570 019b 19       		.uleb128 0x19
 2571 019c 02       		.uleb128 0x2
 2572 019d 18       		.uleb128 0x18
 2573 019e 00       		.byte	0
 2574 019f 00       		.byte	0
 2575 01a0 1C       		.uleb128 0x1c
 2576 01a1 01       		.uleb128 0x1
 2577 01a2 01       		.byte	0x1
 2578 01a3 49       		.uleb128 0x49
 2579 01a4 13       		.uleb128 0x13
 2580 01a5 01       		.uleb128 0x1
 2581 01a6 13       		.uleb128 0x13
 2582 01a7 00       		.byte	0
 2583 01a8 00       		.byte	0
 2584 01a9 1D       		.uleb128 0x1d
 2585 01aa 21       		.uleb128 0x21
 2586 01ab 00       		.byte	0
 2587 01ac 49       		.uleb128 0x49
 2588 01ad 13       		.uleb128 0x13
 2589 01ae 2F       		.uleb128 0x2f
 2590 01af 0B       		.uleb128 0xb
 2591 01b0 00       		.byte	0
 2592 01b1 00       		.byte	0
 2593 01b2 1E       		.uleb128 0x1e
 2594 01b3 2E       		.uleb128 0x2e
 2595 01b4 00       		.byte	0
 2596 01b5 3F       		.uleb128 0x3f
 2597 01b6 19       		.uleb128 0x19
 2598 01b7 3C       		.uleb128 0x3c
 2599 01b8 19       		.uleb128 0x19
 2600 01b9 6E       		.uleb128 0x6e
 2601 01ba 0E       		.uleb128 0xe
 2602 01bb 03       		.uleb128 0x3
 2603 01bc 0E       		.uleb128 0xe
 2604 01bd 3A       		.uleb128 0x3a
 2605 01be 0B       		.uleb128 0xb
 2606 01bf 3B       		.uleb128 0x3b
 2607 01c0 0B       		.uleb128 0xb
 2608 01c1 00       		.byte	0
 2609 01c2 00       		.byte	0
 2610 01c3 00       		.byte	0
 2611              		.section	.debug_loc,"",%progbits
 2612              	.Ldebug_loc0:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 70


 2613              	.LLST0:
 2614 0000 06000000 		.4byte	.LVL0
 2615 0004 23000000 		.4byte	.LVL1-1
 2616 0008 0100     		.2byte	0x1
 2617 000a 50       		.byte	0x50
 2618 000b 00000000 		.4byte	0
 2619 000f 00000000 		.4byte	0
 2620              	.LLST1:
 2621 0013 06000000 		.4byte	.LVL2
 2622 0017 1F000000 		.4byte	.LVL3-1
 2623 001b 0100     		.2byte	0x1
 2624 001d 50       		.byte	0x50
 2625 001e 00000000 		.4byte	0
 2626 0022 00000000 		.4byte	0
 2627              	.LLST2:
 2628 0026 12000000 		.4byte	.LVL6
 2629 002a 1A000000 		.4byte	.LVL7
 2630 002e 0900     		.2byte	0x9
 2631 0030 73       		.byte	0x73
 2632 0031 00       		.sleb128 0
 2633 0032 08       		.byte	0x8
 2634 0033 61       		.byte	0x61
 2635 0034 1A       		.byte	0x1a
 2636 0035 70       		.byte	0x70
 2637 0036 00       		.sleb128 0
 2638 0037 21       		.byte	0x21
 2639 0038 9F       		.byte	0x9f
 2640 0039 00000000 		.4byte	0
 2641 003d 00000000 		.4byte	0
 2642              	.LLST3:
 2643 0041 12000000 		.4byte	.LVL8
 2644 0045 1A000000 		.4byte	.LVL9
 2645 0049 0900     		.2byte	0x9
 2646 004b 73       		.byte	0x73
 2647 004c 00       		.sleb128 0
 2648 004d 08       		.byte	0x8
 2649 004e 61       		.byte	0x61
 2650 004f 1A       		.byte	0x1a
 2651 0050 70       		.byte	0x70
 2652 0051 00       		.sleb128 0
 2653 0052 21       		.byte	0x21
 2654 0053 9F       		.byte	0x9f
 2655 0054 00000000 		.4byte	0
 2656 0058 00000000 		.4byte	0
 2657              	.LLST4:
 2658 005c 36000000 		.4byte	.LVL16
 2659 0060 3C000000 		.4byte	.LVL17
 2660 0064 0100     		.2byte	0x1
 2661 0066 52       		.byte	0x52
 2662 0067 3C000000 		.4byte	.LVL17
 2663 006b 4A000000 		.4byte	.LVL18
 2664 006f 0500     		.2byte	0x5
 2665 0071 03       		.byte	0x3
 2666 0072 00000000 		.4byte	SPIS_1_swStatusTx
 2667 0076 4C000000 		.4byte	.LVL19
 2668 007a 54000000 		.4byte	.LVL20
 2669 007e 0500     		.2byte	0x5
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 71


 2670 0080 03       		.byte	0x3
 2671 0081 00000000 		.4byte	SPIS_1_swStatusTx
 2672 0085 00000000 		.4byte	0
 2673 0089 00000000 		.4byte	0
 2674              	.LLST5:
 2675 008d 08000000 		.4byte	.LVL11
 2676 0091 14000000 		.4byte	.LVL12
 2677 0095 0100     		.2byte	0x1
 2678 0097 52       		.byte	0x52
 2679 0098 14000000 		.4byte	.LVL12
 2680 009c 16000000 		.4byte	.LVL13
 2681 00a0 0100     		.2byte	0x1
 2682 00a2 53       		.byte	0x53
 2683 00a3 16000000 		.4byte	.LVL13
 2684 00a7 18000000 		.4byte	.LVL14
 2685 00ab 0100     		.2byte	0x1
 2686 00ad 52       		.byte	0x52
 2687 00ae 18000000 		.4byte	.LVL14
 2688 00b2 20000000 		.4byte	.LVL15
 2689 00b6 0100     		.2byte	0x1
 2690 00b8 53       		.byte	0x53
 2691 00b9 00000000 		.4byte	0
 2692 00bd 00000000 		.4byte	0
 2693              	.LLST6:
 2694 00c1 2C000000 		.4byte	.LVL23
 2695 00c5 2E000000 		.4byte	.LVL24
 2696 00c9 0100     		.2byte	0x1
 2697 00cb 50       		.byte	0x50
 2698 00cc 30000000 		.4byte	.LVL25
 2699 00d0 48000000 		.4byte	.LFE15
 2700 00d4 0100     		.2byte	0x1
 2701 00d6 50       		.byte	0x50
 2702 00d7 00000000 		.4byte	0
 2703 00db 00000000 		.4byte	0
 2704              	.LLST7:
 2705 00df 2C000000 		.4byte	.LVL26
 2706 00e3 2E000000 		.4byte	.LVL27
 2707 00e7 0100     		.2byte	0x1
 2708 00e9 50       		.byte	0x50
 2709 00ea 30000000 		.4byte	.LVL28
 2710 00ee 48000000 		.4byte	.LFE16
 2711 00f2 0100     		.2byte	0x1
 2712 00f4 50       		.byte	0x50
 2713 00f5 00000000 		.4byte	0
 2714 00f9 00000000 		.4byte	0
 2715              	.LLST8:
 2716 00fd 06000000 		.4byte	.LVL29
 2717 0101 1B000000 		.4byte	.LVL30-1
 2718 0105 0100     		.2byte	0x1
 2719 0107 50       		.byte	0x50
 2720 0108 00000000 		.4byte	0
 2721 010c 00000000 		.4byte	0
 2722              	.LLST9:
 2723 0110 00000000 		.4byte	.LVL31
 2724 0114 06000000 		.4byte	.LVL32
 2725 0118 0100     		.2byte	0x1
 2726 011a 50       		.byte	0x50
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 72


 2727 011b 06000000 		.4byte	.LVL32
 2728 011f 18000000 		.4byte	.LFE19
 2729 0123 0400     		.2byte	0x4
 2730 0125 F3       		.byte	0xf3
 2731 0126 01       		.uleb128 0x1
 2732 0127 50       		.byte	0x50
 2733 0128 9F       		.byte	0x9f
 2734 0129 00000000 		.4byte	0
 2735 012d 00000000 		.4byte	0
 2736              	.LLST10:
 2737 0131 00000000 		.4byte	.LVL31
 2738 0135 06000000 		.4byte	.LVL32
 2739 0139 0100     		.2byte	0x1
 2740 013b 51       		.byte	0x51
 2741 013c 06000000 		.4byte	.LVL32
 2742 0140 0E000000 		.4byte	.LVL34
 2743 0144 0100     		.2byte	0x1
 2744 0146 54       		.byte	0x54
 2745 0147 14000000 		.4byte	.LVL36
 2746 014b 18000000 		.4byte	.LFE19
 2747 014f 0100     		.2byte	0x1
 2748 0151 54       		.byte	0x54
 2749 0152 00000000 		.4byte	0
 2750 0156 00000000 		.4byte	0
 2751              	.LLST11:
 2752 015a 00000000 		.4byte	.LVL31
 2753 015e 06000000 		.4byte	.LVL32
 2754 0162 0200     		.2byte	0x2
 2755 0164 30       		.byte	0x30
 2756 0165 9F       		.byte	0x9f
 2757 0166 06000000 		.4byte	.LVL32
 2758 016a 0C000000 		.4byte	.LVL33
 2759 016e 0900     		.2byte	0x9
 2760 0170 75       		.byte	0x75
 2761 0171 00       		.sleb128 0
 2762 0172 F3       		.byte	0xf3
 2763 0173 01       		.uleb128 0x1
 2764 0174 50       		.byte	0x50
 2765 0175 31       		.byte	0x31
 2766 0176 1C       		.byte	0x1c
 2767 0177 1C       		.byte	0x1c
 2768 0178 9F       		.byte	0x9f
 2769 0179 12000000 		.4byte	.LVL35
 2770 017d 18000000 		.4byte	.LFE19
 2771 0181 0900     		.2byte	0x9
 2772 0183 75       		.byte	0x75
 2773 0184 00       		.sleb128 0
 2774 0185 F3       		.byte	0xf3
 2775 0186 01       		.uleb128 0x1
 2776 0187 50       		.byte	0x50
 2777 0188 31       		.byte	0x31
 2778 0189 1C       		.byte	0x1c
 2779 018a 1C       		.byte	0x1c
 2780 018b 9F       		.byte	0x9f
 2781 018c 00000000 		.4byte	0
 2782 0190 00000000 		.4byte	0
 2783              	.LLST12:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 73


 2784 0194 14000000 		.4byte	.LVL37
 2785 0198 2D000000 		.4byte	.LVL38-1
 2786 019c 0100     		.2byte	0x1
 2787 019e 50       		.byte	0x50
 2788 019f 00000000 		.4byte	0
 2789 01a3 00000000 		.4byte	0
 2790              		.section	.debug_aranges,"",%progbits
 2791 0000 DC000000 		.4byte	0xdc
 2792 0004 0200     		.2byte	0x2
 2793 0006 00000000 		.4byte	.Ldebug_info0
 2794 000a 04       		.byte	0x4
 2795 000b 00       		.byte	0
 2796 000c 0000     		.2byte	0
 2797 000e 0000     		.2byte	0
 2798 0010 00000000 		.4byte	.LFB1
 2799 0014 38000000 		.4byte	.LFE1-.LFB1
 2800 0018 00000000 		.4byte	.LFB3
 2801 001c 34000000 		.4byte	.LFE3-.LFB3
 2802 0020 00000000 		.4byte	.LFB4
 2803 0024 0C000000 		.4byte	.LFE4-.LFB4
 2804 0028 00000000 		.4byte	.LFB5
 2805 002c 0C000000 		.4byte	.LFE5-.LFB5
 2806 0030 00000000 		.4byte	.LFB6
 2807 0034 0C000000 		.4byte	.LFE6-.LFB6
 2808 0038 00000000 		.4byte	.LFB7
 2809 003c 0C000000 		.4byte	.LFE7-.LFB7
 2810 0040 00000000 		.4byte	.LFB8
 2811 0044 0C000000 		.4byte	.LFE8-.LFB8
 2812 0048 00000000 		.4byte	.LFB9
 2813 004c 0C000000 		.4byte	.LFE9-.LFB9
 2814 0050 00000000 		.4byte	.LFB10
 2815 0054 30000000 		.4byte	.LFE10-.LFB10
 2816 0058 00000000 		.4byte	.LFB11
 2817 005c 30000000 		.4byte	.LFE11-.LFB11
 2818 0060 00000000 		.4byte	.LFB12
 2819 0064 C4000000 		.4byte	.LFE12-.LFB12
 2820 0068 00000000 		.4byte	.LFB13
 2821 006c 0C000000 		.4byte	.LFE13-.LFB13
 2822 0070 00000000 		.4byte	.LFB14
 2823 0074 5C000000 		.4byte	.LFE14-.LFB14
 2824 0078 00000000 		.4byte	.LFB15
 2825 007c 48000000 		.4byte	.LFE15-.LFB15
 2826 0080 00000000 		.4byte	.LFB16
 2827 0084 48000000 		.4byte	.LFE16-.LFB16
 2828 0088 00000000 		.4byte	.LFB17
 2829 008c 48000000 		.4byte	.LFE17-.LFB17
 2830 0090 00000000 		.4byte	.LFB18
 2831 0094 5C000000 		.4byte	.LFE18-.LFB18
 2832 0098 00000000 		.4byte	.LFB19
 2833 009c 18000000 		.4byte	.LFE19-.LFB19
 2834 00a0 00000000 		.4byte	.LFB20
 2835 00a4 3C000000 		.4byte	.LFE20-.LFB20
 2836 00a8 00000000 		.4byte	.LFB0
 2837 00ac 90000000 		.4byte	.LFE0-.LFB0
 2838 00b0 00000000 		.4byte	.LFB2
 2839 00b4 1C000000 		.4byte	.LFE2-.LFB2
 2840 00b8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 74


 2841 00bc 10000000 		.4byte	.LFE21-.LFB21
 2842 00c0 00000000 		.4byte	.LFB22
 2843 00c4 10000000 		.4byte	.LFE22-.LFB22
 2844 00c8 00000000 		.4byte	.LFB23
 2845 00cc 10000000 		.4byte	.LFE23-.LFB23
 2846 00d0 00000000 		.4byte	.LFB24
 2847 00d4 48000000 		.4byte	.LFE24-.LFB24
 2848 00d8 00000000 		.4byte	0
 2849 00dc 00000000 		.4byte	0
 2850              		.section	.debug_ranges,"",%progbits
 2851              	.Ldebug_ranges0:
 2852 0000 14000000 		.4byte	.LBB36
 2853 0004 16000000 		.4byte	.LBE36
 2854 0008 1A000000 		.4byte	.LBB39
 2855 000c 1C000000 		.4byte	.LBE39
 2856 0010 00000000 		.4byte	0
 2857 0014 00000000 		.4byte	0
 2858 0018 14000000 		.4byte	.LBB42
 2859 001c 16000000 		.4byte	.LBE42
 2860 0020 1A000000 		.4byte	.LBB45
 2861 0024 1C000000 		.4byte	.LBE45
 2862 0028 00000000 		.4byte	0
 2863 002c 00000000 		.4byte	0
 2864 0030 1C000000 		.4byte	.LBB66
 2865 0034 20000000 		.4byte	.LBE66
 2866 0038 22000000 		.4byte	.LBB69
 2867 003c 24000000 		.4byte	.LBE69
 2868 0040 00000000 		.4byte	0
 2869 0044 00000000 		.4byte	0
 2870 0048 00000000 		.4byte	.LFB1
 2871 004c 38000000 		.4byte	.LFE1
 2872 0050 00000000 		.4byte	.LFB3
 2873 0054 34000000 		.4byte	.LFE3
 2874 0058 00000000 		.4byte	.LFB4
 2875 005c 0C000000 		.4byte	.LFE4
 2876 0060 00000000 		.4byte	.LFB5
 2877 0064 0C000000 		.4byte	.LFE5
 2878 0068 00000000 		.4byte	.LFB6
 2879 006c 0C000000 		.4byte	.LFE6
 2880 0070 00000000 		.4byte	.LFB7
 2881 0074 0C000000 		.4byte	.LFE7
 2882 0078 00000000 		.4byte	.LFB8
 2883 007c 0C000000 		.4byte	.LFE8
 2884 0080 00000000 		.4byte	.LFB9
 2885 0084 0C000000 		.4byte	.LFE9
 2886 0088 00000000 		.4byte	.LFB10
 2887 008c 30000000 		.4byte	.LFE10
 2888 0090 00000000 		.4byte	.LFB11
 2889 0094 30000000 		.4byte	.LFE11
 2890 0098 00000000 		.4byte	.LFB12
 2891 009c C4000000 		.4byte	.LFE12
 2892 00a0 00000000 		.4byte	.LFB13
 2893 00a4 0C000000 		.4byte	.LFE13
 2894 00a8 00000000 		.4byte	.LFB14
 2895 00ac 5C000000 		.4byte	.LFE14
 2896 00b0 00000000 		.4byte	.LFB15
 2897 00b4 48000000 		.4byte	.LFE15
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 75


 2898 00b8 00000000 		.4byte	.LFB16
 2899 00bc 48000000 		.4byte	.LFE16
 2900 00c0 00000000 		.4byte	.LFB17
 2901 00c4 48000000 		.4byte	.LFE17
 2902 00c8 00000000 		.4byte	.LFB18
 2903 00cc 5C000000 		.4byte	.LFE18
 2904 00d0 00000000 		.4byte	.LFB19
 2905 00d4 18000000 		.4byte	.LFE19
 2906 00d8 00000000 		.4byte	.LFB20
 2907 00dc 3C000000 		.4byte	.LFE20
 2908 00e0 00000000 		.4byte	.LFB0
 2909 00e4 90000000 		.4byte	.LFE0
 2910 00e8 00000000 		.4byte	.LFB2
 2911 00ec 1C000000 		.4byte	.LFE2
 2912 00f0 00000000 		.4byte	.LFB21
 2913 00f4 10000000 		.4byte	.LFE21
 2914 00f8 00000000 		.4byte	.LFB22
 2915 00fc 10000000 		.4byte	.LFE22
 2916 0100 00000000 		.4byte	.LFB23
 2917 0104 10000000 		.4byte	.LFE23
 2918 0108 00000000 		.4byte	.LFB24
 2919 010c 48000000 		.4byte	.LFE24
 2920 0110 00000000 		.4byte	0
 2921 0114 00000000 		.4byte	0
 2922              		.section	.debug_line,"",%progbits
 2923              	.Ldebug_line0:
 2924 0000 19030000 		.section	.debug_str,"MS",%progbits,1
 2924      02004E00 
 2924      00000201 
 2924      FB0E0D00 
 2924      01010101 
 2925              	.LASF67:
 2926 0000 43794578 		.ascii	"CyExitCriticalSection\000"
 2926      69744372 
 2926      69746963 
 2926      616C5365 
 2926      6374696F 
 2927              	.LASF36:
 2928 0016 74784461 		.ascii	"txDataByte\000"
 2928      74614279 
 2928      746500
 2929              	.LASF63:
 2930 0021 53504953 		.ascii	"SPIS_1_txBufferRead\000"
 2930      5F315F74 
 2930      78427566 
 2930      66657252 
 2930      65616400 
 2931              	.LASF57:
 2932 0035 53504953 		.ascii	"SPIS_1_swStatusRx\000"
 2932      5F315F73 
 2932      77537461 
 2932      74757352 
 2932      7800
 2933              	.LASF21:
 2934 0047 53504953 		.ascii	"SPIS_1_DisableRxInt\000"
 2934      5F315F44 
 2934      69736162 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 76


 2934      6C655278 
 2934      496E7400 
 2935              	.LASF7:
 2936 005b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2936      206C6F6E 
 2936      6720756E 
 2936      7369676E 
 2936      65642069 
 2937              	.LASF28:
 2938 0072 746D7053 		.ascii	"tmpStatus\000"
 2938      74617475 
 2938      7300
 2939              	.LASF60:
 2940 007c 53504953 		.ascii	"SPIS_1_rxBufferWrite\000"
 2940      5F315F72 
 2940      78427566 
 2940      66657257 
 2940      72697465 
 2941              	.LASF18:
 2942 0091 53504953 		.ascii	"SPIS_1_EnableTxInt\000"
 2942      5F315F45 
 2942      6E61626C 
 2942      65547849 
 2942      6E7400
 2943              	.LASF41:
 2944 00a4 53504953 		.ascii	"SPIS_1_GetTxBufferSize\000"
 2944      5F315F47 
 2944      65745478 
 2944      42756666 
 2944      65725369 
 2945              	.LASF6:
 2946 00bb 6C6F6E67 		.ascii	"long long int\000"
 2946      206C6F6E 
 2946      6720696E 
 2946      7400
 2947              	.LASF0:
 2948 00c9 7369676E 		.ascii	"signed char\000"
 2948      65642063 
 2948      68617200 
 2949              	.LASF70:
 2950 00d5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2950      43313120 
 2950      352E342E 
 2950      31203230 
 2950      31363036 
 2951 0108 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2951      20726576 
 2951      6973696F 
 2951      6E203233 
 2951      37373135 
 2952 013b 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2952      66756E63 
 2952      74696F6E 
 2952      2D736563 
 2952      74696F6E 
 2953              	.LASF61:
 2954 0163 53504953 		.ascii	"SPIS_1_rxBufferFull\000"
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 77


 2954      5F315F72 
 2954      78427566 
 2954      66657246 
 2954      756C6C00 
 2955              	.LASF4:
 2956 0177 6C6F6E67 		.ascii	"long int\000"
 2956      20696E74 
 2956      00
 2957              	.LASF34:
 2958 0180 746D7054 		.ascii	"tmpTxBufferRead\000"
 2958      78427566 
 2958      66657252 
 2958      65616400 
 2959              	.LASF58:
 2960 0190 53504953 		.ascii	"SPIS_1_rxBuffer\000"
 2960      5F315F72 
 2960      78427566 
 2960      66657200 
 2961              	.LASF9:
 2962 01a0 75696E74 		.ascii	"uint8\000"
 2962      3800
 2963              	.LASF12:
 2964 01a6 646F7562 		.ascii	"double\000"
 2964      6C6500
 2965              	.LASF22:
 2966 01ad 53504953 		.ascii	"SPIS_1_Enable\000"
 2966      5F315F45 
 2966      6E61626C 
 2966      6500
 2967              	.LASF37:
 2968 01bb 53504953 		.ascii	"SPIS_1_ReadRxData\000"
 2968      5F315F52 
 2968      65616452 
 2968      78446174 
 2968      6100
 2969              	.LASF10:
 2970 01cd 75696E74 		.ascii	"uint32\000"
 2970      333200
 2971              	.LASF25:
 2972 01d4 53504953 		.ascii	"SPIS_1_SetTxInterruptMode\000"
 2972      5F315F53 
 2972      65745478 
 2972      496E7465 
 2972      72727570 
 2973              	.LASF68:
 2974 01ee 4379496E 		.ascii	"CyIntSetVector\000"
 2974      74536574 
 2974      56656374 
 2974      6F7200
 2975              	.LASF59:
 2976 01fd 53504953 		.ascii	"SPIS_1_rxBufferRead\000"
 2976      5F315F72 
 2976      78427566 
 2976      66657252 
 2976      65616400 
 2977              	.LASF53:
 2978 0211 53504953 		.ascii	"SPIS_1_SetInterruptMode\000"
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 78


 2978      5F315F53 
 2978      6574496E 
 2978      74657272 
 2978      7570744D 
 2979              	.LASF8:
 2980 0229 756E7369 		.ascii	"unsigned int\000"
 2980      676E6564 
 2980      20696E74 
 2980      00
 2981              	.LASF29:
 2982 0236 53504953 		.ascii	"SPIS_1_ReadTxStatus\000"
 2982      5F315F52 
 2982      65616454 
 2982      78537461 
 2982      74757300 
 2983              	.LASF19:
 2984 024a 53504953 		.ascii	"SPIS_1_DisableTxInt\000"
 2984      5F315F44 
 2984      69736162 
 2984      6C655478 
 2984      496E7400 
 2985              	.LASF5:
 2986 025e 6C6F6E67 		.ascii	"long unsigned int\000"
 2986      20756E73 
 2986      69676E65 
 2986      6420696E 
 2986      7400
 2987              	.LASF66:
 2988 0270 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2988      74657243 
 2988      72697469 
 2988      63616C53 
 2988      65637469 
 2989              	.LASF49:
 2990 0287 53504953 		.ascii	"SPIS_1_Init\000"
 2990      5F315F49 
 2990      6E697400 
 2991              	.LASF40:
 2992 0293 73697A65 		.ascii	"size\000"
 2992      00
 2993              	.LASF3:
 2994 0298 73686F72 		.ascii	"short unsigned int\000"
 2994      7420756E 
 2994      7369676E 
 2994      65642069 
 2994      6E7400
 2995              	.LASF54:
 2996 02ab 53504953 		.ascii	"SPIS_1_ReadStatus\000"
 2996      5F315F52 
 2996      65616453 
 2996      74617475 
 2996      7300
 2997              	.LASF55:
 2998 02bd 53504953 		.ascii	"SPIS_1_initVar\000"
 2998      5F315F69 
 2998      6E697456 
 2998      617200
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 79


 2999              	.LASF47:
 3000 02cc 62756649 		.ascii	"bufIndex\000"
 3000      6E646578 
 3000      00
 3001              	.LASF27:
 3002 02d5 696E7453 		.ascii	"intSrc\000"
 3002      726300
 3003              	.LASF15:
 3004 02dc 72656733 		.ascii	"reg32\000"
 3004      3200
 3005              	.LASF17:
 3006 02e2 73697A65 		.ascii	"sizetype\000"
 3006      74797065 
 3006      00
 3007              	.LASF16:
 3008 02eb 6C6F6E67 		.ascii	"long double\000"
 3008      20646F75 
 3008      626C6500 
 3009              	.LASF33:
 3010 02f7 74656D70 		.ascii	"tempStatus\000"
 3010      53746174 
 3010      757300
 3011              	.LASF52:
 3012 0302 53504953 		.ascii	"SPIS_1_DisableInt\000"
 3012      5F315F44 
 3012      69736162 
 3012      6C65496E 
 3012      7400
 3013              	.LASF69:
 3014 0314 4379496E 		.ascii	"CyIntSetPriority\000"
 3014      74536574 
 3014      5072696F 
 3014      72697479 
 3014      00
 3015              	.LASF11:
 3016 0325 666C6F61 		.ascii	"float\000"
 3016      7400
 3017              	.LASF64:
 3018 032b 53504953 		.ascii	"SPIS_1_txBufferWrite\000"
 3018      5F315F74 
 3018      78427566 
 3018      66657257 
 3018      72697465 
 3019              	.LASF14:
 3020 0340 72656738 		.ascii	"reg8\000"
 3020      00
 3021              	.LASF1:
 3022 0345 756E7369 		.ascii	"unsigned char\000"
 3022      676E6564 
 3022      20636861 
 3022      7200
 3023              	.LASF31:
 3024 0353 53504953 		.ascii	"SPIS_1_WriteTxData\000"
 3024      5F315F57 
 3024      72697465 
 3024      54784461 
 3024      746100
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 80


 3025              	.LASF2:
 3026 0366 73686F72 		.ascii	"short int\000"
 3026      7420696E 
 3026      7400
 3027              	.LASF51:
 3028 0370 53504953 		.ascii	"SPIS_1_EnableInt\000"
 3028      5F315F45 
 3028      6E61626C 
 3028      65496E74 
 3028      00
 3029              	.LASF46:
 3030 0381 62797465 		.ascii	"byteCount\000"
 3030      436F756E 
 3030      7400
 3031              	.LASF39:
 3032 038b 53504953 		.ascii	"SPIS_1_GetRxBufferSize\000"
 3032      5F315F47 
 3032      65745278 
 3032      42756666 
 3032      65725369 
 3033              	.LASF38:
 3034 03a2 72784461 		.ascii	"rxData\000"
 3034      746100
 3035              	.LASF56:
 3036 03a9 53504953 		.ascii	"SPIS_1_swStatusTx\000"
 3036      5F315F73 
 3036      77537461 
 3036      74757354 
 3036      7800
 3037              	.LASF13:
 3038 03bb 63686172 		.ascii	"char\000"
 3038      00
 3039              	.LASF48:
 3040 03c0 53504953 		.ascii	"SPIS_1_ClearFIFO\000"
 3040      5F315F43 
 3040      6C656172 
 3040      4649464F 
 3040      00
 3041              	.LASF45:
 3042 03d1 62756666 		.ascii	"buffer\000"
 3042      657200
 3043              	.LASF42:
 3044 03d8 53504953 		.ascii	"SPIS_1_ClearRxBuffer\000"
 3044      5F315F43 
 3044      6C656172 
 3044      52784275 
 3044      66666572 
 3045              	.LASF65:
 3046 03ed 53504953 		.ascii	"SPIS_1_txBufferFull\000"
 3046      5F315F74 
 3046      78427566 
 3046      66657246 
 3046      756C6C00 
 3047              	.LASF50:
 3048 0401 53504953 		.ascii	"SPIS_1_Start\000"
 3048      5F315F53 
 3048      74617274 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 81


 3048      00
 3049              	.LASF72:
 3050 040e 443A5C44 		.ascii	"D:\\Documents\\DPEA_Projects\\RpiMIB\\Number2.cydsn"
 3050      6F63756D 
 3050      656E7473 
 3050      5C445045 
 3050      415F5072 
 3051 043d 00       		.ascii	"\000"
 3052              	.LASF20:
 3053 043e 53504953 		.ascii	"SPIS_1_EnableRxInt\000"
 3053      5F315F45 
 3053      6E61626C 
 3053      65527849 
 3053      6E7400
 3054              	.LASF24:
 3055 0451 656E6162 		.ascii	"enableInterrupts\000"
 3055      6C65496E 
 3055      74657272 
 3055      75707473 
 3055      00
 3056              	.LASF43:
 3057 0462 53504953 		.ascii	"SPIS_1_ClearTxBuffer\000"
 3057      5F315F43 
 3057      6C656172 
 3057      54784275 
 3057      66666572 
 3058              	.LASF62:
 3059 0477 53504953 		.ascii	"SPIS_1_txBuffer\000"
 3059      5F315F74 
 3059      78427566 
 3059      66657200 
 3060              	.LASF35:
 3061 0487 53504953 		.ascii	"SPIS_1_WriteTxDataZero\000"
 3061      5F315F57 
 3061      72697465 
 3061      54784461 
 3061      74615A65 
 3062              	.LASF30:
 3063 049e 53504953 		.ascii	"SPIS_1_ReadRxStatus\000"
 3063      5F315F52 
 3063      65616452 
 3063      78537461 
 3063      74757300 
 3064              	.LASF26:
 3065 04b2 53504953 		.ascii	"SPIS_1_SetRxInterruptMode\000"
 3065      5F315F53 
 3065      65745278 
 3065      496E7465 
 3065      72727570 
 3066              	.LASF23:
 3067 04cc 53504953 		.ascii	"SPIS_1_Stop\000"
 3067      5F315F53 
 3067      746F7000 
 3068              	.LASF32:
 3069 04d8 74784461 		.ascii	"txData\000"
 3069      746100
 3070              	.LASF44:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccVurVSh.s 			page 82


 3071 04df 53504953 		.ascii	"SPIS_1_PutArray\000"
 3071      5F315F50 
 3071      75744172 
 3071      72617900 
 3072              	.LASF71:
 3073 04ef 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIS_1.c\000"
 3073      72617465 
 3073      645F536F 
 3073      75726365 
 3073      5C50536F 
 3074              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
