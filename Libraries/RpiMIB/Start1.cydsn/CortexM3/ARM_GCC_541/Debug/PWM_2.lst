ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_2_initVar
  20              		.bss
  21              		.type	PWM_2_initVar, %object
  22              		.size	PWM_2_initVar, 1
  23              	PWM_2_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_2_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_2_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_2_Start, %function
  31              	PWM_2_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_2.c"
   1:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_2.c **** * File Name: PWM_2.c
   3:Generated_Source\PSoC5/PWM_2.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_2.c **** *
   5:Generated_Source\PSoC5/PWM_2.c **** * Description:
   6:Generated_Source\PSoC5/PWM_2.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_2.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_2.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_2.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_2.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_2.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_2.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_2.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_2.c **** *
  15:Generated_Source\PSoC5/PWM_2.c **** * Note:
  16:Generated_Source\PSoC5/PWM_2.c **** *
  17:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_2.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_2.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_2.c **** 
  24:Generated_Source\PSoC5/PWM_2.c **** #include "PWM_2.h"
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 2


  25:Generated_Source\PSoC5/PWM_2.c **** 
  26:Generated_Source\PSoC5/PWM_2.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_2.c **** #ifdef PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_2.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_2.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_2.c **** #endif /* PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_2.c **** 
  32:Generated_Source\PSoC5/PWM_2.c **** uint8 PWM_2_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_2.c **** 
  34:Generated_Source\PSoC5/PWM_2.c **** 
  35:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Start
  37:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_2.c **** *
  39:Generated_Source\PSoC5/PWM_2.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_2.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_2.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_2.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_2.c **** *
  44:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_2.c **** *  None
  46:Generated_Source\PSoC5/PWM_2.c **** *
  47:Generated_Source\PSoC5/PWM_2.c **** * Return:
  48:Generated_Source\PSoC5/PWM_2.c **** *  None
  49:Generated_Source\PSoC5/PWM_2.c **** *
  50:Generated_Source\PSoC5/PWM_2.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_2.c **** *  PWM_2_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_2.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_2.c **** *
  54:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Start(void) 
  56:Generated_Source\PSoC5/PWM_2.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_2.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_2.c ****     if(PWM_2_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_2.c ****     {
  60:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_2_Init
  61:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_2.c ****     }
  63:Generated_Source\PSoC5/PWM_2.c ****     PWM_2_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_2_Enable
  64:Generated_Source\PSoC5/PWM_2.c **** 
  65:Generated_Source\PSoC5/PWM_2.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_2_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_2_Start, .-PWM_2_Start
  68              		.section	.text.PWM_2_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_2_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_2_Init, %function
  74              	PWM_2_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_2.c **** 
  67:Generated_Source\PSoC5/PWM_2.c **** 
  68:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Init
  70:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_2.c **** *
  72:Generated_Source\PSoC5/PWM_2.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_2.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_2.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_2.c **** *  PWM_2_Start().
  76:Generated_Source\PSoC5/PWM_2.c **** *
  77:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_2.c **** *  None
  79:Generated_Source\PSoC5/PWM_2.c **** *
  80:Generated_Source\PSoC5/PWM_2.c **** * Return:
  81:Generated_Source\PSoC5/PWM_2.c **** *  None
  82:Generated_Source\PSoC5/PWM_2.c **** *
  83:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Init(void) 
  85:Generated_Source\PSoC5/PWM_2.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction || PWM_2_UseControl)
  87:Generated_Source\PSoC5/PWM_2.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction || PWM_2_UseControl) */
  89:Generated_Source\PSoC5/PWM_2.c **** 
  90:Generated_Source\PSoC5/PWM_2.c ****     #if(!PWM_2_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UseStatus)
  92:Generated_Source\PSoC5/PWM_2.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_2.c ****             uint8 PWM_2_interruptState;
  94:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
  95:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_2.c **** 
  97:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_2.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CFG0_MODE;
  88              		.loc 1 99 0
  89 0006 294A     		ldr	r2, .L6
  90 0008 284B     		ldr	r3, .L6
  91 000a 1B78     		ldrb	r3, [r3]
  92 000c DBB2     		uxtb	r3, r3
  93 000e 43F00203 		orr	r3, r3, #2
  94 0012 DBB2     		uxtb	r3, r3
  95 0014 1370     		strb	r3, [r2]
 100:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL |= PWM_2_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_2.c **** 
 104:Generated_Source\PSoC5/PWM_2.c ****         ctrl = PWM_2_CONTROL3 & ((uint8 )(~PWM_2_CTRL_CMPMODE1_MASK));
  96              		.loc 1 104 0
  97 0016 264B     		ldr	r3, .L6+4
  98 0018 1B78     		ldrb	r3, [r3]
  99 001a DBB2     		uxtb	r3, r3
 100 001c 23F07003 		bic	r3, r3, #112
 101 0020 FB71     		strb	r3, [r7, #7]
 105:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL3 = ctrl | PWM_2_DEFAULT_COMPARE1_MODE;
 102              		.loc 1 105 0
 103 0022 234A     		ldr	r2, .L6+4
 104 0024 FB79     		ldrb	r3, [r7, #7]
 105 0026 43F01003 		orr	r3, r3, #16
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 106:Generated_Source\PSoC5/PWM_2.c **** 
 107:Generated_Source\PSoC5/PWM_2.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_RT1_MASK));
 108              		.loc 1 108 0
 109 002e 214A     		ldr	r2, .L6+8
 110 0030 204B     		ldr	r3, .L6+8
 111 0032 1B78     		ldrb	r3, [r3]
 112 0034 DBB2     		uxtb	r3, r3
 113 0036 23F03003 		bic	r3, r3, #48
 114 003a DBB2     		uxtb	r3, r3
 115 003c 1370     		strb	r3, [r2]
 109:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNC;
 116              		.loc 1 109 0
 117 003e 1D4A     		ldr	r2, .L6+8
 118 0040 1C4B     		ldr	r3, .L6+8
 119 0042 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 5


 120 0044 DBB2     		uxtb	r3, r3
 121 0046 43F03003 		orr	r3, r3, #48
 122 004a DBB2     		uxtb	r3, r3
 123 004c 1370     		strb	r3, [r2]
 110:Generated_Source\PSoC5/PWM_2.c **** 
 111:Generated_Source\PSoC5/PWM_2.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_SYNCDSI_MASK));
 124              		.loc 1 112 0
 125 004e 194A     		ldr	r2, .L6+8
 126 0050 184B     		ldr	r3, .L6+8
 127 0052 1B78     		ldrb	r3, [r3]
 128 0054 DBB2     		uxtb	r3, r3
 129 0056 23F00F03 		bic	r3, r3, #15
 130 005a DBB2     		uxtb	r3, r3
 131 005c 1370     		strb	r3, [r2]
 113:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNCDSI_EN;
 132              		.loc 1 113 0
 133 005e 154A     		ldr	r2, .L6+8
 134 0060 144B     		ldr	r3, .L6+8
 135 0062 1B78     		ldrb	r3, [r3]
 136 0064 DBB2     		uxtb	r3, r3
 137 0066 43F00F03 		orr	r3, r3, #15
 138 006a DBB2     		uxtb	r3, r3
 139 006c 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/PWM_2.c **** 
 115:Generated_Source\PSoC5/PWM_2.c ****     #elif (PWM_2_UseControl)
 116:Generated_Source\PSoC5/PWM_2.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_2.c ****         ctrl = PWM_2_CONTROL & ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_2.c ****                 ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL = ctrl | PWM_2_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_2.c ****                                    PWM_2_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_2.c **** 
 123:Generated_Source\PSoC5/PWM_2.c ****     #if (!PWM_2_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_2.c ****         #else /* (PWM_2_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP1 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_2.c **** 
 133:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_WriteCounter(PWM_2_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_2.c **** 
 136:Generated_Source\PSoC5/PWM_2.c ****     PWM_2_WritePeriod(PWM_2_INIT_PERIOD_VALUE);
 140              		.loc 1 136 0
 141 006e 4EF66020 		movw	r0, #60000
 142 0072 FFF7FEFF 		bl	PWM_2_WritePeriod
 137:Generated_Source\PSoC5/PWM_2.c **** 
 138:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare(PWM_2_INIT_COMPARE_VALUE1);
 143              		.loc 1 139 0
 144 0076 44F62060 		movw	r0, #20000
 145 007a FFF7FEFF 		bl	PWM_2_WriteCompare
 140:Generated_Source\PSoC5/PWM_2.c ****         #else
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 6


 141:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare1(PWM_2_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare2(PWM_2_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_2.c **** 
 145:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteKillTime(PWM_2_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_2.c **** 
 149:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteDeadTime(PWM_2_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_2.c **** 
 153:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_INIT_INTERRUPTS_MODE);
 146              		.loc 1 154 0
 147 007e 0020     		movs	r0, #0
 148 0080 FFF7FEFF 		bl	PWM_2_SetInterruptMode
 155:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_2.c **** 
 157:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_2.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 149              		.loc 1 159 0
 150 0084 0C4A     		ldr	r2, .L6+12
 151 0086 0C4B     		ldr	r3, .L6+12
 152 0088 1B78     		ldrb	r3, [r3]
 153 008a DBB2     		uxtb	r3, r3
 154 008c 43F00203 		orr	r3, r3, #2
 155 0090 DBB2     		uxtb	r3, r3
 156 0092 1370     		strb	r3, [r2]
 160:Generated_Source\PSoC5/PWM_2.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL2 |= PWM_2_CTRL2_IRQ_SEL;
 157              		.loc 1 161 0
 158 0094 094A     		ldr	r2, .L6+16
 159 0096 094B     		ldr	r3, .L6+16
 160 0098 1B78     		ldrb	r3, [r3]
 161 009a DBB2     		uxtb	r3, r3
 162 009c 43F00103 		orr	r3, r3, #1
 163 00a0 DBB2     		uxtb	r3, r3
 164 00a2 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/PWM_2.c ****     #else
 163:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UseStatus)
 164:Generated_Source\PSoC5/PWM_2.c **** 
 165:Generated_Source\PSoC5/PWM_2.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_2.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_2.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_STATUS_AUX_CTRL |= PWM_2_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_2.c **** 
 171:Generated_Source\PSoC5/PWM_2.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_2.c ****             CyExitCriticalSection(PWM_2_interruptState);
 173:Generated_Source\PSoC5/PWM_2.c **** 
 174:Generated_Source\PSoC5/PWM_2.c ****             /* Clear the FIFO to enable the PWM_2_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_2.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
 178:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 7


 179:Generated_Source\PSoC5/PWM_2.c **** }
 165              		.loc 1 179 0
 166 00a4 00BF     		nop
 167 00a6 0837     		adds	r7, r7, #8
 168              		.cfi_def_cfa_offset 8
 169 00a8 BD46     		mov	sp, r7
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 00aa 80BD     		pop	{r7, pc}
 173              	.L7:
 174              		.align	2
 175              	.L6:
 176 00ac 0C4F0040 		.word	1073762060
 177 00b0 0E4F0040 		.word	1073762062
 178 00b4 174F0040 		.word	1073762071
 179 00b8 A3430040 		.word	1073759139
 180 00bc 0D4F0040 		.word	1073762061
 181              		.cfi_endproc
 182              	.LFE1:
 183              		.size	PWM_2_Init, .-PWM_2_Init
 184              		.section	.text.PWM_2_Enable,"ax",%progbits
 185              		.align	2
 186              		.global	PWM_2_Enable
 187              		.thumb
 188              		.thumb_func
 189              		.type	PWM_2_Enable, %function
 190              	PWM_2_Enable:
 191              	.LFB2:
 180:Generated_Source\PSoC5/PWM_2.c **** 
 181:Generated_Source\PSoC5/PWM_2.c **** 
 182:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Enable
 184:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_2.c **** *
 186:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_2.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_2.c **** *
 189:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_2.c **** *  None
 191:Generated_Source\PSoC5/PWM_2.c **** *
 192:Generated_Source\PSoC5/PWM_2.c **** * Return:
 193:Generated_Source\PSoC5/PWM_2.c **** *  None
 194:Generated_Source\PSoC5/PWM_2.c **** *
 195:Generated_Source\PSoC5/PWM_2.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_2.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_2.c **** *
 198:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Enable(void) 
 200:Generated_Source\PSoC5/PWM_2.c **** {
 192              		.loc 1 200 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 8


 200 0002 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_2.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 202              		.loc 1 203 0
 203 0004 0D4A     		ldr	r2, .L9
 204 0006 0D4B     		ldr	r3, .L9
 205 0008 1B78     		ldrb	r3, [r3]
 206 000a DBB2     		uxtb	r3, r3
 207 000c 43F00203 		orr	r3, r3, #2
 208 0010 DBB2     		uxtb	r3, r3
 209 0012 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE |= PWM_2_BLOCK_STBY_EN_MASK;
 210              		.loc 1 204 0
 211 0014 0A4A     		ldr	r2, .L9+4
 212 0016 0A4B     		ldr	r3, .L9+4
 213 0018 1B78     		ldrb	r3, [r3]
 214 001a DBB2     		uxtb	r3, r3
 215 001c 43F00203 		orr	r3, r3, #2
 216 0020 DBB2     		uxtb	r3, r3
 217 0022 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_2.c **** 
 207:Generated_Source\PSoC5/PWM_2.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CTRL_ENABLE;
 218              		.loc 1 209 0
 219 0024 074A     		ldr	r2, .L9+8
 220 0026 074B     		ldr	r3, .L9+8
 221 0028 1B78     		ldrb	r3, [r3]
 222 002a DBB2     		uxtb	r3, r3
 223 002c 43F00103 		orr	r3, r3, #1
 224 0030 DBB2     		uxtb	r3, r3
 225 0032 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_2.c **** }
 226              		.loc 1 211 0
 227 0034 00BF     		nop
 228 0036 BD46     		mov	sp, r7
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0038 80BC     		pop	{r7}
 232              		.cfi_restore 7
 233              		.cfi_def_cfa_offset 0
 234 003a 7047     		bx	lr
 235              	.L10:
 236              		.align	2
 237              	.L9:
 238 003c A3430040 		.word	1073759139
 239 0040 B3430040 		.word	1073759155
 240 0044 0C4F0040 		.word	1073762060
 241              		.cfi_endproc
 242              	.LFE2:
 243              		.size	PWM_2_Enable, .-PWM_2_Enable
 244              		.section	.text.PWM_2_Stop,"ax",%progbits
 245              		.align	2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 9


 246              		.global	PWM_2_Stop
 247              		.thumb
 248              		.thumb_func
 249              		.type	PWM_2_Stop, %function
 250              	PWM_2_Stop:
 251              	.LFB3:
 212:Generated_Source\PSoC5/PWM_2.c **** 
 213:Generated_Source\PSoC5/PWM_2.c **** 
 214:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Stop
 216:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_2.c **** *
 218:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_2.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_2.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_2.c **** *
 222:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_2.c **** *  None
 224:Generated_Source\PSoC5/PWM_2.c **** *
 225:Generated_Source\PSoC5/PWM_2.c **** * Return:
 226:Generated_Source\PSoC5/PWM_2.c **** *  None
 227:Generated_Source\PSoC5/PWM_2.c **** *
 228:Generated_Source\PSoC5/PWM_2.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_2.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_2.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_2.c **** *
 232:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Stop(void) 
 234:Generated_Source\PSoC5/PWM_2.c **** {
 252              		.loc 1 234 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0000 80B4     		push	{r7}
 258              		.cfi_def_cfa_offset 4
 259              		.cfi_offset 7, -4
 260 0002 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_ENABLE));
 262              		.loc 1 236 0
 263 0004 0D4A     		ldr	r2, .L12
 264 0006 0D4B     		ldr	r3, .L12
 265 0008 1B78     		ldrb	r3, [r3]
 266 000a DBB2     		uxtb	r3, r3
 267 000c 23F00103 		bic	r3, r3, #1
 268 0010 DBB2     		uxtb	r3, r3
 269 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_2.c **** 
 239:Generated_Source\PSoC5/PWM_2.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE &= ((uint8)(~PWM_2_BLOCK_EN_MASK));
 270              		.loc 1 241 0
 271 0014 0A4A     		ldr	r2, .L12+4
 272 0016 0A4B     		ldr	r3, .L12+4
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 10


 273 0018 1B78     		ldrb	r3, [r3]
 274 001a DBB2     		uxtb	r3, r3
 275 001c 23F00203 		bic	r3, r3, #2
 276 0020 DBB2     		uxtb	r3, r3
 277 0022 1370     		strb	r3, [r2]
 242:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_2_BLOCK_STBY_EN_MASK));
 278              		.loc 1 242 0
 279 0024 074A     		ldr	r2, .L12+8
 280 0026 074B     		ldr	r3, .L12+8
 281 0028 1B78     		ldrb	r3, [r3]
 282 002a DBB2     		uxtb	r3, r3
 283 002c 23F00203 		bic	r3, r3, #2
 284 0030 DBB2     		uxtb	r3, r3
 285 0032 1370     		strb	r3, [r2]
 243:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_2.c **** }
 286              		.loc 1 244 0
 287 0034 00BF     		nop
 288 0036 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 0038 80BC     		pop	{r7}
 292              		.cfi_restore 7
 293              		.cfi_def_cfa_offset 0
 294 003a 7047     		bx	lr
 295              	.L13:
 296              		.align	2
 297              	.L12:
 298 003c 0C4F0040 		.word	1073762060
 299 0040 A3430040 		.word	1073759139
 300 0044 B3430040 		.word	1073759155
 301              		.cfi_endproc
 302              	.LFE3:
 303              		.size	PWM_2_Stop, .-PWM_2_Stop
 304              		.section	.text.PWM_2_WritePeriod,"ax",%progbits
 305              		.align	2
 306              		.global	PWM_2_WritePeriod
 307              		.thumb
 308              		.thumb_func
 309              		.type	PWM_2_WritePeriod, %function
 310              	PWM_2_WritePeriod:
 311              	.LFB4:
 245:Generated_Source\PSoC5/PWM_2.c **** 
 246:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_2.c **** 
 249:Generated_Source\PSoC5/PWM_2.c **** 
 250:Generated_Source\PSoC5/PWM_2.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode
 252:Generated_Source\PSoC5/PWM_2.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_2.c ****         *
 254:Generated_Source\PSoC5/PWM_2.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_2.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_2.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_2.c ****         *
 258:Generated_Source\PSoC5/PWM_2.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 11


 260:Generated_Source\PSoC5/PWM_2.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_2.c ****         *
 262:Generated_Source\PSoC5/PWM_2.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_2.c ****         *  None
 264:Generated_Source\PSoC5/PWM_2.c ****         *
 265:Generated_Source\PSoC5/PWM_2.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_2.c ****         void PWM_2_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_2.c ****         {
 268:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_2.c **** 
 270:Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/PWM_2.c ****                 #else
 273:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_2.c **** 
 276:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL3 &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_2.c **** 
 279:Generated_Source\PSoC5/PWM_2.c ****             #elif (PWM_2_UseControl)
 280:Generated_Source\PSoC5/PWM_2.c **** 
 281:Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_2.c ****                                                 PWM_2_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_2.c ****                 #else
 285:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode1masked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_2.c **** 
 288:Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_2.c ****                                                PWM_2_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_2.c ****                 #else
 292:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode2masked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_2.c **** 
 295:Generated_Source\PSoC5/PWM_2.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~(PWM_2_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_2.c ****                                             PWM_2_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_2.c **** 
 300:Generated_Source\PSoC5/PWM_2.c ****             #else
 301:Generated_Source\PSoC5/PWM_2.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_2.c ****         }
 304:Generated_Source\PSoC5/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_2.c **** 
 306:Generated_Source\PSoC5/PWM_2.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_2.c **** 
 308:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_2.c **** 
 310:Generated_Source\PSoC5/PWM_2.c **** 
 311:Generated_Source\PSoC5/PWM_2.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_2.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_2.c ****         *
 315:Generated_Source\PSoC5/PWM_2.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_2.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 12


 317:Generated_Source\PSoC5/PWM_2.c ****         *
 318:Generated_Source\PSoC5/PWM_2.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_2.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_2.c ****         *
 322:Generated_Source\PSoC5/PWM_2.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_2.c ****         *  None
 324:Generated_Source\PSoC5/PWM_2.c ****         *
 325:Generated_Source\PSoC5/PWM_2.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_2.c ****         void PWM_2_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_2.c ****         {
 328:Generated_Source\PSoC5/PWM_2.c ****             #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_2.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_2.c ****                                            PWM_2_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_2.c ****             #else
 332:Generated_Source\PSoC5/PWM_2.c ****                 uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_2.c **** 
 335:Generated_Source\PSoC5/PWM_2.c ****             #if (PWM_2_UseControl)
 336:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_UseControl) */
 339:Generated_Source\PSoC5/PWM_2.c ****         }
 340:Generated_Source\PSoC5/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_2.c **** 
 342:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_2.c **** 
 344:Generated_Source\PSoC5/PWM_2.c **** 
 345:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_2.c ****     *
 349:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_2.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_2.c ****     *
 352:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_2.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_2.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_2.c ****     *
 356:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_2.c ****     *  None
 358:Generated_Source\PSoC5/PWM_2.c ****     *
 359:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_2.c ****     {
 362:Generated_Source\PSoC5/PWM_2.c **** 
 363:Generated_Source\PSoC5/PWM_2.c ****         #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_2.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_2.c ****                                                  PWM_2_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_2.c ****         #else
 367:Generated_Source\PSoC5/PWM_2.c ****             uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_2.c **** 
 370:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_UseControl)
 371:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseControl) */
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 13


 374:Generated_Source\PSoC5/PWM_2.c ****     }
 375:Generated_Source\PSoC5/PWM_2.c ****     #endif /*PWM_2_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_2.c **** 
 377:Generated_Source\PSoC5/PWM_2.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_2.c **** 
 379:Generated_Source\PSoC5/PWM_2.c **** 
 380:Generated_Source\PSoC5/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_2.c **** 
 382:Generated_Source\PSoC5/PWM_2.c **** 
 383:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCounter
 385:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_2.c ****     *
 387:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_2.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_2.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_2.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_2.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_2.c ****     *
 393:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_2.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_2.c ****     *
 396:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_2.c ****     *  None
 398:Generated_Source\PSoC5/PWM_2.c ****     *
 399:Generated_Source\PSoC5/PWM_2.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_2.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_2.c ****     *
 402:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_2.c ****                                        
 405:Generated_Source\PSoC5/PWM_2.c ****     {
 406:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG16(PWM_2_COUNTER_LSB_PTR, counter);
 407:Generated_Source\PSoC5/PWM_2.c ****     }
 408:Generated_Source\PSoC5/PWM_2.c **** 
 409:Generated_Source\PSoC5/PWM_2.c **** 
 410:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCounter
 412:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_2.c ****     *
 414:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_2.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_2.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_2.c ****     *
 418:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_2.c ****     *  None
 420:Generated_Source\PSoC5/PWM_2.c ****     *
 421:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_2.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_2.c ****     *
 424:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_2.c ****     {
 427:Generated_Source\PSoC5/PWM_2.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_2.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_2.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_2.c ****           (void)CY_GET_REG8(PWM_2_COUNTERCAP_LSB_PTR_8BIT);
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 14


 431:Generated_Source\PSoC5/PWM_2.c **** 
 432:Generated_Source\PSoC5/PWM_2.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_CAPTURE_LSB_PTR));
 434:Generated_Source\PSoC5/PWM_2.c ****     }
 435:Generated_Source\PSoC5/PWM_2.c **** 
 436:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseStatus)
 437:Generated_Source\PSoC5/PWM_2.c **** 
 438:Generated_Source\PSoC5/PWM_2.c **** 
 439:Generated_Source\PSoC5/PWM_2.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_2.c ****         * Function Name: PWM_2_ClearFIFO
 441:Generated_Source\PSoC5/PWM_2.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_2.c ****         *
 443:Generated_Source\PSoC5/PWM_2.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_2.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_2.c ****         *
 446:Generated_Source\PSoC5/PWM_2.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_2.c ****         *  None
 448:Generated_Source\PSoC5/PWM_2.c ****         *
 449:Generated_Source\PSoC5/PWM_2.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_2.c ****         *  None
 451:Generated_Source\PSoC5/PWM_2.c ****         *
 452:Generated_Source\PSoC5/PWM_2.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_2.c ****         void PWM_2_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_2.c ****         {
 455:Generated_Source\PSoC5/PWM_2.c ****             while(0u != (PWM_2_ReadStatusRegister() & PWM_2_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_2.c ****             {
 457:Generated_Source\PSoC5/PWM_2.c ****                 (void)PWM_2_ReadCapture();
 458:Generated_Source\PSoC5/PWM_2.c ****             }
 459:Generated_Source\PSoC5/PWM_2.c ****         }
 460:Generated_Source\PSoC5/PWM_2.c **** 
 461:Generated_Source\PSoC5/PWM_2.c ****     #endif /* PWM_2_UseStatus */
 462:Generated_Source\PSoC5/PWM_2.c **** 
 463:Generated_Source\PSoC5/PWM_2.c **** #endif /* !PWM_2_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_2.c **** 
 465:Generated_Source\PSoC5/PWM_2.c **** 
 466:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_WritePeriod
 468:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_2.c **** *
 470:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_2.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_2.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_2.c **** *
 474:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_2.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_2.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_2.c **** *
 478:Generated_Source\PSoC5/PWM_2.c **** * Return:
 479:Generated_Source\PSoC5/PWM_2.c **** *  None
 480:Generated_Source\PSoC5/PWM_2.c **** *
 481:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_2.c **** {
 312              		.loc 1 483 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 15


 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 7, -4
 320 0002 83B0     		sub	sp, sp, #12
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 324 0006 0346     		mov	r3, r0
 325 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG16(PWM_2_PERIOD_LSB_PTR, (uint16)period);
 326              		.loc 1 485 0
 327 000a 044A     		ldr	r2, .L15
 328 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 329 000e 1380     		strh	r3, [r2]	@ movhi
 486:Generated_Source\PSoC5/PWM_2.c ****     #else
 487:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG16(PWM_2_PERIOD_LSB_PTR, period);
 488:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_2.c **** }
 330              		.loc 1 489 0
 331 0010 00BF     		nop
 332 0012 0C37     		adds	r7, r7, #12
 333              		.cfi_def_cfa_offset 4
 334 0014 BD46     		mov	sp, r7
 335              		.cfi_def_cfa_register 13
 336              		@ sp needed
 337 0016 80BC     		pop	{r7}
 338              		.cfi_restore 7
 339              		.cfi_def_cfa_offset 0
 340 0018 7047     		bx	lr
 341              	.L16:
 342 001a 00BF     		.align	2
 343              	.L15:
 344 001c 104F0040 		.word	1073762064
 345              		.cfi_endproc
 346              	.LFE4:
 347              		.size	PWM_2_WritePeriod, .-PWM_2_WritePeriod
 348              		.section	.text.PWM_2_WriteCompare,"ax",%progbits
 349              		.align	2
 350              		.global	PWM_2_WriteCompare
 351              		.thumb
 352              		.thumb_func
 353              		.type	PWM_2_WriteCompare, %function
 354              	PWM_2_WriteCompare:
 355              	.LFB5:
 490:Generated_Source\PSoC5/PWM_2.c **** 
 491:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_2.c **** 
 493:Generated_Source\PSoC5/PWM_2.c **** 
 494:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare
 496:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_2.c ****     *
 498:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_2.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 16


 501:Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_2.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_2.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_2.c ****     *
 505:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_2.c ****     *
 508:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_2.c ****     *  None
 510:Generated_Source\PSoC5/PWM_2.c ****     *
 511:Generated_Source\PSoC5/PWM_2.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_2.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_2.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_2.c ****     *
 515:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_2.c ****                                        
 518:Generated_Source\PSoC5/PWM_2.c ****     {
 356              		.loc 1 518 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 83B0     		sub	sp, sp, #12
 365              		.cfi_def_cfa_offset 16
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 0346     		mov	r3, r0
 369 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 370              		.loc 1 520 0
 371 000a 044A     		ldr	r2, .L18
 372 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 373 000e 1380     		strh	r3, [r2]	@ movhi
 521:Generated_Source\PSoC5/PWM_2.c ****         #else
 522:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_2.c **** 
 525:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_PWMMode == PWM_2__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_2.c ****                 CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_2.c ****             #else
 529:Generated_Source\PSoC5/PWM_2.c ****                 CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_PWMMode == PWM_2__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_2.c ****     }
 374              		.loc 1 532 0
 375 0010 00BF     		nop
 376 0012 0C37     		adds	r7, r7, #12
 377              		.cfi_def_cfa_offset 4
 378 0014 BD46     		mov	sp, r7
 379              		.cfi_def_cfa_register 13
 380              		@ sp needed
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 17


 381 0016 80BC     		pop	{r7}
 382              		.cfi_restore 7
 383              		.cfi_def_cfa_offset 0
 384 0018 7047     		bx	lr
 385              	.L19:
 386 001a 00BF     		.align	2
 387              	.L18:
 388 001c 124F0040 		.word	1073762066
 389              		.cfi_endproc
 390              	.LFE5:
 391              		.size	PWM_2_WriteCompare, .-PWM_2_WriteCompare
 392              		.section	.text.PWM_2_SetInterruptMode,"ax",%progbits
 393              		.align	2
 394              		.global	PWM_2_SetInterruptMode
 395              		.thumb
 396              		.thumb_func
 397              		.type	PWM_2_SetInterruptMode, %function
 398              	PWM_2_SetInterruptMode:
 399              	.LFB6:
 533:Generated_Source\PSoC5/PWM_2.c **** 
 534:Generated_Source\PSoC5/PWM_2.c **** 
 535:Generated_Source\PSoC5/PWM_2.c **** #else
 536:Generated_Source\PSoC5/PWM_2.c **** 
 537:Generated_Source\PSoC5/PWM_2.c **** 
 538:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare1
 540:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_2.c ****     *
 542:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_2.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_2.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_2.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_2.c ****     *
 548:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_2.c ****     *
 551:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_2.c ****     *  None
 553:Generated_Source\PSoC5/PWM_2.c ****     *
 554:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_2.c ****                                         
 557:Generated_Source\PSoC5/PWM_2.c ****     {
 558:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_2.c ****         #else
 561:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_2.c ****     }
 564:Generated_Source\PSoC5/PWM_2.c **** 
 565:Generated_Source\PSoC5/PWM_2.c **** 
 566:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare2
 568:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_2.c ****     *
 570:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 18


 571:Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_2.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_2.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_2.c ****     *
 577:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_2.c ****     *
 580:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_2.c ****     *  None
 582:Generated_Source\PSoC5/PWM_2.c ****     *
 583:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_2.c ****                                         
 586:Generated_Source\PSoC5/PWM_2.c ****     {
 587:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_2.c ****         #else
 590:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_2.c ****     }
 593:Generated_Source\PSoC5/PWM_2.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_2.c **** 
 595:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_2.c **** 
 597:Generated_Source\PSoC5/PWM_2.c **** 
 598:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_2.c ****     *
 602:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_2.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_2.c ****     *
 605:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_2.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_2.c ****     *
 608:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_2.c ****     *  None
 610:Generated_Source\PSoC5/PWM_2.c ****     *
 611:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_2.c ****     {
 614:Generated_Source\PSoC5/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG8(PWM_2_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_2.c ****         #else
 618:Generated_Source\PSoC5/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_2.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_DEADBAND_COUNT &= ((uint8)(~PWM_2_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_2.c **** 
 622:Generated_Source\PSoC5/PWM_2.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_2_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_2.c ****                                                     PWM_2_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_2.c ****             #else
 627:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= deadtime & PWM_2_DEADBAND_COUNT_MASK;
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 19


 628:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_2.c **** 
 630:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_2.c ****     }
 632:Generated_Source\PSoC5/PWM_2.c **** 
 633:Generated_Source\PSoC5/PWM_2.c **** 
 634:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_2.c ****     *
 638:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_2.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_2.c ****     *
 641:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_2.c ****     *  None
 643:Generated_Source\PSoC5/PWM_2.c ****     *
 644:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_2.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_2.c ****     *
 647:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_2.c ****     {
 650:Generated_Source\PSoC5/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_2.c ****             return (CY_GET_REG8(PWM_2_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_2.c ****         #else
 654:Generated_Source\PSoC5/PWM_2.c **** 
 655:Generated_Source\PSoC5/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_2.c ****                 return ((uint8)(((uint8)(PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_2.c ****                                                                            PWM_2_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_2.c ****             #else
 660:Generated_Source\PSoC5/PWM_2.c ****                 return (PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_2.c ****     }
 664:Generated_Source\PSoC5/PWM_2.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_2.c **** 
 666:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_2.c **** 
 668:Generated_Source\PSoC5/PWM_2.c **** 
 669:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_2.c ****     *
 673:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_2.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_2.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_2.c ****     *
 677:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_2.c ****     *
 680:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_2.c ****     *  None
 682:Generated_Source\PSoC5/PWM_2.c ****     *
 683:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_SetInterruptMode(uint8 interruptMode) 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 20


 685:Generated_Source\PSoC5/PWM_2.c ****     {
 400              		.loc 1 685 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 8
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405 0000 80B4     		push	{r7}
 406              		.cfi_def_cfa_offset 4
 407              		.cfi_offset 7, -4
 408 0002 83B0     		sub	sp, sp, #12
 409              		.cfi_def_cfa_offset 16
 410 0004 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 412 0006 0346     		mov	r3, r0
 413 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG8(PWM_2_STATUS_MASK_PTR, interruptMode);
 414              		.loc 1 686 0
 415 000a 044A     		ldr	r2, .L21
 416 000c FB79     		ldrb	r3, [r7, #7]
 417 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM_2.c ****     }
 418              		.loc 1 687 0
 419 0010 00BF     		nop
 420 0012 0C37     		adds	r7, r7, #12
 421              		.cfi_def_cfa_offset 4
 422 0014 BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 0016 80BC     		pop	{r7}
 426              		.cfi_restore 7
 427              		.cfi_def_cfa_offset 0
 428 0018 7047     		bx	lr
 429              	.L22:
 430 001a 00BF     		.align	2
 431              	.L21:
 432 001c 0F4F0040 		.word	1073762063
 433              		.cfi_endproc
 434              	.LFE6:
 435              		.size	PWM_2_SetInterruptMode, .-PWM_2_SetInterruptMode
 436              		.section	.text.PWM_2_ReadStatusRegister,"ax",%progbits
 437              		.align	2
 438              		.global	PWM_2_ReadStatusRegister
 439              		.thumb
 440              		.thumb_func
 441              		.type	PWM_2_ReadStatusRegister, %function
 442              	PWM_2_ReadStatusRegister:
 443              	.LFB7:
 688:Generated_Source\PSoC5/PWM_2.c **** 
 689:Generated_Source\PSoC5/PWM_2.c **** 
 690:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_2.c ****     *
 694:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_2.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_2.c ****     *
 697:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 21


 698:Generated_Source\PSoC5/PWM_2.c ****     *  None
 699:Generated_Source\PSoC5/PWM_2.c ****     *
 700:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_2.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_2.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_2.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_2.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_2.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_2.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_2.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_2.c ****     *
 710:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_2.c ****     {
 444              		.loc 1 712 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 0000 80B4     		push	{r7}
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG8(PWM_2_STATUS_PTR));
 454              		.loc 1 713 0
 455 0004 034B     		ldr	r3, .L25
 456 0006 1B78     		ldrb	r3, [r3]
 457 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM_2.c ****     }
 458              		.loc 1 714 0
 459 000a 1846     		mov	r0, r3
 460 000c BD46     		mov	sp, r7
 461              		.cfi_def_cfa_register 13
 462              		@ sp needed
 463 000e 80BC     		pop	{r7}
 464              		.cfi_restore 7
 465              		.cfi_def_cfa_offset 0
 466 0010 7047     		bx	lr
 467              	.L26:
 468 0012 00BF     		.align	2
 469              	.L25:
 470 0014 0F4F0040 		.word	1073762063
 471              		.cfi_endproc
 472              	.LFE7:
 473              		.size	PWM_2_ReadStatusRegister, .-PWM_2_ReadStatusRegister
 474              		.section	.text.PWM_2_ReadControlRegister,"ax",%progbits
 475              		.align	2
 476              		.global	PWM_2_ReadControlRegister
 477              		.thumb
 478              		.thumb_func
 479              		.type	PWM_2_ReadControlRegister, %function
 480              	PWM_2_ReadControlRegister:
 481              	.LFB8:
 715:Generated_Source\PSoC5/PWM_2.c **** 
 716:Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 22


 717:Generated_Source\PSoC5/PWM_2.c **** 
 718:Generated_Source\PSoC5/PWM_2.c **** 
 719:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseControl)
 720:Generated_Source\PSoC5/PWM_2.c **** 
 721:Generated_Source\PSoC5/PWM_2.c **** 
 722:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_2.c ****     *
 726:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_2.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_2.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_2.c ****     *
 730:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_2.c ****     *  None
 732:Generated_Source\PSoC5/PWM_2.c ****     *
 733:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_2.c ****     *
 736:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_2.c ****     {
 482              		.loc 1 738 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487 0000 80B4     		push	{r7}
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 83B0     		sub	sp, sp, #12
 491              		.cfi_def_cfa_offset 16
 492 0004 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_2.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_2.c **** 
 741:Generated_Source\PSoC5/PWM_2.c ****         result = CY_GET_REG8(PWM_2_CONTROL_PTR);
 494              		.loc 1 741 0
 495 0006 044B     		ldr	r3, .L29
 496 0008 1B78     		ldrb	r3, [r3]
 497 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_2.c ****         return (result);
 498              		.loc 1 742 0
 499 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_2.c ****     }
 500              		.loc 1 743 0
 501 000e 1846     		mov	r0, r3
 502 0010 0C37     		adds	r7, r7, #12
 503              		.cfi_def_cfa_offset 4
 504 0012 BD46     		mov	sp, r7
 505              		.cfi_def_cfa_register 13
 506              		@ sp needed
 507 0014 80BC     		pop	{r7}
 508              		.cfi_restore 7
 509              		.cfi_def_cfa_offset 0
 510 0016 7047     		bx	lr
 511              	.L30:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 23


 512              		.align	2
 513              	.L29:
 514 0018 0C4F0040 		.word	1073762060
 515              		.cfi_endproc
 516              	.LFE8:
 517              		.size	PWM_2_ReadControlRegister, .-PWM_2_ReadControlRegister
 518              		.section	.text.PWM_2_WriteControlRegister,"ax",%progbits
 519              		.align	2
 520              		.global	PWM_2_WriteControlRegister
 521              		.thumb
 522              		.thumb_func
 523              		.type	PWM_2_WriteControlRegister, %function
 524              	PWM_2_WriteControlRegister:
 525              	.LFB9:
 744:Generated_Source\PSoC5/PWM_2.c **** 
 745:Generated_Source\PSoC5/PWM_2.c **** 
 746:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_2.c ****     *
 750:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_2.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_2.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_2.c ****     *
 754:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_2.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_2.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_2.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_2.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_2.c ****     *
 761:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_2.c ****     *  None
 763:Generated_Source\PSoC5/PWM_2.c ****     *
 764:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_2.c ****     {
 526              		.loc 1 766 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 8
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531 0000 80B4     		push	{r7}
 532              		.cfi_def_cfa_offset 4
 533              		.cfi_offset 7, -4
 534 0002 83B0     		sub	sp, sp, #12
 535              		.cfi_def_cfa_offset 16
 536 0004 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 538 0006 0346     		mov	r3, r0
 539 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG8(PWM_2_CONTROL_PTR, control);
 540              		.loc 1 767 0
 541 000a 044A     		ldr	r2, .L32
 542 000c FB79     		ldrb	r3, [r7, #7]
 543 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_2.c ****     }
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 24


 544              		.loc 1 768 0
 545 0010 00BF     		nop
 546 0012 0C37     		adds	r7, r7, #12
 547              		.cfi_def_cfa_offset 4
 548 0014 BD46     		mov	sp, r7
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed
 551 0016 80BC     		pop	{r7}
 552              		.cfi_restore 7
 553              		.cfi_def_cfa_offset 0
 554 0018 7047     		bx	lr
 555              	.L33:
 556 001a 00BF     		.align	2
 557              	.L32:
 558 001c 0C4F0040 		.word	1073762060
 559              		.cfi_endproc
 560              	.LFE9:
 561              		.size	PWM_2_WriteControlRegister, .-PWM_2_WriteControlRegister
 562              		.section	.text.PWM_2_ReadCompare,"ax",%progbits
 563              		.align	2
 564              		.global	PWM_2_ReadCompare
 565              		.thumb
 566              		.thumb_func
 567              		.type	PWM_2_ReadCompare, %function
 568              	PWM_2_ReadCompare:
 569              	.LFB10:
 769:Generated_Source\PSoC5/PWM_2.c **** 
 770:Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseControl) */
 771:Generated_Source\PSoC5/PWM_2.c **** 
 772:Generated_Source\PSoC5/PWM_2.c **** 
 773:Generated_Source\PSoC5/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_2.c **** 
 775:Generated_Source\PSoC5/PWM_2.c **** 
 776:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCapture
 778:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_2.c ****     *
 780:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_2.c ****     *
 783:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_2.c ****     *  None
 785:Generated_Source\PSoC5/PWM_2.c ****     *
 786:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_2.c ****     *
 789:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_2.c ****     {
 792:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_CAPTURE_LSB_PTR));
 793:Generated_Source\PSoC5/PWM_2.c ****     }
 794:Generated_Source\PSoC5/PWM_2.c **** 
 795:Generated_Source\PSoC5/PWM_2.c **** #endif /* (!PWM_2_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_2.c **** 
 797:Generated_Source\PSoC5/PWM_2.c **** 
 798:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_2.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 25


 800:Generated_Source\PSoC5/PWM_2.c **** 
 801:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare
 803:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_2.c ****     *
 805:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_2.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_2.c ****     *
 809:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_2.c ****     *  None
 811:Generated_Source\PSoC5/PWM_2.c ****     *
 812:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_2.c ****     *
 815:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_2.c ****     {
 570              		.loc 1 817 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575 0000 80B4     		push	{r7}
 576              		.cfi_def_cfa_offset 4
 577              		.cfi_offset 7, -4
 578 0002 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_2.c ****             return ((uint16)CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 580              		.loc 1 819 0
 581 0004 034B     		ldr	r3, .L36
 582 0006 1B88     		ldrh	r3, [r3]	@ movhi
 583 0008 9BB2     		uxth	r3, r3
 820:Generated_Source\PSoC5/PWM_2.c ****         #else
 821:Generated_Source\PSoC5/PWM_2.c ****             return (CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_2.c ****     }
 584              		.loc 1 823 0
 585 000a 1846     		mov	r0, r3
 586 000c BD46     		mov	sp, r7
 587              		.cfi_def_cfa_register 13
 588              		@ sp needed
 589 000e 80BC     		pop	{r7}
 590              		.cfi_restore 7
 591              		.cfi_def_cfa_offset 0
 592 0010 7047     		bx	lr
 593              	.L37:
 594 0012 00BF     		.align	2
 595              	.L36:
 596 0014 124F0040 		.word	1073762066
 597              		.cfi_endproc
 598              	.LFE10:
 599              		.size	PWM_2_ReadCompare, .-PWM_2_ReadCompare
 600              		.section	.text.PWM_2_ReadPeriod,"ax",%progbits
 601              		.align	2
 602              		.global	PWM_2_ReadPeriod
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 26


 603              		.thumb
 604              		.thumb_func
 605              		.type	PWM_2_ReadPeriod, %function
 606              	PWM_2_ReadPeriod:
 607              	.LFB11:
 824:Generated_Source\PSoC5/PWM_2.c **** 
 825:Generated_Source\PSoC5/PWM_2.c **** #else
 826:Generated_Source\PSoC5/PWM_2.c **** 
 827:Generated_Source\PSoC5/PWM_2.c **** 
 828:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare1
 830:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_2.c ****     *
 832:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_2.c ****     *
 835:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_2.c ****     *  None
 837:Generated_Source\PSoC5/PWM_2.c ****     *
 838:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_2.c ****     *
 841:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_2.c ****     {
 844:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_2.c ****     }
 846:Generated_Source\PSoC5/PWM_2.c **** 
 847:Generated_Source\PSoC5/PWM_2.c **** 
 848:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare2
 850:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_2.c ****     *
 852:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_2.c ****     *
 855:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_2.c ****     *  None
 857:Generated_Source\PSoC5/PWM_2.c ****     *
 858:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_2.c ****     *
 861:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_2.c ****     {
 864:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_2.c ****     }
 866:Generated_Source\PSoC5/PWM_2.c **** 
 867:Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_2.c **** 
 869:Generated_Source\PSoC5/PWM_2.c **** 
 870:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_ReadPeriod
 872:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_2.c **** *
 874:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_2.c **** *  Reads the period value used by the PWM hardware.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 27


 876:Generated_Source\PSoC5/PWM_2.c **** *
 877:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_2.c **** *  None
 879:Generated_Source\PSoC5/PWM_2.c **** *
 880:Generated_Source\PSoC5/PWM_2.c **** * Return:
 881:Generated_Source\PSoC5/PWM_2.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_2.c **** *
 883:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_2.c **** uint16 PWM_2_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_2.c **** {
 608              		.loc 1 885 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 80B4     		push	{r7}
 614              		.cfi_def_cfa_offset 4
 615              		.cfi_offset 7, -4
 616 0002 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_2.c ****         return ((uint16)CY_GET_REG16(PWM_2_PERIOD_LSB_PTR));
 618              		.loc 1 887 0
 619 0004 034B     		ldr	r3, .L40
 620 0006 1B88     		ldrh	r3, [r3]	@ movhi
 621 0008 9BB2     		uxth	r3, r3
 888:Generated_Source\PSoC5/PWM_2.c ****     #else
 889:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_PERIOD_LSB_PTR));
 890:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_2.c **** }
 622              		.loc 1 891 0
 623 000a 1846     		mov	r0, r3
 624 000c BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 000e 80BC     		pop	{r7}
 628              		.cfi_restore 7
 629              		.cfi_def_cfa_offset 0
 630 0010 7047     		bx	lr
 631              	.L41:
 632 0012 00BF     		.align	2
 633              	.L40:
 634 0014 104F0040 		.word	1073762064
 635              		.cfi_endproc
 636              	.LFE11:
 637              		.size	PWM_2_ReadPeriod, .-PWM_2_ReadPeriod
 638              		.text
 639              	.Letext0:
 640              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 641              		.section	.debug_info,"",%progbits
 642              	.Ldebug_info0:
 643 0000 2F020000 		.4byte	0x22f
 644 0004 0400     		.2byte	0x4
 645 0006 00000000 		.4byte	.Ldebug_abbrev0
 646 000a 04       		.byte	0x4
 647 000b 01       		.uleb128 0x1
 648 000c 2D000000 		.4byte	.LASF35
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 28


 649 0010 0C       		.byte	0xc
 650 0011 8D020000 		.4byte	.LASF36
 651 0015 19020000 		.4byte	.LASF37
 652 0019 00000000 		.4byte	.Ldebug_ranges0+0
 653 001d 00000000 		.4byte	0
 654 0021 00000000 		.4byte	.Ldebug_line0
 655 0025 02       		.uleb128 0x2
 656 0026 01       		.byte	0x1
 657 0027 06       		.byte	0x6
 658 0028 6E020000 		.4byte	.LASF0
 659 002c 02       		.uleb128 0x2
 660 002d 01       		.byte	0x1
 661 002e 08       		.byte	0x8
 662 002f FF000000 		.4byte	.LASF1
 663 0033 02       		.uleb128 0x2
 664 0034 02       		.byte	0x2
 665 0035 05       		.byte	0x5
 666 0036 09020000 		.4byte	.LASF2
 667 003a 02       		.uleb128 0x2
 668 003b 02       		.byte	0x2
 669 003c 07       		.byte	0x7
 670 003d C9000000 		.4byte	.LASF3
 671 0041 02       		.uleb128 0x2
 672 0042 04       		.byte	0x4
 673 0043 05       		.byte	0x5
 674 0044 48020000 		.4byte	.LASF4
 675 0048 02       		.uleb128 0x2
 676 0049 04       		.byte	0x4
 677 004a 07       		.byte	0x7
 678 004b 12010000 		.4byte	.LASF5
 679 004f 02       		.uleb128 0x2
 680 0050 08       		.byte	0x8
 681 0051 05       		.byte	0x5
 682 0052 00000000 		.4byte	.LASF6
 683 0056 02       		.uleb128 0x2
 684 0057 08       		.byte	0x8
 685 0058 07       		.byte	0x7
 686 0059 87010000 		.4byte	.LASF7
 687 005d 03       		.uleb128 0x3
 688 005e 04       		.byte	0x4
 689 005f 05       		.byte	0x5
 690 0060 696E7400 		.ascii	"int\000"
 691 0064 02       		.uleb128 0x2
 692 0065 04       		.byte	0x4
 693 0066 07       		.byte	0x7
 694 0067 7A010000 		.4byte	.LASF8
 695 006b 04       		.uleb128 0x4
 696 006c 24010000 		.4byte	.LASF9
 697 0070 02       		.byte	0x2
 698 0071 A1       		.byte	0xa1
 699 0072 2C000000 		.4byte	0x2c
 700 0076 04       		.uleb128 0x4
 701 0077 60010000 		.4byte	.LASF10
 702 007b 02       		.byte	0x2
 703 007c A2       		.byte	0xa2
 704 007d 3A000000 		.4byte	0x3a
 705 0081 02       		.uleb128 0x2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 29


 706 0082 04       		.byte	0x4
 707 0083 04       		.byte	0x4
 708 0084 E7000000 		.4byte	.LASF11
 709 0088 02       		.uleb128 0x2
 710 0089 08       		.byte	0x8
 711 008a 04       		.byte	0x4
 712 008b 4D010000 		.4byte	.LASF12
 713 008f 02       		.uleb128 0x2
 714 0090 01       		.byte	0x1
 715 0091 08       		.byte	0x8
 716 0092 28000000 		.4byte	.LASF13
 717 0096 05       		.uleb128 0x5
 718 0097 0D010000 		.4byte	.LASF14
 719 009b 02       		.byte	0x2
 720 009c 4B01     		.2byte	0x14b
 721 009e A2000000 		.4byte	0xa2
 722 00a2 06       		.uleb128 0x6
 723 00a3 6B000000 		.4byte	0x6b
 724 00a7 05       		.uleb128 0x5
 725 00a8 13020000 		.4byte	.LASF15
 726 00ac 02       		.byte	0x2
 727 00ad 4C01     		.2byte	0x14c
 728 00af B3000000 		.4byte	0xb3
 729 00b3 06       		.uleb128 0x6
 730 00b4 76000000 		.4byte	0x76
 731 00b8 02       		.uleb128 0x2
 732 00b9 08       		.byte	0x8
 733 00ba 04       		.byte	0x4
 734 00bb 62020000 		.4byte	.LASF16
 735 00bf 02       		.uleb128 0x2
 736 00c0 04       		.byte	0x4
 737 00c1 07       		.byte	0x7
 738 00c2 BC010000 		.4byte	.LASF17
 739 00c6 07       		.uleb128 0x7
 740 00c7 54010000 		.4byte	.LASF18
 741 00cb 01       		.byte	0x1
 742 00cc 37       		.byte	0x37
 743 00cd 00000000 		.4byte	.LFB0
 744 00d1 24000000 		.4byte	.LFE0-.LFB0
 745 00d5 01       		.uleb128 0x1
 746 00d6 9C       		.byte	0x9c
 747 00d7 08       		.uleb128 0x8
 748 00d8 82020000 		.4byte	.LASF21
 749 00dc 01       		.byte	0x1
 750 00dd 54       		.byte	0x54
 751 00de 00000000 		.4byte	.LFB1
 752 00e2 C0000000 		.4byte	.LFE1-.LFB1
 753 00e6 01       		.uleb128 0x1
 754 00e7 9C       		.byte	0x9c
 755 00e8 FB000000 		.4byte	0xfb
 756 00ec 09       		.uleb128 0x9
 757 00ed B7010000 		.4byte	.LASF28
 758 00f1 01       		.byte	0x1
 759 00f2 57       		.byte	0x57
 760 00f3 6B000000 		.4byte	0x6b
 761 00f7 02       		.uleb128 0x2
 762 00f8 91       		.byte	0x91
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 30


 763 00f9 77       		.sleb128 -9
 764 00fa 00       		.byte	0
 765 00fb 0A       		.uleb128 0xa
 766 00fc D7010000 		.4byte	.LASF19
 767 0100 01       		.byte	0x1
 768 0101 C7       		.byte	0xc7
 769 0102 00000000 		.4byte	.LFB2
 770 0106 48000000 		.4byte	.LFE2-.LFB2
 771 010a 01       		.uleb128 0x1
 772 010b 9C       		.byte	0x9c
 773 010c 0A       		.uleb128 0xa
 774 010d DC000000 		.4byte	.LASF20
 775 0111 01       		.byte	0x1
 776 0112 E9       		.byte	0xe9
 777 0113 00000000 		.4byte	.LFB3
 778 0117 48000000 		.4byte	.LFE3-.LFB3
 779 011b 01       		.uleb128 0x1
 780 011c 9C       		.byte	0x9c
 781 011d 0B       		.uleb128 0xb
 782 011e C5010000 		.4byte	.LASF22
 783 0122 01       		.byte	0x1
 784 0123 E201     		.2byte	0x1e2
 785 0125 00000000 		.4byte	.LFB4
 786 0129 20000000 		.4byte	.LFE4-.LFB4
 787 012d 01       		.uleb128 0x1
 788 012e 9C       		.byte	0x9c
 789 012f 43010000 		.4byte	0x143
 790 0133 0C       		.uleb128 0xc
 791 0134 C2000000 		.4byte	.LASF24
 792 0138 01       		.byte	0x1
 793 0139 E201     		.2byte	0x1e2
 794 013b 76000000 		.4byte	0x76
 795 013f 02       		.uleb128 0x2
 796 0140 91       		.byte	0x91
 797 0141 76       		.sleb128 -10
 798 0142 00       		.byte	0
 799 0143 0B       		.uleb128 0xb
 800 0144 67010000 		.4byte	.LASF23
 801 0148 01       		.byte	0x1
 802 0149 0402     		.2byte	0x204
 803 014b 00000000 		.4byte	.LFB5
 804 014f 20000000 		.4byte	.LFE5-.LFB5
 805 0153 01       		.uleb128 0x1
 806 0154 9C       		.byte	0x9c
 807 0155 69010000 		.4byte	0x169
 808 0159 0C       		.uleb128 0xc
 809 015a 7A020000 		.4byte	.LASF25
 810 015e 01       		.byte	0x1
 811 015f 0402     		.2byte	0x204
 812 0161 76000000 		.4byte	0x76
 813 0165 02       		.uleb128 0x2
 814 0166 91       		.byte	0x91
 815 0167 76       		.sleb128 -10
 816 0168 00       		.byte	0
 817 0169 0B       		.uleb128 0xb
 818 016a F2010000 		.4byte	.LASF26
 819 016e 01       		.byte	0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 31


 820 016f AC02     		.2byte	0x2ac
 821 0171 00000000 		.4byte	.LFB6
 822 0175 20000000 		.4byte	.LFE6-.LFB6
 823 0179 01       		.uleb128 0x1
 824 017a 9C       		.byte	0x9c
 825 017b 8F010000 		.4byte	0x18f
 826 017f 0C       		.uleb128 0xc
 827 0180 E4010000 		.4byte	.LASF27
 828 0184 01       		.byte	0x1
 829 0185 AC02     		.2byte	0x2ac
 830 0187 6B000000 		.4byte	0x6b
 831 018b 02       		.uleb128 0x2
 832 018c 91       		.byte	0x91
 833 018d 77       		.sleb128 -9
 834 018e 00       		.byte	0
 835 018f 0D       		.uleb128 0xd
 836 0190 9E010000 		.4byte	.LASF32
 837 0194 01       		.byte	0x1
 838 0195 C702     		.2byte	0x2c7
 839 0197 6B000000 		.4byte	0x6b
 840 019b 00000000 		.4byte	.LFB7
 841 019f 18000000 		.4byte	.LFE7-.LFB7
 842 01a3 01       		.uleb128 0x1
 843 01a4 9C       		.byte	0x9c
 844 01a5 0E       		.uleb128 0xe
 845 01a6 0E000000 		.4byte	.LASF38
 846 01aa 01       		.byte	0x1
 847 01ab E102     		.2byte	0x2e1
 848 01ad 6B000000 		.4byte	0x6b
 849 01b1 00000000 		.4byte	.LFB8
 850 01b5 1C000000 		.4byte	.LFE8-.LFB8
 851 01b9 01       		.uleb128 0x1
 852 01ba 9C       		.byte	0x9c
 853 01bb CF010000 		.4byte	0x1cf
 854 01bf 0F       		.uleb128 0xf
 855 01c0 BB000000 		.4byte	.LASF29
 856 01c4 01       		.byte	0x1
 857 01c5 E302     		.2byte	0x2e3
 858 01c7 6B000000 		.4byte	0x6b
 859 01cb 02       		.uleb128 0x2
 860 01cc 91       		.byte	0x91
 861 01cd 77       		.sleb128 -9
 862 01ce 00       		.byte	0
 863 01cf 0B       		.uleb128 0xb
 864 01d0 32010000 		.4byte	.LASF30
 865 01d4 01       		.byte	0x1
 866 01d5 FD02     		.2byte	0x2fd
 867 01d7 00000000 		.4byte	.LFB9
 868 01db 20000000 		.4byte	.LFE9-.LFB9
 869 01df 01       		.uleb128 0x1
 870 01e0 9C       		.byte	0x9c
 871 01e1 F5010000 		.4byte	0x1f5
 872 01e5 0C       		.uleb128 0xc
 873 01e6 2A010000 		.4byte	.LASF31
 874 01ea 01       		.byte	0x1
 875 01eb FD02     		.2byte	0x2fd
 876 01ed 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 32


 877 01f1 02       		.uleb128 0x2
 878 01f2 91       		.byte	0x91
 879 01f3 77       		.sleb128 -9
 880 01f4 00       		.byte	0
 881 01f5 0D       		.uleb128 0xd
 882 01f6 ED000000 		.4byte	.LASF33
 883 01fa 01       		.byte	0x1
 884 01fb 3003     		.2byte	0x330
 885 01fd 76000000 		.4byte	0x76
 886 0201 00000000 		.4byte	.LFB10
 887 0205 18000000 		.4byte	.LFE10-.LFB10
 888 0209 01       		.uleb128 0x1
 889 020a 9C       		.byte	0x9c
 890 020b 0D       		.uleb128 0xd
 891 020c 51020000 		.4byte	.LASF34
 892 0210 01       		.byte	0x1
 893 0211 7403     		.2byte	0x374
 894 0213 76000000 		.4byte	0x76
 895 0217 00000000 		.4byte	.LFB11
 896 021b 18000000 		.4byte	.LFE11-.LFB11
 897 021f 01       		.uleb128 0x1
 898 0220 9C       		.byte	0x9c
 899 0221 10       		.uleb128 0x10
 900 0222 AC020000 		.4byte	.LASF39
 901 0226 01       		.byte	0x1
 902 0227 20       		.byte	0x20
 903 0228 6B000000 		.4byte	0x6b
 904 022c 05       		.uleb128 0x5
 905 022d 03       		.byte	0x3
 906 022e 00000000 		.4byte	PWM_2_initVar
 907 0232 00       		.byte	0
 908              		.section	.debug_abbrev,"",%progbits
 909              	.Ldebug_abbrev0:
 910 0000 01       		.uleb128 0x1
 911 0001 11       		.uleb128 0x11
 912 0002 01       		.byte	0x1
 913 0003 25       		.uleb128 0x25
 914 0004 0E       		.uleb128 0xe
 915 0005 13       		.uleb128 0x13
 916 0006 0B       		.uleb128 0xb
 917 0007 03       		.uleb128 0x3
 918 0008 0E       		.uleb128 0xe
 919 0009 1B       		.uleb128 0x1b
 920 000a 0E       		.uleb128 0xe
 921 000b 55       		.uleb128 0x55
 922 000c 17       		.uleb128 0x17
 923 000d 11       		.uleb128 0x11
 924 000e 01       		.uleb128 0x1
 925 000f 10       		.uleb128 0x10
 926 0010 17       		.uleb128 0x17
 927 0011 00       		.byte	0
 928 0012 00       		.byte	0
 929 0013 02       		.uleb128 0x2
 930 0014 24       		.uleb128 0x24
 931 0015 00       		.byte	0
 932 0016 0B       		.uleb128 0xb
 933 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 33


 934 0018 3E       		.uleb128 0x3e
 935 0019 0B       		.uleb128 0xb
 936 001a 03       		.uleb128 0x3
 937 001b 0E       		.uleb128 0xe
 938 001c 00       		.byte	0
 939 001d 00       		.byte	0
 940 001e 03       		.uleb128 0x3
 941 001f 24       		.uleb128 0x24
 942 0020 00       		.byte	0
 943 0021 0B       		.uleb128 0xb
 944 0022 0B       		.uleb128 0xb
 945 0023 3E       		.uleb128 0x3e
 946 0024 0B       		.uleb128 0xb
 947 0025 03       		.uleb128 0x3
 948 0026 08       		.uleb128 0x8
 949 0027 00       		.byte	0
 950 0028 00       		.byte	0
 951 0029 04       		.uleb128 0x4
 952 002a 16       		.uleb128 0x16
 953 002b 00       		.byte	0
 954 002c 03       		.uleb128 0x3
 955 002d 0E       		.uleb128 0xe
 956 002e 3A       		.uleb128 0x3a
 957 002f 0B       		.uleb128 0xb
 958 0030 3B       		.uleb128 0x3b
 959 0031 0B       		.uleb128 0xb
 960 0032 49       		.uleb128 0x49
 961 0033 13       		.uleb128 0x13
 962 0034 00       		.byte	0
 963 0035 00       		.byte	0
 964 0036 05       		.uleb128 0x5
 965 0037 16       		.uleb128 0x16
 966 0038 00       		.byte	0
 967 0039 03       		.uleb128 0x3
 968 003a 0E       		.uleb128 0xe
 969 003b 3A       		.uleb128 0x3a
 970 003c 0B       		.uleb128 0xb
 971 003d 3B       		.uleb128 0x3b
 972 003e 05       		.uleb128 0x5
 973 003f 49       		.uleb128 0x49
 974 0040 13       		.uleb128 0x13
 975 0041 00       		.byte	0
 976 0042 00       		.byte	0
 977 0043 06       		.uleb128 0x6
 978 0044 35       		.uleb128 0x35
 979 0045 00       		.byte	0
 980 0046 49       		.uleb128 0x49
 981 0047 13       		.uleb128 0x13
 982 0048 00       		.byte	0
 983 0049 00       		.byte	0
 984 004a 07       		.uleb128 0x7
 985 004b 2E       		.uleb128 0x2e
 986 004c 00       		.byte	0
 987 004d 3F       		.uleb128 0x3f
 988 004e 19       		.uleb128 0x19
 989 004f 03       		.uleb128 0x3
 990 0050 0E       		.uleb128 0xe
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 34


 991 0051 3A       		.uleb128 0x3a
 992 0052 0B       		.uleb128 0xb
 993 0053 3B       		.uleb128 0x3b
 994 0054 0B       		.uleb128 0xb
 995 0055 27       		.uleb128 0x27
 996 0056 19       		.uleb128 0x19
 997 0057 11       		.uleb128 0x11
 998 0058 01       		.uleb128 0x1
 999 0059 12       		.uleb128 0x12
 1000 005a 06       		.uleb128 0x6
 1001 005b 40       		.uleb128 0x40
 1002 005c 18       		.uleb128 0x18
 1003 005d 9642     		.uleb128 0x2116
 1004 005f 19       		.uleb128 0x19
 1005 0060 00       		.byte	0
 1006 0061 00       		.byte	0
 1007 0062 08       		.uleb128 0x8
 1008 0063 2E       		.uleb128 0x2e
 1009 0064 01       		.byte	0x1
 1010 0065 3F       		.uleb128 0x3f
 1011 0066 19       		.uleb128 0x19
 1012 0067 03       		.uleb128 0x3
 1013 0068 0E       		.uleb128 0xe
 1014 0069 3A       		.uleb128 0x3a
 1015 006a 0B       		.uleb128 0xb
 1016 006b 3B       		.uleb128 0x3b
 1017 006c 0B       		.uleb128 0xb
 1018 006d 27       		.uleb128 0x27
 1019 006e 19       		.uleb128 0x19
 1020 006f 11       		.uleb128 0x11
 1021 0070 01       		.uleb128 0x1
 1022 0071 12       		.uleb128 0x12
 1023 0072 06       		.uleb128 0x6
 1024 0073 40       		.uleb128 0x40
 1025 0074 18       		.uleb128 0x18
 1026 0075 9642     		.uleb128 0x2116
 1027 0077 19       		.uleb128 0x19
 1028 0078 01       		.uleb128 0x1
 1029 0079 13       		.uleb128 0x13
 1030 007a 00       		.byte	0
 1031 007b 00       		.byte	0
 1032 007c 09       		.uleb128 0x9
 1033 007d 34       		.uleb128 0x34
 1034 007e 00       		.byte	0
 1035 007f 03       		.uleb128 0x3
 1036 0080 0E       		.uleb128 0xe
 1037 0081 3A       		.uleb128 0x3a
 1038 0082 0B       		.uleb128 0xb
 1039 0083 3B       		.uleb128 0x3b
 1040 0084 0B       		.uleb128 0xb
 1041 0085 49       		.uleb128 0x49
 1042 0086 13       		.uleb128 0x13
 1043 0087 02       		.uleb128 0x2
 1044 0088 18       		.uleb128 0x18
 1045 0089 00       		.byte	0
 1046 008a 00       		.byte	0
 1047 008b 0A       		.uleb128 0xa
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 35


 1048 008c 2E       		.uleb128 0x2e
 1049 008d 00       		.byte	0
 1050 008e 3F       		.uleb128 0x3f
 1051 008f 19       		.uleb128 0x19
 1052 0090 03       		.uleb128 0x3
 1053 0091 0E       		.uleb128 0xe
 1054 0092 3A       		.uleb128 0x3a
 1055 0093 0B       		.uleb128 0xb
 1056 0094 3B       		.uleb128 0x3b
 1057 0095 0B       		.uleb128 0xb
 1058 0096 27       		.uleb128 0x27
 1059 0097 19       		.uleb128 0x19
 1060 0098 11       		.uleb128 0x11
 1061 0099 01       		.uleb128 0x1
 1062 009a 12       		.uleb128 0x12
 1063 009b 06       		.uleb128 0x6
 1064 009c 40       		.uleb128 0x40
 1065 009d 18       		.uleb128 0x18
 1066 009e 9742     		.uleb128 0x2117
 1067 00a0 19       		.uleb128 0x19
 1068 00a1 00       		.byte	0
 1069 00a2 00       		.byte	0
 1070 00a3 0B       		.uleb128 0xb
 1071 00a4 2E       		.uleb128 0x2e
 1072 00a5 01       		.byte	0x1
 1073 00a6 3F       		.uleb128 0x3f
 1074 00a7 19       		.uleb128 0x19
 1075 00a8 03       		.uleb128 0x3
 1076 00a9 0E       		.uleb128 0xe
 1077 00aa 3A       		.uleb128 0x3a
 1078 00ab 0B       		.uleb128 0xb
 1079 00ac 3B       		.uleb128 0x3b
 1080 00ad 05       		.uleb128 0x5
 1081 00ae 27       		.uleb128 0x27
 1082 00af 19       		.uleb128 0x19
 1083 00b0 11       		.uleb128 0x11
 1084 00b1 01       		.uleb128 0x1
 1085 00b2 12       		.uleb128 0x12
 1086 00b3 06       		.uleb128 0x6
 1087 00b4 40       		.uleb128 0x40
 1088 00b5 18       		.uleb128 0x18
 1089 00b6 9742     		.uleb128 0x2117
 1090 00b8 19       		.uleb128 0x19
 1091 00b9 01       		.uleb128 0x1
 1092 00ba 13       		.uleb128 0x13
 1093 00bb 00       		.byte	0
 1094 00bc 00       		.byte	0
 1095 00bd 0C       		.uleb128 0xc
 1096 00be 05       		.uleb128 0x5
 1097 00bf 00       		.byte	0
 1098 00c0 03       		.uleb128 0x3
 1099 00c1 0E       		.uleb128 0xe
 1100 00c2 3A       		.uleb128 0x3a
 1101 00c3 0B       		.uleb128 0xb
 1102 00c4 3B       		.uleb128 0x3b
 1103 00c5 05       		.uleb128 0x5
 1104 00c6 49       		.uleb128 0x49
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 36


 1105 00c7 13       		.uleb128 0x13
 1106 00c8 02       		.uleb128 0x2
 1107 00c9 18       		.uleb128 0x18
 1108 00ca 00       		.byte	0
 1109 00cb 00       		.byte	0
 1110 00cc 0D       		.uleb128 0xd
 1111 00cd 2E       		.uleb128 0x2e
 1112 00ce 00       		.byte	0
 1113 00cf 3F       		.uleb128 0x3f
 1114 00d0 19       		.uleb128 0x19
 1115 00d1 03       		.uleb128 0x3
 1116 00d2 0E       		.uleb128 0xe
 1117 00d3 3A       		.uleb128 0x3a
 1118 00d4 0B       		.uleb128 0xb
 1119 00d5 3B       		.uleb128 0x3b
 1120 00d6 05       		.uleb128 0x5
 1121 00d7 27       		.uleb128 0x27
 1122 00d8 19       		.uleb128 0x19
 1123 00d9 49       		.uleb128 0x49
 1124 00da 13       		.uleb128 0x13
 1125 00db 11       		.uleb128 0x11
 1126 00dc 01       		.uleb128 0x1
 1127 00dd 12       		.uleb128 0x12
 1128 00de 06       		.uleb128 0x6
 1129 00df 40       		.uleb128 0x40
 1130 00e0 18       		.uleb128 0x18
 1131 00e1 9742     		.uleb128 0x2117
 1132 00e3 19       		.uleb128 0x19
 1133 00e4 00       		.byte	0
 1134 00e5 00       		.byte	0
 1135 00e6 0E       		.uleb128 0xe
 1136 00e7 2E       		.uleb128 0x2e
 1137 00e8 01       		.byte	0x1
 1138 00e9 3F       		.uleb128 0x3f
 1139 00ea 19       		.uleb128 0x19
 1140 00eb 03       		.uleb128 0x3
 1141 00ec 0E       		.uleb128 0xe
 1142 00ed 3A       		.uleb128 0x3a
 1143 00ee 0B       		.uleb128 0xb
 1144 00ef 3B       		.uleb128 0x3b
 1145 00f0 05       		.uleb128 0x5
 1146 00f1 27       		.uleb128 0x27
 1147 00f2 19       		.uleb128 0x19
 1148 00f3 49       		.uleb128 0x49
 1149 00f4 13       		.uleb128 0x13
 1150 00f5 11       		.uleb128 0x11
 1151 00f6 01       		.uleb128 0x1
 1152 00f7 12       		.uleb128 0x12
 1153 00f8 06       		.uleb128 0x6
 1154 00f9 40       		.uleb128 0x40
 1155 00fa 18       		.uleb128 0x18
 1156 00fb 9742     		.uleb128 0x2117
 1157 00fd 19       		.uleb128 0x19
 1158 00fe 01       		.uleb128 0x1
 1159 00ff 13       		.uleb128 0x13
 1160 0100 00       		.byte	0
 1161 0101 00       		.byte	0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 37


 1162 0102 0F       		.uleb128 0xf
 1163 0103 34       		.uleb128 0x34
 1164 0104 00       		.byte	0
 1165 0105 03       		.uleb128 0x3
 1166 0106 0E       		.uleb128 0xe
 1167 0107 3A       		.uleb128 0x3a
 1168 0108 0B       		.uleb128 0xb
 1169 0109 3B       		.uleb128 0x3b
 1170 010a 05       		.uleb128 0x5
 1171 010b 49       		.uleb128 0x49
 1172 010c 13       		.uleb128 0x13
 1173 010d 02       		.uleb128 0x2
 1174 010e 18       		.uleb128 0x18
 1175 010f 00       		.byte	0
 1176 0110 00       		.byte	0
 1177 0111 10       		.uleb128 0x10
 1178 0112 34       		.uleb128 0x34
 1179 0113 00       		.byte	0
 1180 0114 03       		.uleb128 0x3
 1181 0115 0E       		.uleb128 0xe
 1182 0116 3A       		.uleb128 0x3a
 1183 0117 0B       		.uleb128 0xb
 1184 0118 3B       		.uleb128 0x3b
 1185 0119 0B       		.uleb128 0xb
 1186 011a 49       		.uleb128 0x49
 1187 011b 13       		.uleb128 0x13
 1188 011c 3F       		.uleb128 0x3f
 1189 011d 19       		.uleb128 0x19
 1190 011e 02       		.uleb128 0x2
 1191 011f 18       		.uleb128 0x18
 1192 0120 00       		.byte	0
 1193 0121 00       		.byte	0
 1194 0122 00       		.byte	0
 1195              		.section	.debug_aranges,"",%progbits
 1196 0000 74000000 		.4byte	0x74
 1197 0004 0200     		.2byte	0x2
 1198 0006 00000000 		.4byte	.Ldebug_info0
 1199 000a 04       		.byte	0x4
 1200 000b 00       		.byte	0
 1201 000c 0000     		.2byte	0
 1202 000e 0000     		.2byte	0
 1203 0010 00000000 		.4byte	.LFB0
 1204 0014 24000000 		.4byte	.LFE0-.LFB0
 1205 0018 00000000 		.4byte	.LFB1
 1206 001c C0000000 		.4byte	.LFE1-.LFB1
 1207 0020 00000000 		.4byte	.LFB2
 1208 0024 48000000 		.4byte	.LFE2-.LFB2
 1209 0028 00000000 		.4byte	.LFB3
 1210 002c 48000000 		.4byte	.LFE3-.LFB3
 1211 0030 00000000 		.4byte	.LFB4
 1212 0034 20000000 		.4byte	.LFE4-.LFB4
 1213 0038 00000000 		.4byte	.LFB5
 1214 003c 20000000 		.4byte	.LFE5-.LFB5
 1215 0040 00000000 		.4byte	.LFB6
 1216 0044 20000000 		.4byte	.LFE6-.LFB6
 1217 0048 00000000 		.4byte	.LFB7
 1218 004c 18000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 38


 1219 0050 00000000 		.4byte	.LFB8
 1220 0054 1C000000 		.4byte	.LFE8-.LFB8
 1221 0058 00000000 		.4byte	.LFB9
 1222 005c 20000000 		.4byte	.LFE9-.LFB9
 1223 0060 00000000 		.4byte	.LFB10
 1224 0064 18000000 		.4byte	.LFE10-.LFB10
 1225 0068 00000000 		.4byte	.LFB11
 1226 006c 18000000 		.4byte	.LFE11-.LFB11
 1227 0070 00000000 		.4byte	0
 1228 0074 00000000 		.4byte	0
 1229              		.section	.debug_ranges,"",%progbits
 1230              	.Ldebug_ranges0:
 1231 0000 00000000 		.4byte	.LFB0
 1232 0004 24000000 		.4byte	.LFE0
 1233 0008 00000000 		.4byte	.LFB1
 1234 000c C0000000 		.4byte	.LFE1
 1235 0010 00000000 		.4byte	.LFB2
 1236 0014 48000000 		.4byte	.LFE2
 1237 0018 00000000 		.4byte	.LFB3
 1238 001c 48000000 		.4byte	.LFE3
 1239 0020 00000000 		.4byte	.LFB4
 1240 0024 20000000 		.4byte	.LFE4
 1241 0028 00000000 		.4byte	.LFB5
 1242 002c 20000000 		.4byte	.LFE5
 1243 0030 00000000 		.4byte	.LFB6
 1244 0034 20000000 		.4byte	.LFE6
 1245 0038 00000000 		.4byte	.LFB7
 1246 003c 18000000 		.4byte	.LFE7
 1247 0040 00000000 		.4byte	.LFB8
 1248 0044 1C000000 		.4byte	.LFE8
 1249 0048 00000000 		.4byte	.LFB9
 1250 004c 20000000 		.4byte	.LFE9
 1251 0050 00000000 		.4byte	.LFB10
 1252 0054 18000000 		.4byte	.LFE10
 1253 0058 00000000 		.4byte	.LFB11
 1254 005c 18000000 		.4byte	.LFE11
 1255 0060 00000000 		.4byte	0
 1256 0064 00000000 		.4byte	0
 1257              		.section	.debug_line,"",%progbits
 1258              	.Ldebug_line0:
 1259 0000 3C010000 		.section	.debug_str,"MS",%progbits,1
 1259      02004200 
 1259      00000201 
 1259      FB0E0D00 
 1259      01010101 
 1260              	.LASF6:
 1261 0000 6C6F6E67 		.ascii	"long long int\000"
 1261      206C6F6E 
 1261      6720696E 
 1261      7400
 1262              	.LASF38:
 1263 000e 50574D5F 		.ascii	"PWM_2_ReadControlRegister\000"
 1263      325F5265 
 1263      6164436F 
 1263      6E74726F 
 1263      6C526567 
 1264              	.LASF13:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 39


 1265 0028 63686172 		.ascii	"char\000"
 1265      00
 1266              	.LASF35:
 1267 002d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1267      43313120 
 1267      352E342E 
 1267      31203230 
 1267      31363036 
 1268 0060 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1268      20726576 
 1268      6973696F 
 1268      6E203233 
 1268      37373135 
 1269 0093 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1269      66756E63 
 1269      74696F6E 
 1269      2D736563 
 1269      74696F6E 
 1270              	.LASF29:
 1271 00bb 72657375 		.ascii	"result\000"
 1271      6C7400
 1272              	.LASF24:
 1273 00c2 70657269 		.ascii	"period\000"
 1273      6F6400
 1274              	.LASF3:
 1275 00c9 73686F72 		.ascii	"short unsigned int\000"
 1275      7420756E 
 1275      7369676E 
 1275      65642069 
 1275      6E7400
 1276              	.LASF20:
 1277 00dc 50574D5F 		.ascii	"PWM_2_Stop\000"
 1277      325F5374 
 1277      6F7000
 1278              	.LASF11:
 1279 00e7 666C6F61 		.ascii	"float\000"
 1279      7400
 1280              	.LASF33:
 1281 00ed 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 1281      325F5265 
 1281      6164436F 
 1281      6D706172 
 1281      6500
 1282              	.LASF1:
 1283 00ff 756E7369 		.ascii	"unsigned char\000"
 1283      676E6564 
 1283      20636861 
 1283      7200
 1284              	.LASF14:
 1285 010d 72656738 		.ascii	"reg8\000"
 1285      00
 1286              	.LASF5:
 1287 0112 6C6F6E67 		.ascii	"long unsigned int\000"
 1287      20756E73 
 1287      69676E65 
 1287      6420696E 
 1287      7400
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 40


 1288              	.LASF9:
 1289 0124 75696E74 		.ascii	"uint8\000"
 1289      3800
 1290              	.LASF31:
 1291 012a 636F6E74 		.ascii	"control\000"
 1291      726F6C00 
 1292              	.LASF30:
 1293 0132 50574D5F 		.ascii	"PWM_2_WriteControlRegister\000"
 1293      325F5772 
 1293      69746543 
 1293      6F6E7472 
 1293      6F6C5265 
 1294              	.LASF12:
 1295 014d 646F7562 		.ascii	"double\000"
 1295      6C6500
 1296              	.LASF18:
 1297 0154 50574D5F 		.ascii	"PWM_2_Start\000"
 1297      325F5374 
 1297      61727400 
 1298              	.LASF10:
 1299 0160 75696E74 		.ascii	"uint16\000"
 1299      313600
 1300              	.LASF23:
 1301 0167 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
 1301      325F5772 
 1301      69746543 
 1301      6F6D7061 
 1301      726500
 1302              	.LASF8:
 1303 017a 756E7369 		.ascii	"unsigned int\000"
 1303      676E6564 
 1303      20696E74 
 1303      00
 1304              	.LASF7:
 1305 0187 6C6F6E67 		.ascii	"long long unsigned int\000"
 1305      206C6F6E 
 1305      6720756E 
 1305      7369676E 
 1305      65642069 
 1306              	.LASF32:
 1307 019e 50574D5F 		.ascii	"PWM_2_ReadStatusRegister\000"
 1307      325F5265 
 1307      61645374 
 1307      61747573 
 1307      52656769 
 1308              	.LASF28:
 1309 01b7 6374726C 		.ascii	"ctrl\000"
 1309      00
 1310              	.LASF17:
 1311 01bc 73697A65 		.ascii	"sizetype\000"
 1311      74797065 
 1311      00
 1312              	.LASF22:
 1313 01c5 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 1313      325F5772 
 1313      69746550 
 1313      6572696F 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 41


 1313      6400
 1314              	.LASF19:
 1315 01d7 50574D5F 		.ascii	"PWM_2_Enable\000"
 1315      325F456E 
 1315      61626C65 
 1315      00
 1316              	.LASF27:
 1317 01e4 696E7465 		.ascii	"interruptMode\000"
 1317      72727570 
 1317      744D6F64 
 1317      6500
 1318              	.LASF26:
 1319 01f2 50574D5F 		.ascii	"PWM_2_SetInterruptMode\000"
 1319      325F5365 
 1319      74496E74 
 1319      65727275 
 1319      70744D6F 
 1320              	.LASF2:
 1321 0209 73686F72 		.ascii	"short int\000"
 1321      7420696E 
 1321      7400
 1322              	.LASF15:
 1323 0213 72656731 		.ascii	"reg16\000"
 1323      3600
 1324              	.LASF37:
 1325 0219 443A5C44 		.ascii	"D:\\Documents\\DPEA_Projects\\RpiMIB\\Start1.cydsn\000"
 1325      6F63756D 
 1325      656E7473 
 1325      5C445045 
 1325      415F5072 
 1326              	.LASF4:
 1327 0248 6C6F6E67 		.ascii	"long int\000"
 1327      20696E74 
 1327      00
 1328              	.LASF34:
 1329 0251 50574D5F 		.ascii	"PWM_2_ReadPeriod\000"
 1329      325F5265 
 1329      61645065 
 1329      72696F64 
 1329      00
 1330              	.LASF16:
 1331 0262 6C6F6E67 		.ascii	"long double\000"
 1331      20646F75 
 1331      626C6500 
 1332              	.LASF0:
 1333 026e 7369676E 		.ascii	"signed char\000"
 1333      65642063 
 1333      68617200 
 1334              	.LASF25:
 1335 027a 636F6D70 		.ascii	"compare\000"
 1335      61726500 
 1336              	.LASF21:
 1337 0282 50574D5F 		.ascii	"PWM_2_Init\000"
 1337      325F496E 
 1337      697400
 1338              	.LASF36:
 1339 028d 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_2.c\000"
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccgotwpH.s 			page 42


 1339      72617465 
 1339      645F536F 
 1339      75726365 
 1339      5C50536F 
 1340              	.LASF39:
 1341 02ac 50574D5F 		.ascii	"PWM_2_initVar\000"
 1341      325F696E 
 1341      69745661 
 1341      7200
 1342              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
