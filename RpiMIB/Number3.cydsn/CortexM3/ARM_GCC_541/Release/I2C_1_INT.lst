ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"I2C_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_1_ISR,"ax",%progbits
  20              		.align	1
  21              		.global	I2C_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	I2C_1_ISR, %function
  25              	I2C_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\I2C_1_INT.c"
   1:Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/I2C_1_INT.c **** * File Name: I2C_1_INT.c
   3:Generated_Source\PSoC5/I2C_1_INT.c **** * Version 3.50
   4:Generated_Source\PSoC5/I2C_1_INT.c **** *
   5:Generated_Source\PSoC5/I2C_1_INT.c **** * Description:
   6:Generated_Source\PSoC5/I2C_1_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:Generated_Source\PSoC5/I2C_1_INT.c **** *  for the I2C component.
   8:Generated_Source\PSoC5/I2C_1_INT.c **** *
   9:Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/I2C_1_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC5/I2C_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/I2C_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/I2C_1_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/I2C_1_INT.c **** 
  16:Generated_Source\PSoC5/I2C_1_INT.c **** #include "I2C_1_PVT.h"
  17:Generated_Source\PSoC5/I2C_1_INT.c **** #include "cyapicallbacks.h"
  18:Generated_Source\PSoC5/I2C_1_INT.c **** 
  19:Generated_Source\PSoC5/I2C_1_INT.c **** 
  20:Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  21:Generated_Source\PSoC5/I2C_1_INT.c **** *  Place your includes, defines and code here.
  22:Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/I2C_1_INT.c **** /* `#START I2C_1_ISR_intc` */
  24:Generated_Source\PSoC5/I2C_1_INT.c **** 
  25:Generated_Source\PSoC5/I2C_1_INT.c **** /* `#END` */
  26:Generated_Source\PSoC5/I2C_1_INT.c **** 
  27:Generated_Source\PSoC5/I2C_1_INT.c **** 
  28:Generated_Source\PSoC5/I2C_1_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC5/I2C_1_INT.c **** * Function Name: I2C_1_ISR
  30:Generated_Source\PSoC5/I2C_1_INT.c **** ********************************************************************************
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 2


  31:Generated_Source\PSoC5/I2C_1_INT.c **** *
  32:Generated_Source\PSoC5/I2C_1_INT.c **** * Summary:
  33:Generated_Source\PSoC5/I2C_1_INT.c **** *  The handler for the I2C interrupt. The slave and master operations are
  34:Generated_Source\PSoC5/I2C_1_INT.c **** *  handled here.
  35:Generated_Source\PSoC5/I2C_1_INT.c **** *
  36:Generated_Source\PSoC5/I2C_1_INT.c **** * Parameters:
  37:Generated_Source\PSoC5/I2C_1_INT.c **** *  None.
  38:Generated_Source\PSoC5/I2C_1_INT.c **** *
  39:Generated_Source\PSoC5/I2C_1_INT.c **** * Return:
  40:Generated_Source\PSoC5/I2C_1_INT.c **** *  None.
  41:Generated_Source\PSoC5/I2C_1_INT.c **** *
  42:Generated_Source\PSoC5/I2C_1_INT.c **** * Reentrant:
  43:Generated_Source\PSoC5/I2C_1_INT.c **** *  No.
  44:Generated_Source\PSoC5/I2C_1_INT.c **** *
  45:Generated_Source\PSoC5/I2C_1_INT.c **** *******************************************************************************/
  46:Generated_Source\PSoC5/I2C_1_INT.c **** CY_ISR(I2C_1_ISR)
  47:Generated_Source\PSoC5/I2C_1_INT.c **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  48:Generated_Source\PSoC5/I2C_1_INT.c **** #if (I2C_1_MODE_SLAVE_ENABLED)
  49:Generated_Source\PSoC5/I2C_1_INT.c ****    uint8  tmp8;
  50:Generated_Source\PSoC5/I2C_1_INT.c **** #endif  /* (I2C_1_MODE_SLAVE_ENABLED) */
  51:Generated_Source\PSoC5/I2C_1_INT.c **** 
  52:Generated_Source\PSoC5/I2C_1_INT.c ****     uint8  tmpCsr;
  53:Generated_Source\PSoC5/I2C_1_INT.c ****     
  54:Generated_Source\PSoC5/I2C_1_INT.c **** #ifdef I2C_1_ISR_ENTRY_CALLBACK
  55:Generated_Source\PSoC5/I2C_1_INT.c ****     I2C_1_ISR_EntryCallback();
  56:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* I2C_1_ISR_ENTRY_CALLBACK */
  57:Generated_Source\PSoC5/I2C_1_INT.c ****     
  58:Generated_Source\PSoC5/I2C_1_INT.c **** 
  59:Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_TIMEOUT_FF_ENABLED)
  60:Generated_Source\PSoC5/I2C_1_INT.c ****     if(0u != I2C_1_TimeoutGetStatus())
  61:Generated_Source\PSoC5/I2C_1_INT.c ****     {
  62:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_TimeoutReset();
  63:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_EXIT_IDLE;
  64:Generated_Source\PSoC5/I2C_1_INT.c ****         /* I2C_1_CSR_REG should be cleared after reset */
  65:Generated_Source\PSoC5/I2C_1_INT.c ****     }
  66:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_TIMEOUT_FF_ENABLED) */
  67:Generated_Source\PSoC5/I2C_1_INT.c **** 
  68:Generated_Source\PSoC5/I2C_1_INT.c **** 
  69:Generated_Source\PSoC5/I2C_1_INT.c ****     tmpCsr = I2C_1_CSR_REG;      /* Make copy as interrupts clear */
  70:Generated_Source\PSoC5/I2C_1_INT.c **** 
  71:Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  72:Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_START_GEN(I2C_1_MCSR_REG))
  73:Generated_Source\PSoC5/I2C_1_INT.c ****     {
  74:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_CLEAR_START_GEN;
  75:Generated_Source\PSoC5/I2C_1_INT.c **** 
  76:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Set transfer complete and error flags */
  77:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
  78:Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_GET_MSTAT_CMPLT);
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 3


  79:Generated_Source\PSoC5/I2C_1_INT.c **** 
  80:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Slave was addressed */
  81:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_SLAVE;
  82:Generated_Source\PSoC5/I2C_1_INT.c ****     }
  83:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  84:Generated_Source\PSoC5/I2C_1_INT.c **** 
  85:Generated_Source\PSoC5/I2C_1_INT.c **** 
  86:Generated_Source\PSoC5/I2C_1_INT.c **** #if(I2C_1_MODE_MULTI_MASTER_ENABLED)
  87:Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_LOST_ARB(tmpCsr))
  88:Generated_Source\PSoC5/I2C_1_INT.c ****     {
  89:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Set errors */
  90:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER     |
  91:Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_MSTAT_ERR_ARB_LOST |
  92:Generated_Source\PSoC5/I2C_1_INT.c ****                                         I2C_1_GET_MSTAT_CMPLT);
  93:Generated_Source\PSoC5/I2C_1_INT.c **** 
  94:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  95:Generated_Source\PSoC5/I2C_1_INT.c **** 
  96:Generated_Source\PSoC5/I2C_1_INT.c ****         #if(I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED)
  97:Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
  98:Generated_Source\PSoC5/I2C_1_INT.c ****             {
  99:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Slave was addressed */
 100:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_SLAVE;
 101:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 102:Generated_Source\PSoC5/I2C_1_INT.c ****             else
 103:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 104:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_BUS_RELEASE;
 105:Generated_Source\PSoC5/I2C_1_INT.c **** 
 106:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_EXIT_IDLE;
 107:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 108:Generated_Source\PSoC5/I2C_1_INT.c ****         #else
 109:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_BUS_RELEASE;
 110:Generated_Source\PSoC5/I2C_1_INT.c **** 
 111:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_EXIT_IDLE;
 112:Generated_Source\PSoC5/I2C_1_INT.c **** 
 113:Generated_Source\PSoC5/I2C_1_INT.c ****         #endif /* (I2C_1_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 114:Generated_Source\PSoC5/I2C_1_INT.c ****     }
 115:Generated_Source\PSoC5/I2C_1_INT.c **** #endif /* (I2C_1_MODE_MULTI_MASTER_ENABLED) */
 116:Generated_Source\PSoC5/I2C_1_INT.c **** 
 117:Generated_Source\PSoC5/I2C_1_INT.c ****     /* Check for master operation mode */
 118:Generated_Source\PSoC5/I2C_1_INT.c ****     if(I2C_1_CHECK_SM_MASTER)
  37              		.loc 1 118 0
  38 0002 9649     		ldr	r1, .L37
  69:Generated_Source\PSoC5/I2C_1_INT.c **** 
  39              		.loc 1 69 0
  40 0004 964B     		ldr	r3, .L37+4
  41 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  42              		.loc 1 118 0
  43 0008 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  69:Generated_Source\PSoC5/I2C_1_INT.c **** 
  44              		.loc 1 69 0
  45 000a DBB2     		uxtb	r3, r3
  46              	.LVL0:
  47              		.loc 1 118 0
  48 000c 12F0400F 		tst	r2, #64
  49 0010 0A46     		mov	r2, r1
  50 0012 00F01C81 		beq	.L2
 119:Generated_Source\PSoC5/I2C_1_INT.c ****     {
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 4


 120:Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_MASTER_ENABLED)
 121:Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
  51              		.loc 1 121 0
  52 0016 D807     		lsls	r0, r3, #31
  53 0018 40F10581 		bpl	.L3
 122:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 123:Generated_Source\PSoC5/I2C_1_INT.c ****             switch (I2C_1_state)
  54              		.loc 1 123 0
  55 001c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
  56 001e 4539     		subs	r1, r1, #69
  57 0020 0529     		cmp	r1, #5
  58 0022 00F20081 		bhi	.L3
  59 0026 DFE811F0 		tbh	[pc, r1, lsl #1]
  60              	.L5:
  61 002a 0600     		.2byte	(.L4-.L5)/2
  62 002c 6E00     		.2byte	(.L6-.L5)/2
  63 002e FE00     		.2byte	(.L3-.L5)/2
  64 0030 FE00     		.2byte	(.L3-.L5)/2
  65 0032 0600     		.2byte	(.L4-.L5)/2
  66 0034 C100     		.2byte	(.L7-.L5)/2
  67              		.p2align 1
  68              	.L4:
 124:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 125:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_WR_ADDR:  /* After address is sent, write data */
 126:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_RD_ADDR:  /* After address is sent, read data */
 127:Generated_Source\PSoC5/I2C_1_INT.c **** 
 128:Generated_Source\PSoC5/I2C_1_INT.c ****                 tmpCsr &= ((uint8) ~I2C_1_CSR_STOP_STATUS); /* Clear Stop bit history on address ph
  69              		.loc 1 128 0
  70 0036 03F0DF01 		and	r1, r3, #223
  71              	.LVL1:
 129:Generated_Source\PSoC5/I2C_1_INT.c **** 
 130:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_ADDR_ACK(tmpCsr))
  72              		.loc 1 130 0
  73 003a 03F00A03 		and	r3, r3, #10
  74 003e 082B     		cmp	r3, #8
  75 0040 35D1     		bne	.L8
 131:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 132:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Setup for transmit or receive of data */
 133:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_state == I2C_1_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
  76              		.loc 1 133 0
  77 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  78 0044 8548     		ldr	r0, .L37
  79 0046 452B     		cmp	r3, #69
  80 0048 25D1     		bne	.L9
 134:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 135:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Check if at least one byte to transfer */
 136:Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_mstrWrBufSize > 0u)
  81              		.loc 1 136 0
  82 004a 864B     		ldr	r3, .L37+8
  83 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  84 004e 9BB1     		cbz	r3, .L10
 137:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 138:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Load the 1st data byte */
 139:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_mstrWrBufPtr[0u];
  85              		.loc 1 139 0
  86 0050 854B     		ldr	r3, .L37+12
  87 0052 864C     		ldr	r4, .L37+16
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 5


  88 0054 1B68     		ldr	r3, [r3]
  89 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90 0058 DBB2     		uxtb	r3, r3
  91 005a 2370     		strb	r3, [r4]
 140:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_TRANSMIT_DATA;
  92              		.loc 1 140 0
  93 005c 844B     		ldr	r3, .L37+20
  94 005e 0624     		movs	r4, #6
  95 0060 1C70     		strb	r4, [r3]
  96 0062 FF24     		movs	r4, #255
  97 0064 03F8634C 		strb	r4, [r3, #-99]
  98 0068 0024     		movs	r4, #0
  99 006a 03F8234C 		strb	r4, [r3, #-35]
 141:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
 100              		.loc 1 141 0
 101 006e 814B     		ldr	r3, .L37+24
 102 0070 0124     		movs	r4, #1
 103 0072 1C70     		strb	r4, [r3]
 142:Generated_Source\PSoC5/I2C_1_INT.c **** 
 143:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Set transmit state until done */
 144:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_WR_DATA;
 104              		.loc 1 144 0
 105 0074 4623     		movs	r3, #70
 106 0076 18E0     		b	.L35
 107              	.L10:
 145:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 146:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* End of buffer: complete writing */
 147:Generated_Source\PSoC5/I2C_1_INT.c ****                         else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 108              		.loc 1 147 0
 109 0078 7F4B     		ldr	r3, .L37+28
 110 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 111 007c 03F00203 		and	r3, r3, #2
 112 0080 03F0FF04 		and	r4, r3, #255
 113 0084 8BB3     		cbz	r3, .L12
 148:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 149:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Set write complete and master halted */
 150:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 114              		.loc 1 150 0
 115 0086 7D4C     		ldr	r4, .L37+32
 116 0088 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 117 008a 43F00A03 		orr	r3, r3, #10
 118 008e 2370     		strb	r3, [r4]
 151:Generated_Source\PSoC5/I2C_1_INT.c ****                                                             I2C_1_MSTAT_WR_CMPLT);
 152:Generated_Source\PSoC5/I2C_1_INT.c **** 
 153:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect ReStart */
 119              		.loc 1 153 0
 120 0090 6023     		movs	r3, #96
 121 0092 0370     		strb	r3, [r0]
 122 0094 25E0     		b	.L34
 123              	.L9:
 154:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DisableInt();
 155:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 156:Generated_Source\PSoC5/I2C_1_INT.c ****                         else
 157:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 158:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 159:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_GENERATE_STOP;
 160:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 6


 161:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 162:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Master receive data */
 163:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 164:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_READY_TO_READ; /* Release bus to read data */
 124              		.loc 1 164 0
 125 0096 764B     		ldr	r3, .L37+20
 126 0098 0224     		movs	r4, #2
 127 009a 1C70     		strb	r4, [r3]
 128 009c FF24     		movs	r4, #255
 129 009e 03F8634C 		strb	r4, [r3, #-99]
 130 00a2 0024     		movs	r4, #0
 131 00a4 03F8234C 		strb	r4, [r3, #-35]
 165:Generated_Source\PSoC5/I2C_1_INT.c **** 
 166:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state  = I2C_1_SM_MSTR_RD_DATA;
 132              		.loc 1 166 0
 133 00a8 4A23     		movs	r3, #74
 134              	.L35:
 135 00aa 0370     		strb	r3, [r0]
 136 00ac BAE0     		b	.L24
 137              	.L8:
 167:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 168:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 169:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Address is NACKed */
 170:Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_ADDR_NAK(tmpCsr))
 138              		.loc 1 170 0
 139 00ae 0A2B     		cmp	r3, #10
 140 00b0 40F0B880 		bne	.L24
 171:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 172:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set Address NAK error */
 173:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER |
 141              		.loc 1 173 0
 142 00b4 714B     		ldr	r3, .L37+32
 143 00b6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 144 00b8 40F0A000 		orr	r0, r0, #160
 145 00bc 1870     		strb	r0, [r3]
 174:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_ADDR_NAK);
 175:Generated_Source\PSoC5/I2C_1_INT.c **** 
 176:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 146              		.loc 1 176 0
 147 00be 6E48     		ldr	r0, .L37+28
 148 00c0 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 149 00c2 00F00200 		and	r0, r0, #2
 150 00c6 00F0FF04 		and	r4, r0, #255
 151 00ca 70B1     		cbz	r0, .L12
 177:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 178:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 179:Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_GET_MSTAT_CMPLT);
 152              		.loc 1 179 0
 153 00cc 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 178:Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_GET_MSTAT_CMPLT);
 154              		.loc 1 178 0
 155 00ce 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 156 00d0 10F0080F 		tst	r0, #8
 157 00d4 14BF     		ite	ne
 158 00d6 0920     		movne	r0, #9
 159 00d8 0A20     		moveq	r0, #10
 160 00da 2043     		orrs	r0, r0, r4
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 7


 161 00dc 1870     		strb	r0, [r3]
 180:Generated_Source\PSoC5/I2C_1_INT.c **** 
 181:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT; /* Expect RESTART */
 162              		.loc 1 181 0
 163 00de 6023     		movs	r3, #96
 164 00e0 1370     		strb	r3, [r2]
 165              	.L34:
 182:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 166              		.loc 1 182 0
 167 00e2 674B     		ldr	r3, .L37+36
 168 00e4 0120     		movs	r0, #1
 169 00e6 1860     		str	r0, [r3]
 170 00e8 9CE0     		b	.L24
 171              	.L12:
 183:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 184:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Do normal Stop */
 185:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 186:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 172              		.loc 1 186 0
 173 00ea 6648     		ldr	r0, .L37+40
 174 00ec 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 175 00ee 43F02003 		orr	r3, r3, #32
 176 00f2 0370     		strb	r3, [r0]
 187:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_GENERATE_STOP;
 177              		.loc 1 187 0
 178 00f4 5E4B     		ldr	r3, .L37+20
 179 00f6 5220     		movs	r0, #82
 180 00f8 1870     		strb	r0, [r3]
 181 00fa FF20     		movs	r0, #255
 182 00fc 03F8630C 		strb	r0, [r3, #-99]
 183 0100 03F8234C 		strb	r4, [r3, #-35]
 184 0104 8EE0     		b	.L24
 185              	.LVL2:
 186              	.L6:
 188:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 189:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 190:Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 191:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 192:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Address phase is not set for some reason: error */
 193:Generated_Source\PSoC5/I2C_1_INT.c ****                     #if(I2C_1_TIMEOUT_ENABLED)
 194:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Exit interrupt to take chance for timeout timer to handle this case */
 195:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 196:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ClearPendingInt();
 197:Generated_Source\PSoC5/I2C_1_INT.c ****                     #else
 198:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Block execution flow: unexpected condition */
 199:Generated_Source\PSoC5/I2C_1_INT.c ****                         CYASSERT(0u != 0u);
 200:Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* (I2C_1_TIMEOUT_ENABLED) */
 201:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 202:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 203:Generated_Source\PSoC5/I2C_1_INT.c **** 
 204:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_WR_DATA:
 205:Generated_Source\PSoC5/I2C_1_INT.c **** 
 206:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 187              		.loc 1 206 0
 188 0106 03F00201 		and	r1, r3, #2
 189 010a 01F0FF04 		and	r4, r1, #255
 190 010e 0029     		cmp	r1, #0
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 8


 191 0110 2DD1     		bne	.L14
 207:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 208:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Check if end of buffer */
 209:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_mstrWrBufIndex  < I2C_1_mstrWrBufSize)
 192              		.loc 1 209 0
 193 0112 5848     		ldr	r0, .L37+24
 194 0114 5349     		ldr	r1, .L37+8
 195 0116 0578     		ldrb	r5, [r0]	@ zero_extendqisi2
 196 0118 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 197 011a 8D42     		cmp	r5, r1
 198 011c 14D2     		bcs	.L15
 210:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 211:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG =
 212:Generated_Source\PSoC5/I2C_1_INT.c ****                                                  I2C_1_mstrWrBufPtr[I2C_1_mstrWrBufIndex];
 199              		.loc 1 212 0
 200 011e 524D     		ldr	r5, .L37+12
 201 0120 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 202 0122 2D68     		ldr	r5, [r5]
 203 0124 C9B2     		uxtb	r1, r1
 204 0126 695C     		ldrb	r1, [r5, r1]	@ zero_extendqisi2
 211:Generated_Source\PSoC5/I2C_1_INT.c ****                                                  I2C_1_mstrWrBufPtr[I2C_1_mstrWrBufIndex];
 205              		.loc 1 211 0
 206 0128 504D     		ldr	r5, .L37+16
 207              		.loc 1 212 0
 208 012a C9B2     		uxtb	r1, r1
 211:Generated_Source\PSoC5/I2C_1_INT.c ****                                                  I2C_1_mstrWrBufPtr[I2C_1_mstrWrBufIndex];
 209              		.loc 1 211 0
 210 012c 2970     		strb	r1, [r5]
 213:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 211              		.loc 1 213 0
 212 012e 5049     		ldr	r1, .L37+20
 213 0130 0625     		movs	r5, #6
 214 0132 0D70     		strb	r5, [r1]
 215 0134 FF25     		movs	r5, #255
 216 0136 01F8635C 		strb	r5, [r1, #-99]
 217 013a 01F8234C 		strb	r4, [r1, #-35]
 214:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrWrBufIndex++;
 218              		.loc 1 214 0
 219 013e 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 220 0140 0131     		adds	r1, r1, #1
 221 0142 C9B2     		uxtb	r1, r1
 222 0144 0170     		strb	r1, [r0]
 223 0146 6EE0     		b	.L3
 224              	.L15:
 215:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 216:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* End of buffer: complete writing */
 217:Generated_Source\PSoC5/I2C_1_INT.c ****                     else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 225              		.loc 1 217 0
 226 0148 4B49     		ldr	r1, .L37+28
 227 014a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 228 014c 01F00201 		and	r1, r1, #2
 229 0150 01F0FF04 		and	r4, r1, #255
 230 0154 21B1     		cbz	r1, .L16
 218:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 219:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Set write complete and master halted */
 220:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 231              		.loc 1 220 0
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 9


 232 0156 4948     		ldr	r0, .L37+32
 233 0158 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 234 015a 41F00A01 		orr	r1, r1, #10
 235 015e 4CE0     		b	.L32
 236              	.L16:
 221:Generated_Source\PSoC5/I2C_1_INT.c ****                                                         I2C_1_MSTAT_WR_CMPLT);
 222:Generated_Source\PSoC5/I2C_1_INT.c **** 
 223:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect restart */
 224:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DisableInt();
 225:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 226:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Do normal Stop */
 227:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 228:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 237              		.loc 1 228 0
 238 0160 4848     		ldr	r0, .L37+40
 239 0162 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 240 0164 41F02001 		orr	r1, r1, #32
 241 0168 0170     		strb	r1, [r0]
 229:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_GENERATE_STOP;
 242              		.loc 1 229 0
 243 016a 5220     		movs	r0, #82
 244 016c 52E0     		b	.L33
 245              	.L14:
 230:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 231:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 232:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Last byte NAKed: end writing */
 233:Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 246              		.loc 1 233 0
 247 016e 4249     		ldr	r1, .L37+28
 248 0170 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 249 0172 4249     		ldr	r1, .L37+32
 250 0174 00F00200 		and	r0, r0, #2
 251 0178 00F0FF05 		and	r5, r0, #255
 252 017c 20B1     		cbz	r0, .L17
 234:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 235:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set write complete, short transfer and master halted */
 236:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_XFER       |
 253              		.loc 1 236 0
 254 017e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 255 0180 40F09A00 		orr	r0, r0, #154
 256 0184 0870     		strb	r0, [r1]
 257 0186 39E0     		b	.L31
 258              	.L17:
 237:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_SHORT_XFER |
 238:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_XFER_HALT      |
 239:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_WR_CMPLT);
 240:Generated_Source\PSoC5/I2C_1_INT.c **** 
 241:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect ReStart */
 242:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DisableInt();
 243:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 244:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Do normal Stop */
 245:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 246:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 259              		.loc 1 246 0
 260 0188 3E4C     		ldr	r4, .L37+40
 261 018a 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 262 018c 40F02000 		orr	r0, r0, #32
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 10


 263 0190 2070     		strb	r0, [r4]
 247:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_GENERATE_STOP;
 264              		.loc 1 247 0
 265 0192 3748     		ldr	r0, .L37+20
 266 0194 5224     		movs	r4, #82
 267 0196 0470     		strb	r4, [r0]
 268 0198 FF24     		movs	r4, #255
 269 019a 00F8634C 		strb	r4, [r0, #-99]
 270 019e 00F8235C 		strb	r5, [r0, #-35]
 248:Generated_Source\PSoC5/I2C_1_INT.c **** 
 249:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set short transfer and error flag */
 250:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_ERR_SHORT_XFER |
 271              		.loc 1 250 0
 272 01a2 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 273 01a4 40F09000 		orr	r0, r0, #144
 274 01a8 0870     		strb	r0, [r1]
 275 01aa 3CE0     		b	.L3
 276              	.L7:
 251:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_ERR_XFER);
 252:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 253:Generated_Source\PSoC5/I2C_1_INT.c **** 
 254:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 255:Generated_Source\PSoC5/I2C_1_INT.c **** 
 256:Generated_Source\PSoC5/I2C_1_INT.c ****             case I2C_1_SM_MSTR_RD_DATA:
 257:Generated_Source\PSoC5/I2C_1_INT.c **** 
 258:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_mstrRdBufPtr[I2C_1_mstrRdBufIndex] = I2C_1_DATA_REG;
 277              		.loc 1 258 0
 278 01ac 364C     		ldr	r4, .L37+44
 279 01ae 3748     		ldr	r0, .L37+48
 280 01b0 2568     		ldr	r5, [r4]
 281 01b2 2E4C     		ldr	r4, .L37+16
 282 01b4 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 283 01b6 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 284 01b8 C9B2     		uxtb	r1, r1
 285 01ba E4B2     		uxtb	r4, r4
 286 01bc 6C54     		strb	r4, [r5, r1]
 259:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_mstrRdBufIndex++;
 287              		.loc 1 259 0
 288 01be 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 289 01c0 0131     		adds	r1, r1, #1
 290 01c2 C9B2     		uxtb	r1, r1
 291 01c4 0170     		strb	r1, [r0]
 260:Generated_Source\PSoC5/I2C_1_INT.c **** 
 261:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Check if end of buffer */
 262:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_mstrRdBufIndex < I2C_1_mstrRdBufSize)
 292              		.loc 1 262 0
 293 01c6 3249     		ldr	r1, .L37+52
 294 01c8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 295 01ca 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 296 01cc 8842     		cmp	r0, r1
 297 01ce 09D2     		bcs	.L18
 263:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 264:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;       /* ACK and receive byte */
 298              		.loc 1 264 0
 299 01d0 2749     		ldr	r1, .L37+20
 300 01d2 0220     		movs	r0, #2
 301 01d4 0870     		strb	r0, [r1]
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 11


 302 01d6 FF20     		movs	r0, #255
 303 01d8 01F8630C 		strb	r0, [r1, #-99]
 304 01dc 0020     		movs	r0, #0
 305 01de 01F8230C 		strb	r0, [r1, #-35]
 306 01e2 20E0     		b	.L3
 307              	.L18:
 265:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 266:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* End of buffer: complete reading */
 267:Generated_Source\PSoC5/I2C_1_INT.c ****                 else if(I2C_1_CHECK_NO_STOP(I2C_1_mstrControl))
 308              		.loc 1 267 0
 309 01e4 2449     		ldr	r1, .L37+28
 310 01e6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 311 01e8 01F00201 		and	r1, r1, #2
 312 01ec 01F0FF04 		and	r4, r1, #255
 313 01f0 51B1     		cbz	r1, .L19
 268:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 269:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Set read complete and master halted */
 270:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_mstrStatus |= (I2C_1_MSTAT_XFER_HALT |
 314              		.loc 1 270 0
 315 01f2 2248     		ldr	r0, .L37+32
 316 01f4 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 317 01f6 41F00901 		orr	r1, r1, #9
 318              	.L32:
 319 01fa 0170     		strb	r1, [r0]
 320              	.L31:
 271:Generated_Source\PSoC5/I2C_1_INT.c ****                                                     I2C_1_MSTAT_RD_CMPLT);
 272:Generated_Source\PSoC5/I2C_1_INT.c **** 
 273:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_MSTR_HALT;    /* Expect ReStart */
 321              		.loc 1 273 0
 322 01fc 6021     		movs	r1, #96
 323 01fe 1170     		strb	r1, [r2]
 274:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DisableInt();
 324              		.loc 1 274 0
 325 0200 1F49     		ldr	r1, .L37+36
 326 0202 0120     		movs	r0, #1
 327 0204 0860     		str	r0, [r1]
 328 0206 0EE0     		b	.L3
 329              	.L19:
 275:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 276:Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 277:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 278:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;
 330              		.loc 1 278 0
 331 0208 1E48     		ldr	r0, .L37+40
 332 020a 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 333 020c 41F02001 		orr	r1, r1, #32
 334 0210 0170     		strb	r1, [r0]
 279:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;       /* NACK and TRY to generate Stop */
 335              		.loc 1 279 0
 336 0212 1220     		movs	r0, #18
 337              	.L33:
 338 0214 1649     		ldr	r1, .L37+20
 339 0216 0870     		strb	r0, [r1]
 340 0218 FF20     		movs	r0, #255
 341 021a 01F8630C 		strb	r0, [r1, #-99]
 342 021e 01F8234C 		strb	r4, [r1, #-35]
 343 0222 00E0     		b	.L3
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 12


 344              	.LVL3:
 345              	.L24:
 128:Generated_Source\PSoC5/I2C_1_INT.c **** 
 346              		.loc 1 128 0
 347 0224 0B46     		mov	r3, r1
 348              	.LVL4:
 349              	.L3:
 280:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 281:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 282:Generated_Source\PSoC5/I2C_1_INT.c **** 
 283:Generated_Source\PSoC5/I2C_1_INT.c ****             default: /* This is an invalid state and should not occur */
 284:Generated_Source\PSoC5/I2C_1_INT.c **** 
 285:Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_TIMEOUT_ENABLED)
 286:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handles this case */
 287:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DisableInt();
 288:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_ClearPendingInt();
 289:Generated_Source\PSoC5/I2C_1_INT.c ****             #else
 290:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Block execution flow: unexpected condition */
 291:Generated_Source\PSoC5/I2C_1_INT.c ****                 CYASSERT(0u != 0u);
 292:Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_TIMEOUT_ENABLED) */
 293:Generated_Source\PSoC5/I2C_1_INT.c **** 
 294:Generated_Source\PSoC5/I2C_1_INT.c ****                 break;
 295:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 296:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 297:Generated_Source\PSoC5/I2C_1_INT.c **** 
 298:Generated_Source\PSoC5/I2C_1_INT.c ****         /* Catches Stop: end of transaction */
 299:Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_STOP_STS(tmpCsr))
 350              		.loc 1 299 0
 351 0226 9906     		lsls	r1, r3, #26
 352 0228 16D5     		bpl	.L1
 300:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 301:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_mstrStatus |= I2C_1_GET_MSTAT_CMPLT;
 353              		.loc 1 301 0
 354 022a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 355              	.LVL5:
 356 022c 1349     		ldr	r1, .L37+32
 357 022e 13F0080F 		tst	r3, #8
 358 0232 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 359 0234 14BF     		ite	ne
 360 0236 0123     		movne	r3, #1
 361 0238 0223     		moveq	r3, #2
 362 023a 0343     		orrs	r3, r3, r0
 363 023c 0B70     		strb	r3, [r1]
 302:Generated_Source\PSoC5/I2C_1_INT.c **** 
 303:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_DISABLE_INT_ON_STOP;
 364              		.loc 1 303 0
 365 023e 1149     		ldr	r1, .L37+40
 366 0240 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 367 0242 03F0DF03 		and	r3, r3, #223
 368 0246 0B70     		strb	r3, [r1]
 304:Generated_Source\PSoC5/I2C_1_INT.c ****             I2C_1_state = I2C_1_SM_IDLE;
 369              		.loc 1 304 0
 370 0248 1023     		movs	r3, #16
 371 024a 1370     		strb	r3, [r2]
 372 024c 30BD     		pop	{r4, r5, pc}
 373              	.LVL6:
 374              	.L2:
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 13


 305:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 306:Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_MASTER_ENABLED) */
 307:Generated_Source\PSoC5/I2C_1_INT.c ****     }
 308:Generated_Source\PSoC5/I2C_1_INT.c ****     else if(I2C_1_CHECK_SM_SLAVE)
 375              		.loc 1 308 0
 376 024e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 377              	.LVL7:
 378 0250 DB06     		lsls	r3, r3, #27
 309:Generated_Source\PSoC5/I2C_1_INT.c ****     {
 310:Generated_Source\PSoC5/I2C_1_INT.c ****     #if(I2C_1_MODE_SLAVE_ENABLED)
 311:Generated_Source\PSoC5/I2C_1_INT.c **** 
 312:Generated_Source\PSoC5/I2C_1_INT.c ****         if((I2C_1_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
 313:Generated_Source\PSoC5/I2C_1_INT.c ****            (I2C_1_CHECK_BYTE_COMPLETE(tmpCsr) && I2C_1_CHECK_ADDRESS_STS(tmpCsr)))
 314:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 315:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Catch end of master write transaction: use interrupt on Stop */
 316:Generated_Source\PSoC5/I2C_1_INT.c ****             /* The Stop bit history on address phase does not have correct state */
 317:Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_SM_SL_WR_DATA == I2C_1_state)
 318:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 319:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DISABLE_INT_ON_STOP;
 320:Generated_Source\PSoC5/I2C_1_INT.c **** 
 321:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_WR_BUSY);
 322:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_WR_CMPLT);
 323:Generated_Source\PSoC5/I2C_1_INT.c **** 
 324:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_state = I2C_1_SM_IDLE;
 325:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 326:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 327:Generated_Source\PSoC5/I2C_1_INT.c **** 
 328:Generated_Source\PSoC5/I2C_1_INT.c ****         if(I2C_1_CHECK_BYTE_COMPLETE(tmpCsr))
 329:Generated_Source\PSoC5/I2C_1_INT.c ****         {
 330:Generated_Source\PSoC5/I2C_1_INT.c ****             /* The address only issued after Start or ReStart: so check the address
 331:Generated_Source\PSoC5/I2C_1_INT.c ****                to catch these events:
 332:Generated_Source\PSoC5/I2C_1_INT.c ****                 FF : sets an address phase with a byte_complete interrupt trigger.
 333:Generated_Source\PSoC5/I2C_1_INT.c ****                 UDB: sets an address phase immediately after Start or ReStart. */
 334:Generated_Source\PSoC5/I2C_1_INT.c ****             if(I2C_1_CHECK_ADDRESS_STS(tmpCsr))
 335:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 336:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Check for software address detection */
 337:Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_SW_ADRR_DECODE)
 338:Generated_Source\PSoC5/I2C_1_INT.c ****                 tmp8 = I2C_1_GET_SLAVE_ADDR(I2C_1_DATA_REG);
 339:Generated_Source\PSoC5/I2C_1_INT.c **** 
 340:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(tmp8 == I2C_1_slAddress)   /* Check for address match */
 341:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 342:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
 343:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 344:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Place code to prepare read buffer here                  */
 345:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* `#START I2C_1_SW_PREPARE_READ_BUF_interrupt` */
 346:Generated_Source\PSoC5/I2C_1_INT.c **** 
 347:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* `#END` */
 348:Generated_Source\PSoC5/I2C_1_INT.c **** 
 349:Generated_Source\PSoC5/I2C_1_INT.c ****                     #ifdef I2C_1_SW_PREPARE_READ_BUF_CALLBACK
 350:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_SwPrepareReadBuf_Callback();
 351:Generated_Source\PSoC5/I2C_1_INT.c ****                     #endif /* I2C_1_SW_PREPARE_READ_BUF_CALLBACK */
 352:Generated_Source\PSoC5/I2C_1_INT.c ****                         
 353:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Prepare next operation to read, get data and place in data register */
 354:Generated_Source\PSoC5/I2C_1_INT.c ****                         if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 355:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 356:Generated_Source\PSoC5/I2C_1_INT.c ****                             /* Load first data byte from array */
 357:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 14


 358:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ACK_AND_TRANSMIT;
 359:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slRdBufIndex++;
 360:Generated_Source\PSoC5/I2C_1_INT.c **** 
 361:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
 362:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 363:Generated_Source\PSoC5/I2C_1_INT.c ****                         else    /* Overflow: provide 0xFF on bus */
 364:Generated_Source\PSoC5/I2C_1_INT.c ****                         {
 365:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 366:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_ACK_AND_TRANSMIT;
 367:Generated_Source\PSoC5/I2C_1_INT.c **** 
 368:Generated_Source\PSoC5/I2C_1_INT.c ****                             I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 369:Generated_Source\PSoC5/I2C_1_INT.c ****                                                            I2C_1_SSTAT_RD_ERR_OVFL);
 370:Generated_Source\PSoC5/I2C_1_INT.c ****                         }
 371:Generated_Source\PSoC5/I2C_1_INT.c **** 
 372:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_SL_RD_DATA;
 373:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 374:Generated_Source\PSoC5/I2C_1_INT.c ****                     else  /* Write transaction: receive 1st byte */
 375:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 376:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_RECEIVE;
 377:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_state = I2C_1_SM_SL_WR_DATA;
 378:Generated_Source\PSoC5/I2C_1_INT.c **** 
 379:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 380:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ENABLE_INT_ON_STOP;
 381:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 382:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 383:Generated_Source\PSoC5/I2C_1_INT.c ****                 else
 384:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 385:Generated_Source\PSoC5/I2C_1_INT.c ****                     /*     Place code to compare for additional address here    */
 386:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_SW_ADDR_COMPARE_interruptStart` */
 387:Generated_Source\PSoC5/I2C_1_INT.c **** 
 388:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 389:Generated_Source\PSoC5/I2C_1_INT.c **** 
 390:Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_SW_ADDR_COMPARE_ENTRY_CALLBACK
 391:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_SwAddrCompare_EntryCallback();
 392:Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_SW_ADDR_COMPARE_ENTRY_CALLBACK */
 393:Generated_Source\PSoC5/I2C_1_INT.c ****                     
 394:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;   /* NACK address */
 395:Generated_Source\PSoC5/I2C_1_INT.c **** 
 396:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Place code to end of condition for NACK generation here */
 397:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_SW_ADDR_COMPARE_interruptEnd`  */
 398:Generated_Source\PSoC5/I2C_1_INT.c **** 
 399:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 400:Generated_Source\PSoC5/I2C_1_INT.c **** 
 401:Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_SW_ADDR_COMPARE_EXIT_CALLBACK
 402:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_SwAddrCompare_ExitCallback();
 403:Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_SW_ADDR_COMPARE_EXIT_CALLBACK */
 404:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 405:Generated_Source\PSoC5/I2C_1_INT.c **** 
 406:Generated_Source\PSoC5/I2C_1_INT.c ****             #else /* (I2C_1_HW_ADRR_DECODE) */
 407:Generated_Source\PSoC5/I2C_1_INT.c **** 
 408:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(0u != (I2C_1_DATA_REG & I2C_1_READ_FLAG))
 409:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 410:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Place code to prepare read buffer here                  */
 411:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#START I2C_1_HW_PREPARE_READ_BUF_interrupt` */
 412:Generated_Source\PSoC5/I2C_1_INT.c **** 
 413:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* `#END` */
 414:Generated_Source\PSoC5/I2C_1_INT.c ****                     
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 15


 415:Generated_Source\PSoC5/I2C_1_INT.c ****                 #ifdef I2C_1_HW_PREPARE_READ_BUF_CALLBACK
 416:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_HwPrepareReadBuf_Callback();
 417:Generated_Source\PSoC5/I2C_1_INT.c ****                 #endif /* I2C_1_HW_PREPARE_READ_BUF_CALLBACK */
 418:Generated_Source\PSoC5/I2C_1_INT.c **** 
 419:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Prepare next operation to read, get data and place in data register */
 420:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 421:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 422:Generated_Source\PSoC5/I2C_1_INT.c ****                         /* Load first data byte from array */
 423:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 424:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_TRANSMIT;
 425:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slRdBufIndex++;
 426:Generated_Source\PSoC5/I2C_1_INT.c **** 
 427:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_RD_BUSY;
 428:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 429:Generated_Source\PSoC5/I2C_1_INT.c ****                     else    /* Overflow: provide 0xFF on bus */
 430:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 431:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 432:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_ACK_AND_TRANSMIT;
 433:Generated_Source\PSoC5/I2C_1_INT.c **** 
 434:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus  |= (I2C_1_SSTAT_RD_BUSY |
 435:Generated_Source\PSoC5/I2C_1_INT.c ****                                                        I2C_1_SSTAT_RD_ERR_OVFL);
 436:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 437:Generated_Source\PSoC5/I2C_1_INT.c **** 
 438:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_SL_RD_DATA;
 439:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 440:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Write transaction: receive 1st byte */
 441:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 442:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;
 443:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_SL_WR_DATA;
 444:Generated_Source\PSoC5/I2C_1_INT.c **** 
 445:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= I2C_1_SSTAT_WR_BUSY;
 446:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ENABLE_INT_ON_STOP;
 447:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 448:Generated_Source\PSoC5/I2C_1_INT.c **** 
 449:Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_SW_ADRR_DECODE) */
 450:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 451:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data states */
 452:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data master writes into slave */
 453:Generated_Source\PSoC5/I2C_1_INT.c ****             else if(I2C_1_state == I2C_1_SM_SL_WR_DATA)
 454:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 455:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_slWrBufIndex < I2C_1_slWrBufSize)
 456:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 457:Generated_Source\PSoC5/I2C_1_INT.c ****                     tmp8 = I2C_1_DATA_REG;
 458:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_ACK_AND_RECEIVE;
 459:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slWrBufPtr[I2C_1_slWrBufIndex] = tmp8;
 460:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slWrBufIndex++;
 461:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 462:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* of array: complete write, send NACK */
 463:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 464:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_RECEIVE;
 465:Generated_Source\PSoC5/I2C_1_INT.c **** 
 466:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= I2C_1_SSTAT_WR_ERR_OVFL;
 467:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 468:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 469:Generated_Source\PSoC5/I2C_1_INT.c ****             /* Data master reads from slave */
 470:Generated_Source\PSoC5/I2C_1_INT.c ****             else if(I2C_1_state == I2C_1_SM_SL_RD_DATA)
 471:Generated_Source\PSoC5/I2C_1_INT.c ****             {
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 16


 472:Generated_Source\PSoC5/I2C_1_INT.c ****                 if(I2C_1_CHECK_DATA_ACK(tmpCsr))
 473:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 474:Generated_Source\PSoC5/I2C_1_INT.c ****                     if(I2C_1_slRdBufIndex < I2C_1_slRdBufSize)
 475:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 476:Generated_Source\PSoC5/I2C_1_INT.c ****                          /* Get data from array */
 477:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_slRdBufPtr[I2C_1_slRdBufIndex];
 478:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 479:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slRdBufIndex++;
 480:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 481:Generated_Source\PSoC5/I2C_1_INT.c ****                     else   /* Overflow: provide 0xFF on bus */
 482:Generated_Source\PSoC5/I2C_1_INT.c ****                     {
 483:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 484:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_TRANSMIT_DATA;
 485:Generated_Source\PSoC5/I2C_1_INT.c **** 
 486:Generated_Source\PSoC5/I2C_1_INT.c ****                         I2C_1_slStatus |= I2C_1_SSTAT_RD_ERR_OVFL;
 487:Generated_Source\PSoC5/I2C_1_INT.c ****                     }
 488:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 489:Generated_Source\PSoC5/I2C_1_INT.c ****                 else  /* Last byte was NACKed: read complete */
 490:Generated_Source\PSoC5/I2C_1_INT.c ****                 {
 491:Generated_Source\PSoC5/I2C_1_INT.c ****                     /* Only NACK appears on bus */
 492:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_DATA_REG = I2C_1_OVERFLOW_RETURN;
 493:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_NAK_AND_TRANSMIT;
 494:Generated_Source\PSoC5/I2C_1_INT.c **** 
 495:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus &= ((uint8) ~I2C_1_SSTAT_RD_BUSY);
 496:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_slStatus |= ((uint8)  I2C_1_SSTAT_RD_CMPLT);
 497:Generated_Source\PSoC5/I2C_1_INT.c **** 
 498:Generated_Source\PSoC5/I2C_1_INT.c ****                     I2C_1_state = I2C_1_SM_IDLE;
 499:Generated_Source\PSoC5/I2C_1_INT.c ****                 }
 500:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 501:Generated_Source\PSoC5/I2C_1_INT.c ****             else
 502:Generated_Source\PSoC5/I2C_1_INT.c ****             {
 503:Generated_Source\PSoC5/I2C_1_INT.c ****             #if(I2C_1_TIMEOUT_ENABLED)
 504:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handle this case */
 505:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_DisableInt();
 506:Generated_Source\PSoC5/I2C_1_INT.c ****                 I2C_1_ClearPendingInt();
 507:Generated_Source\PSoC5/I2C_1_INT.c ****             #else
 508:Generated_Source\PSoC5/I2C_1_INT.c ****                 /* Block execution flow: unexpected condition */
 509:Generated_Source\PSoC5/I2C_1_INT.c ****                 CYASSERT(0u != 0u);
 510:Generated_Source\PSoC5/I2C_1_INT.c ****             #endif /* (I2C_1_TIMEOUT_ENABLED) */
 511:Generated_Source\PSoC5/I2C_1_INT.c ****             }
 512:Generated_Source\PSoC5/I2C_1_INT.c ****         }
 513:Generated_Source\PSoC5/I2C_1_INT.c ****     #endif /* (I2C_1_MODE_SLAVE_ENABLED) */
 514:Generated_Source\PSoC5/I2C_1_INT.c ****     }
 515:Generated_Source\PSoC5/I2C_1_INT.c ****     else
 516:Generated_Source\PSoC5/I2C_1_INT.c ****     {
 517:Generated_Source\PSoC5/I2C_1_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 518:Generated_Source\PSoC5/I2C_1_INT.c ****         I2C_1_state = I2C_1_SM_IDLE;
 379              		.loc 1 518 0
 380 0252 5CBF     		itt	pl
 381 0254 1023     		movpl	r3, #16
 382 0256 0B70     		strbpl	r3, [r1]
 383              	.L1:
 384 0258 30BD     		pop	{r4, r5, pc}
 385              	.L38:
 386 025a 00BF     		.align	2
 387              	.L37:
 388 025c 00000000 		.word	I2C_1_state
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 17


 389 0260 64640040 		.word	1073767524
 390 0264 00000000 		.word	I2C_1_mstrWrBufSize
 391 0268 00000000 		.word	I2C_1_mstrWrBufPtr
 392 026c 05640040 		.word	1073767429
 393 0270 78640040 		.word	1073767544
 394 0274 00000000 		.word	I2C_1_mstrWrBufIndex
 395 0278 00000000 		.word	I2C_1_mstrControl
 396 027c 00000000 		.word	I2C_1_mstrStatus
 397 0280 80E100E0 		.word	-536813184
 398 0284 84640040 		.word	1073767556
 399 0288 00000000 		.word	I2C_1_mstrRdBufPtr
 400 028c 00000000 		.word	I2C_1_mstrRdBufIndex
 401 0290 00000000 		.word	I2C_1_mstrRdBufSize
 402              		.cfi_endproc
 403              	.LFE0:
 404              		.size	I2C_1_ISR, .-I2C_1_ISR
 405              		.text
 406              	.Letext0:
 407              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 408              		.file 3 "Generated_Source\\PSoC5\\I2C_1_PVT.h"
 409              		.section	.debug_info,"",%progbits
 410              	.Ldebug_info0:
 411 0000 53010000 		.4byte	0x153
 412 0004 0400     		.2byte	0x4
 413 0006 00000000 		.4byte	.Ldebug_abbrev0
 414 000a 04       		.byte	0x4
 415 000b 01       		.uleb128 0x1
 416 000c 75000000 		.4byte	.LASF27
 417 0010 0C       		.byte	0xc
 418 0011 AD010000 		.4byte	.LASF28
 419 0015 D0010000 		.4byte	.LASF29
 420 0019 00000000 		.4byte	.Ldebug_ranges0+0
 421 001d 00000000 		.4byte	0
 422 0021 00000000 		.4byte	.Ldebug_line0
 423 0025 02       		.uleb128 0x2
 424 0026 01       		.byte	0x1
 425 0027 06       		.byte	0x6
 426 0028 3A020000 		.4byte	.LASF0
 427 002c 02       		.uleb128 0x2
 428 002d 01       		.byte	0x1
 429 002e 08       		.byte	0x8
 430 002f 62000000 		.4byte	.LASF1
 431 0033 02       		.uleb128 0x2
 432 0034 02       		.byte	0x2
 433 0035 05       		.byte	0x5
 434 0036 A3010000 		.4byte	.LASF2
 435 003a 02       		.uleb128 0x2
 436 003b 02       		.byte	0x2
 437 003c 07       		.byte	0x7
 438 003d 35000000 		.4byte	.LASF3
 439 0041 02       		.uleb128 0x2
 440 0042 04       		.byte	0x4
 441 0043 05       		.byte	0x5
 442 0044 25020000 		.4byte	.LASF4
 443 0048 02       		.uleb128 0x2
 444 0049 04       		.byte	0x4
 445 004a 07       		.byte	0x7
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 18


 446 004b 2D010000 		.4byte	.LASF5
 447 004f 02       		.uleb128 0x2
 448 0050 08       		.byte	0x8
 449 0051 05       		.byte	0x5
 450 0052 7D010000 		.4byte	.LASF6
 451 0056 02       		.uleb128 0x2
 452 0057 08       		.byte	0x8
 453 0058 07       		.byte	0x7
 454 0059 4C010000 		.4byte	.LASF7
 455 005d 03       		.uleb128 0x3
 456 005e 04       		.byte	0x4
 457 005f 05       		.byte	0x5
 458 0060 696E7400 		.ascii	"int\000"
 459 0064 02       		.uleb128 0x2
 460 0065 04       		.byte	0x4
 461 0066 07       		.byte	0x7
 462 0067 3F010000 		.4byte	.LASF8
 463 006b 04       		.uleb128 0x4
 464 006c 03010000 		.4byte	.LASF9
 465 0070 02       		.byte	0x2
 466 0071 E401     		.2byte	0x1e4
 467 0073 2C000000 		.4byte	0x2c
 468 0077 04       		.uleb128 0x4
 469 0078 1A010000 		.4byte	.LASF10
 470 007c 02       		.byte	0x2
 471 007d E601     		.2byte	0x1e6
 472 007f 48000000 		.4byte	0x48
 473 0083 02       		.uleb128 0x2
 474 0084 04       		.byte	0x4
 475 0085 04       		.byte	0x4
 476 0086 5C000000 		.4byte	.LASF11
 477 008a 02       		.uleb128 0x2
 478 008b 08       		.byte	0x8
 479 008c 04       		.byte	0x4
 480 008d 09010000 		.4byte	.LASF12
 481 0091 02       		.uleb128 0x2
 482 0092 01       		.byte	0x1
 483 0093 08       		.byte	0x8
 484 0094 8B010000 		.4byte	.LASF13
 485 0098 04       		.uleb128 0x4
 486 0099 70000000 		.4byte	.LASF14
 487 009d 02       		.byte	0x2
 488 009e 8E02     		.2byte	0x28e
 489 00a0 A4000000 		.4byte	0xa4
 490 00a4 05       		.uleb128 0x5
 491 00a5 6B000000 		.4byte	0x6b
 492 00a9 04       		.uleb128 0x4
 493 00aa 07000000 		.4byte	.LASF15
 494 00ae 02       		.byte	0x2
 495 00af 9002     		.2byte	0x290
 496 00b1 B5000000 		.4byte	0xb5
 497 00b5 05       		.uleb128 0x5
 498 00b6 77000000 		.4byte	0x77
 499 00ba 02       		.uleb128 0x2
 500 00bb 08       		.byte	0x8
 501 00bc 04       		.byte	0x4
 502 00bd 2E020000 		.4byte	.LASF16
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 19


 503 00c1 02       		.uleb128 0x2
 504 00c2 04       		.byte	0x4
 505 00c3 07       		.byte	0x7
 506 00c4 74010000 		.4byte	.LASF17
 507 00c8 06       		.uleb128 0x6
 508 00c9 10010000 		.4byte	.LASF30
 509 00cd 01       		.byte	0x1
 510 00ce 2E       		.byte	0x2e
 511 00cf 00000000 		.4byte	.LFB0
 512 00d3 94020000 		.4byte	.LFE0-.LFB0
 513 00d7 01       		.uleb128 0x1
 514 00d8 9C       		.byte	0x9c
 515 00d9 ED000000 		.4byte	0xed
 516 00dd 07       		.uleb128 0x7
 517 00de 00000000 		.4byte	.LASF31
 518 00e2 01       		.byte	0x1
 519 00e3 34       		.byte	0x34
 520 00e4 6B000000 		.4byte	0x6b
 521 00e8 00000000 		.4byte	.LLST0
 522 00ec 00       		.byte	0
 523 00ed 08       		.uleb128 0x8
 524 00ee 21010000 		.4byte	.LASF18
 525 00f2 03       		.byte	0x3
 526 00f3 23       		.byte	0x23
 527 00f4 A4000000 		.4byte	0xa4
 528 00f8 08       		.uleb128 0x8
 529 00f9 63010000 		.4byte	.LASF19
 530 00fd 03       		.byte	0x3
 531 00fe 27       		.byte	0x27
 532 00ff A4000000 		.4byte	0xa4
 533 0103 08       		.uleb128 0x8
 534 0104 5A020000 		.4byte	.LASF20
 535 0108 03       		.byte	0x3
 536 0109 28       		.byte	0x28
 537 010a A4000000 		.4byte	0xa4
 538 010e 08       		.uleb128 0x8
 539 010f 90010000 		.4byte	.LASF21
 540 0113 03       		.byte	0x3
 541 0114 2B       		.byte	0x2b
 542 0115 19010000 		.4byte	0x119
 543 0119 09       		.uleb128 0x9
 544 011a 04       		.byte	0x4
 545 011b A4000000 		.4byte	0xa4
 546 011f 08       		.uleb128 0x8
 547 0120 46020000 		.4byte	.LASF22
 548 0124 03       		.byte	0x3
 549 0125 2C       		.byte	0x2c
 550 0126 A4000000 		.4byte	0xa4
 551 012a 08       		.uleb128 0x8
 552 012b 0D000000 		.4byte	.LASF23
 553 012f 03       		.byte	0x3
 554 0130 2D       		.byte	0x2d
 555 0131 A4000000 		.4byte	0xa4
 556 0135 08       		.uleb128 0x8
 557 0136 22000000 		.4byte	.LASF24
 558 013a 03       		.byte	0x3
 559 013b 30       		.byte	0x30
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 20


 560 013c 19010000 		.4byte	0x119
 561 0140 08       		.uleb128 0x8
 562 0141 48000000 		.4byte	.LASF25
 563 0145 03       		.byte	0x3
 564 0146 31       		.byte	0x31
 565 0147 A4000000 		.4byte	0xa4
 566 014b 08       		.uleb128 0x8
 567 014c 10020000 		.4byte	.LASF26
 568 0150 03       		.byte	0x3
 569 0151 32       		.byte	0x32
 570 0152 A4000000 		.4byte	0xa4
 571 0156 00       		.byte	0
 572              		.section	.debug_abbrev,"",%progbits
 573              	.Ldebug_abbrev0:
 574 0000 01       		.uleb128 0x1
 575 0001 11       		.uleb128 0x11
 576 0002 01       		.byte	0x1
 577 0003 25       		.uleb128 0x25
 578 0004 0E       		.uleb128 0xe
 579 0005 13       		.uleb128 0x13
 580 0006 0B       		.uleb128 0xb
 581 0007 03       		.uleb128 0x3
 582 0008 0E       		.uleb128 0xe
 583 0009 1B       		.uleb128 0x1b
 584 000a 0E       		.uleb128 0xe
 585 000b 55       		.uleb128 0x55
 586 000c 17       		.uleb128 0x17
 587 000d 11       		.uleb128 0x11
 588 000e 01       		.uleb128 0x1
 589 000f 10       		.uleb128 0x10
 590 0010 17       		.uleb128 0x17
 591 0011 00       		.byte	0
 592 0012 00       		.byte	0
 593 0013 02       		.uleb128 0x2
 594 0014 24       		.uleb128 0x24
 595 0015 00       		.byte	0
 596 0016 0B       		.uleb128 0xb
 597 0017 0B       		.uleb128 0xb
 598 0018 3E       		.uleb128 0x3e
 599 0019 0B       		.uleb128 0xb
 600 001a 03       		.uleb128 0x3
 601 001b 0E       		.uleb128 0xe
 602 001c 00       		.byte	0
 603 001d 00       		.byte	0
 604 001e 03       		.uleb128 0x3
 605 001f 24       		.uleb128 0x24
 606 0020 00       		.byte	0
 607 0021 0B       		.uleb128 0xb
 608 0022 0B       		.uleb128 0xb
 609 0023 3E       		.uleb128 0x3e
 610 0024 0B       		.uleb128 0xb
 611 0025 03       		.uleb128 0x3
 612 0026 08       		.uleb128 0x8
 613 0027 00       		.byte	0
 614 0028 00       		.byte	0
 615 0029 04       		.uleb128 0x4
 616 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 21


 617 002b 00       		.byte	0
 618 002c 03       		.uleb128 0x3
 619 002d 0E       		.uleb128 0xe
 620 002e 3A       		.uleb128 0x3a
 621 002f 0B       		.uleb128 0xb
 622 0030 3B       		.uleb128 0x3b
 623 0031 05       		.uleb128 0x5
 624 0032 49       		.uleb128 0x49
 625 0033 13       		.uleb128 0x13
 626 0034 00       		.byte	0
 627 0035 00       		.byte	0
 628 0036 05       		.uleb128 0x5
 629 0037 35       		.uleb128 0x35
 630 0038 00       		.byte	0
 631 0039 49       		.uleb128 0x49
 632 003a 13       		.uleb128 0x13
 633 003b 00       		.byte	0
 634 003c 00       		.byte	0
 635 003d 06       		.uleb128 0x6
 636 003e 2E       		.uleb128 0x2e
 637 003f 01       		.byte	0x1
 638 0040 3F       		.uleb128 0x3f
 639 0041 19       		.uleb128 0x19
 640 0042 03       		.uleb128 0x3
 641 0043 0E       		.uleb128 0xe
 642 0044 3A       		.uleb128 0x3a
 643 0045 0B       		.uleb128 0xb
 644 0046 3B       		.uleb128 0x3b
 645 0047 0B       		.uleb128 0xb
 646 0048 27       		.uleb128 0x27
 647 0049 19       		.uleb128 0x19
 648 004a 11       		.uleb128 0x11
 649 004b 01       		.uleb128 0x1
 650 004c 12       		.uleb128 0x12
 651 004d 06       		.uleb128 0x6
 652 004e 40       		.uleb128 0x40
 653 004f 18       		.uleb128 0x18
 654 0050 9742     		.uleb128 0x2117
 655 0052 19       		.uleb128 0x19
 656 0053 01       		.uleb128 0x1
 657 0054 13       		.uleb128 0x13
 658 0055 00       		.byte	0
 659 0056 00       		.byte	0
 660 0057 07       		.uleb128 0x7
 661 0058 34       		.uleb128 0x34
 662 0059 00       		.byte	0
 663 005a 03       		.uleb128 0x3
 664 005b 0E       		.uleb128 0xe
 665 005c 3A       		.uleb128 0x3a
 666 005d 0B       		.uleb128 0xb
 667 005e 3B       		.uleb128 0x3b
 668 005f 0B       		.uleb128 0xb
 669 0060 49       		.uleb128 0x49
 670 0061 13       		.uleb128 0x13
 671 0062 02       		.uleb128 0x2
 672 0063 17       		.uleb128 0x17
 673 0064 00       		.byte	0
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 22


 674 0065 00       		.byte	0
 675 0066 08       		.uleb128 0x8
 676 0067 34       		.uleb128 0x34
 677 0068 00       		.byte	0
 678 0069 03       		.uleb128 0x3
 679 006a 0E       		.uleb128 0xe
 680 006b 3A       		.uleb128 0x3a
 681 006c 0B       		.uleb128 0xb
 682 006d 3B       		.uleb128 0x3b
 683 006e 0B       		.uleb128 0xb
 684 006f 49       		.uleb128 0x49
 685 0070 13       		.uleb128 0x13
 686 0071 3F       		.uleb128 0x3f
 687 0072 19       		.uleb128 0x19
 688 0073 3C       		.uleb128 0x3c
 689 0074 19       		.uleb128 0x19
 690 0075 00       		.byte	0
 691 0076 00       		.byte	0
 692 0077 09       		.uleb128 0x9
 693 0078 0F       		.uleb128 0xf
 694 0079 00       		.byte	0
 695 007a 0B       		.uleb128 0xb
 696 007b 0B       		.uleb128 0xb
 697 007c 49       		.uleb128 0x49
 698 007d 13       		.uleb128 0x13
 699 007e 00       		.byte	0
 700 007f 00       		.byte	0
 701 0080 00       		.byte	0
 702              		.section	.debug_loc,"",%progbits
 703              	.Ldebug_loc0:
 704              	.LLST0:
 705 0000 0C000000 		.4byte	.LVL0
 706 0004 3A000000 		.4byte	.LVL1
 707 0008 0100     		.2byte	0x1
 708 000a 53       		.byte	0x53
 709 000b 3A000000 		.4byte	.LVL1
 710 000f 06010000 		.4byte	.LVL2
 711 0013 0100     		.2byte	0x1
 712 0015 51       		.byte	0x51
 713 0016 06010000 		.4byte	.LVL2
 714 001a 24020000 		.4byte	.LVL3
 715 001e 0100     		.2byte	0x1
 716 0020 53       		.byte	0x53
 717 0021 24020000 		.4byte	.LVL3
 718 0025 26020000 		.4byte	.LVL4
 719 0029 0100     		.2byte	0x1
 720 002b 51       		.byte	0x51
 721 002c 26020000 		.4byte	.LVL4
 722 0030 2C020000 		.4byte	.LVL5
 723 0034 0100     		.2byte	0x1
 724 0036 53       		.byte	0x53
 725 0037 4E020000 		.4byte	.LVL6
 726 003b 50020000 		.4byte	.LVL7
 727 003f 0100     		.2byte	0x1
 728 0041 53       		.byte	0x53
 729 0042 00000000 		.4byte	0
 730 0046 00000000 		.4byte	0
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 23


 731              		.section	.debug_aranges,"",%progbits
 732 0000 1C000000 		.4byte	0x1c
 733 0004 0200     		.2byte	0x2
 734 0006 00000000 		.4byte	.Ldebug_info0
 735 000a 04       		.byte	0x4
 736 000b 00       		.byte	0
 737 000c 0000     		.2byte	0
 738 000e 0000     		.2byte	0
 739 0010 00000000 		.4byte	.LFB0
 740 0014 94020000 		.4byte	.LFE0-.LFB0
 741 0018 00000000 		.4byte	0
 742 001c 00000000 		.4byte	0
 743              		.section	.debug_ranges,"",%progbits
 744              	.Ldebug_ranges0:
 745 0000 00000000 		.4byte	.LFB0
 746 0004 94020000 		.4byte	.LFE0
 747 0008 00000000 		.4byte	0
 748 000c 00000000 		.4byte	0
 749              		.section	.debug_line,"",%progbits
 750              	.Ldebug_line0:
 751 0000 C3000000 		.section	.debug_str,"MS",%progbits,1
 751      02005500 
 751      00000201 
 751      FB0E0D00 
 751      01010101 
 752              	.LASF31:
 753 0000 746D7043 		.ascii	"tmpCsr\000"
 753      737200
 754              	.LASF15:
 755 0007 72656733 		.ascii	"reg32\000"
 755      3200
 756              	.LASF23:
 757 000d 4932435F 		.ascii	"I2C_1_mstrRdBufIndex\000"
 757      315F6D73 
 757      74725264 
 757      42756649 
 757      6E646578 
 758              	.LASF24:
 759 0022 4932435F 		.ascii	"I2C_1_mstrWrBufPtr\000"
 759      315F6D73 
 759      74725772 
 759      42756650 
 759      747200
 760              	.LASF3:
 761 0035 73686F72 		.ascii	"short unsigned int\000"
 761      7420756E 
 761      7369676E 
 761      65642069 
 761      6E7400
 762              	.LASF25:
 763 0048 4932435F 		.ascii	"I2C_1_mstrWrBufSize\000"
 763      315F6D73 
 763      74725772 
 763      42756653 
 763      697A6500 
 764              	.LASF11:
 765 005c 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 24


 765      7400
 766              	.LASF1:
 767 0062 756E7369 		.ascii	"unsigned char\000"
 767      676E6564 
 767      20636861 
 767      7200
 768              	.LASF14:
 769 0070 72656738 		.ascii	"reg8\000"
 769      00
 770              	.LASF27:
 771 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 771      43313120 
 771      352E342E 
 771      31203230 
 771      31363036 
 772 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 772      20726576 
 772      6973696F 
 772      6E203233 
 772      37373135 
 773 00db 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 773      66756E63 
 773      74696F6E 
 773      2D736563 
 773      74696F6E 
 774              	.LASF9:
 775 0103 75696E74 		.ascii	"uint8\000"
 775      3800
 776              	.LASF12:
 777 0109 646F7562 		.ascii	"double\000"
 777      6C6500
 778              	.LASF30:
 779 0110 4932435F 		.ascii	"I2C_1_ISR\000"
 779      315F4953 
 779      5200
 780              	.LASF10:
 781 011a 75696E74 		.ascii	"uint32\000"
 781      333200
 782              	.LASF18:
 783 0121 4932435F 		.ascii	"I2C_1_state\000"
 783      315F7374 
 783      61746500 
 784              	.LASF5:
 785 012d 6C6F6E67 		.ascii	"long unsigned int\000"
 785      20756E73 
 785      69676E65 
 785      6420696E 
 785      7400
 786              	.LASF8:
 787 013f 756E7369 		.ascii	"unsigned int\000"
 787      676E6564 
 787      20696E74 
 787      00
 788              	.LASF7:
 789 014c 6C6F6E67 		.ascii	"long long unsigned int\000"
 789      206C6F6E 
 789      6720756E 
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 25


 789      7369676E 
 789      65642069 
 790              	.LASF19:
 791 0163 4932435F 		.ascii	"I2C_1_mstrStatus\000"
 791      315F6D73 
 791      74725374 
 791      61747573 
 791      00
 792              	.LASF17:
 793 0174 73697A65 		.ascii	"sizetype\000"
 793      74797065 
 793      00
 794              	.LASF6:
 795 017d 6C6F6E67 		.ascii	"long long int\000"
 795      206C6F6E 
 795      6720696E 
 795      7400
 796              	.LASF13:
 797 018b 63686172 		.ascii	"char\000"
 797      00
 798              	.LASF21:
 799 0190 4932435F 		.ascii	"I2C_1_mstrRdBufPtr\000"
 799      315F6D73 
 799      74725264 
 799      42756650 
 799      747200
 800              	.LASF2:
 801 01a3 73686F72 		.ascii	"short int\000"
 801      7420696E 
 801      7400
 802              	.LASF28:
 803 01ad 47656E65 		.ascii	"Generated_Source\\PSoC5\\I2C_1_INT.c\000"
 803      72617465 
 803      645F536F 
 803      75726365 
 803      5C50536F 
 804              	.LASF29:
 805 01d0 433A5C55 		.ascii	"C:\\Users\\harlow2016\\Documents\\PSOC_Designs\\Rpi"
 805      73657273 
 805      5C686172 
 805      6C6F7732 
 805      3031365C 
 806 01fe 4D49425C 		.ascii	"MIB\\Number3.cydsn\000"
 806      4E756D62 
 806      6572332E 
 806      63796473 
 806      6E00
 807              	.LASF26:
 808 0210 4932435F 		.ascii	"I2C_1_mstrWrBufIndex\000"
 808      315F6D73 
 808      74725772 
 808      42756649 
 808      6E646578 
 809              	.LASF4:
 810 0225 6C6F6E67 		.ascii	"long int\000"
 810      20696E74 
 810      00
ARM GAS  C:\Users\HARLOW~1\AppData\Local\Temp\ccLkD3LY.s 			page 26


 811              	.LASF16:
 812 022e 6C6F6E67 		.ascii	"long double\000"
 812      20646F75 
 812      626C6500 
 813              	.LASF0:
 814 023a 7369676E 		.ascii	"signed char\000"
 814      65642063 
 814      68617200 
 815              	.LASF22:
 816 0246 4932435F 		.ascii	"I2C_1_mstrRdBufSize\000"
 816      315F6D73 
 816      74725264 
 816      42756653 
 816      697A6500 
 817              	.LASF20:
 818 025a 4932435F 		.ascii	"I2C_1_mstrControl\000"
 818      315F6D73 
 818      7472436F 
 818      6E74726F 
 818      6C00
 819              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
