ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	RPi_Command_Data,2,2
  20              		.comm	RPi_Data,2,2
  21              		.global	i2c_address
  22              		.bss
  23              		.type	i2c_address, %object
  24              		.size	i2c_address, 1
  25              	i2c_address:
  26 0000 00       		.space	1
  27              		.comm	i2c_data_to_write,8,4
  28              		.global	i2c_byte_count
  29              		.type	i2c_byte_count, %object
  30              		.size	i2c_byte_count, 1
  31              	i2c_byte_count:
  32 0001 00       		.space	1
  33              		.global	spi_trigger_value
  34              		.data
  35              		.align	2
  36              		.type	spi_trigger_value, %object
  37              		.size	spi_trigger_value, 8
  38              	spi_trigger_value:
  39 0000 FFFF     		.short	-1
  40 0002 FFFF     		.short	-1
  41 0004 FFFF     		.short	-1
  42 0006 FFFF     		.short	-1
  43              		.global	spi_trigger_reset
  44              		.bss
  45 0002 0000     		.align	2
  46              		.type	spi_trigger_reset, %object
  47              		.size	spi_trigger_reset, 4
  48              	spi_trigger_reset:
  49 0004 00000000 		.space	4
  50              		.global	spi_trigger_radius
  51              		.data
  52              		.align	2
  53              		.type	spi_trigger_radius, %object
  54              		.size	spi_trigger_radius, 8
  55              	spi_trigger_radius:
  56 0008 0500     		.short	5
  57 000a 0500     		.short	5
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 2


  58 000c 0500     		.short	5
  59 000e 0500     		.short	5
  60              		.global	firmwareVersionDate
  61              		.align	2
  62              		.type	firmwareVersionDate, %object
  63              		.size	firmwareVersionDate, 6
  64              	firmwareVersionDate:
  65 0010 03       		.byte	3
  66 0011 00       		.byte	0
  67 0012 00       		.byte	0
  68 0013 07       		.byte	7
  69 0014 0B       		.byte	11
  70 0015 13       		.byte	19
  71              		.comm	PSOC_state,1,1
  72              		.comm	RPi_Command,1,1
  73              		.section	.text.SS_Rise_Handler,"ax",%progbits
  74              		.align	2
  75              		.global	SS_Rise_Handler
  76              		.thumb
  77              		.thumb_func
  78              		.type	SS_Rise_Handler, %function
  79              	SS_Rise_Handler:
  80              	.LFB63:
  81              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.10
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This is source code for forwarding data to and from the Raspberry Pi through the Cyprus, and mon
   8:main.c        **** *  Parameters used:
   9:main.c        **** *   Mode                CPHA == 0, CPOL == 0                
  10:main.c        **** *   Data lines          MOSI+MISO
  11:main.c        **** *   Shift direction     MSB First
  12:main.c        **** *   DataBits:           8 
  13:main.c        **** *   Bit Rate            1 Mbps
  14:main.c        **** *   Clock source        External  
  15:main.c        **** *
  16:main.c        **** ********************************************************************************
  17:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  18:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  19:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  20:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  21:main.c        **** * accompanying the software package from which you obtained this software.
  22:main.c        **** * CYPRESS AND ITS SUPPLI                                         ERS MAKE NO WARRANTY OF ANY KIND, 
  23:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  24:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  25:main.c        **** *******************************************************************************/
  26:main.c        **** #include <project.h>
  27:main.c        **** 
  28:main.c        **** #define COMMAND_MASK 0xFF00
  29:main.c        **** #define PORT_MASK 0x00F0
  30:main.c        **** #define PARAMETER_MASK 0x00F0
  31:main.c        **** #define CHANNEL_MASK 0x000F
  32:main.c        **** #define DATA_MASK 0x00F0
  33:main.c        **** #define READ_ENCODER 0x10
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 3


  34:main.c        **** #define ENCODER_IDLE 0xA5
  35:main.c        **** #define ORDINAL_MASK 0x000F
  36:main.c        **** #define TRIGGER_OFF 0xFFFF
  37:main.c        **** #define TRIGGER_RESET_MASK 0x00F0
  38:main.c        **** #define TRIGGER_RESET 0x1
  39:main.c        **** #define DEFAULT_TRIGGER_RADIUS 0x5
  40:main.c        **** 
  41:main.c        **** typedef enum {
  42:main.c        ****     idle_state,
  43:main.c        ****     listening_state,
  44:main.c        ****     execution_state,
  45:main.c        **** } state;
  46:main.c        **** 
  47:main.c        **** typedef enum {
  48:main.c        ****     no_command,
  49:main.c        ****     read_gpio,
  50:main.c        ****     write_gpio,
  51:main.c        ****     read_spi,
  52:main.c        ****     write_spi,
  53:main.c        ****     write_pwm,
  54:main.c        ****     read_i2c,
  55:main.c        ****     write_i2c,
  56:main.c        ****     add_i2c_data,
  57:main.c        ****     add_i2c_address,
  58:main.c        ****     set_spi_trigger,
  59:main.c        ****     read_encoder,
  60:main.c        ****     set_trigger_radius,
  61:main.c        ****     read_firmware_date
  62:main.c        **** } command;
  63:main.c        **** 
  64:main.c        **** uint16 ReadWriteSPIM1(uint8, uint8);
  65:main.c        **** uint16 ReadWriteSPIM2(uint8, uint16);
  66:main.c        **** uint16 ReadEncoder(uint8, uint8);
  67:main.c        **** command InterpretCommand(uint16);
  68:main.c        **** uint16 RPi_Command_Data;
  69:main.c        **** uint16 RPi_Data;
  70:main.c        **** uint8 i2c_address = 0;
  71:main.c        **** uint8 i2c_data_to_write[8];
  72:main.c        **** uint8 i2c_byte_count = 0;
  73:main.c        **** uint16 spi_trigger_value[4] = {TRIGGER_OFF, TRIGGER_OFF, TRIGGER_OFF, TRIGGER_OFF};
  74:main.c        **** uint8  spi_trigger_reset[4] = {0x0, 0x0, 0x0, 0x0};
  75:main.c        **** uint16 spi_trigger_radius[4] = {DEFAULT_TRIGGER_RADIUS, DEFAULT_TRIGGER_RADIUS, DEFAULT_TRIGGER_RAD
  76:main.c        **** 
  77:main.c        **** uint8_t firmwareVersionDate[] = {3, 0, 0, 7, 11, 19};
  78:main.c        **** 
  79:main.c        **** state PSOC_state;
  80:main.c        **** command RPi_Command;
  81:main.c        **** 
  82:main.c        **** CY_ISR(SS_Rise_Handler) {
  82              		.loc 1 82 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 4


  90 0002 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  83:main.c        ****     if (PSOC_state == idle_state) {
  92              		.loc 1 83 0
  93 0004 294B     		ldr	r3, .L7
  94 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95 0008 002B     		cmp	r3, #0
  96 000a 38D1     		bne	.L2
  84:main.c        ****         RPi_Command_Data = SPIS_ReadRxData();
  97              		.loc 1 84 0
  98 000c FFF7FEFF 		bl	SPIS_ReadRxData
  99 0010 0346     		mov	r3, r0
 100 0012 1A46     		mov	r2, r3
 101 0014 264B     		ldr	r3, .L7+4
 102 0016 1A80     		strh	r2, [r3]	@ movhi
  85:main.c        ****         RPi_Command = InterpretCommand(RPi_Command_Data);
 103              		.loc 1 85 0
 104 0018 254B     		ldr	r3, .L7+4
 105 001a 1B88     		ldrh	r3, [r3]
 106 001c 1846     		mov	r0, r3
 107 001e FFF7FEFF 		bl	InterpretCommand
 108 0022 0346     		mov	r3, r0
 109 0024 1A46     		mov	r2, r3
 110 0026 234B     		ldr	r3, .L7+8
 111 0028 1A70     		strb	r2, [r3]
  86:main.c        ****         SPIS_ClearRxBuffer();
 112              		.loc 1 86 0
 113 002a FFF7FEFF 		bl	SPIS_ClearRxBuffer
  87:main.c        ****         if((RPi_Command == write_gpio) || 
 114              		.loc 1 87 0
 115 002e 214B     		ldr	r3, .L7+8
 116 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 117 0032 022B     		cmp	r3, #2
 118 0034 1BD0     		beq	.L3
  88:main.c        ****            (RPi_Command == write_spi) || 
 119              		.loc 1 88 0 discriminator 1
 120 0036 1F4B     		ldr	r3, .L7+8
 121 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87:main.c        ****         if((RPi_Command == write_gpio) || 
 122              		.loc 1 87 0 discriminator 1
 123 003a 042B     		cmp	r3, #4
 124 003c 17D0     		beq	.L3
  89:main.c        ****            (RPi_Command == write_pwm) || 
 125              		.loc 1 89 0
 126 003e 1D4B     		ldr	r3, .L7+8
 127 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:main.c        ****            (RPi_Command == write_spi) || 
 128              		.loc 1 88 0
 129 0042 052B     		cmp	r3, #5
 130 0044 13D0     		beq	.L3
  90:main.c        ****            (RPi_Command == read_i2c) ||
 131              		.loc 1 90 0
 132 0046 1B4B     		ldr	r3, .L7+8
 133 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  89:main.c        ****            (RPi_Command == write_pwm) || 
 134              		.loc 1 89 0
 135 004a 062B     		cmp	r3, #6
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 5


 136 004c 0FD0     		beq	.L3
  91:main.c        ****            (RPi_Command == add_i2c_data) || 
 137              		.loc 1 91 0
 138 004e 194B     		ldr	r3, .L7+8
 139 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90:main.c        ****            (RPi_Command == read_i2c) ||
 140              		.loc 1 90 0
 141 0052 082B     		cmp	r3, #8
 142 0054 0BD0     		beq	.L3
  92:main.c        ****            (RPi_Command == add_i2c_address) || 
 143              		.loc 1 92 0
 144 0056 174B     		ldr	r3, .L7+8
 145 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  91:main.c        ****            (RPi_Command == add_i2c_data) || 
 146              		.loc 1 91 0
 147 005a 092B     		cmp	r3, #9
 148 005c 07D0     		beq	.L3
  93:main.c        ****            (RPi_Command == set_spi_trigger) ||
 149              		.loc 1 93 0
 150 005e 154B     		ldr	r3, .L7+8
 151 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:main.c        ****            (RPi_Command == add_i2c_address) || 
 152              		.loc 1 92 0
 153 0062 0A2B     		cmp	r3, #10
 154 0064 03D0     		beq	.L3
  94:main.c        ****            (RPi_Command == set_trigger_radius)) {
 155              		.loc 1 94 0
 156 0066 134B     		ldr	r3, .L7+8
 157 0068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93:main.c        ****            (RPi_Command == set_spi_trigger) ||
 158              		.loc 1 93 0
 159 006a 0C2B     		cmp	r3, #12
 160 006c 03D1     		bne	.L4
 161              	.L3:
  95:main.c        ****             PSOC_state = listening_state;
 162              		.loc 1 95 0
 163 006e 0F4B     		ldr	r3, .L7
 164 0070 0122     		movs	r2, #1
 165 0072 1A70     		strb	r2, [r3]
 166 0074 12E0     		b	.L6
 167              	.L4:
  96:main.c        ****         } else {
  97:main.c        ****             PSOC_state = execution_state;
 168              		.loc 1 97 0
 169 0076 0D4B     		ldr	r3, .L7
 170 0078 0222     		movs	r2, #2
 171 007a 1A70     		strb	r2, [r3]
 172 007c 0EE0     		b	.L6
 173              	.L2:
  98:main.c        ****         }
  99:main.c        ****     } else if (PSOC_state == listening_state) {
 174              		.loc 1 99 0
 175 007e 0B4B     		ldr	r3, .L7
 176 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 177 0082 012B     		cmp	r3, #1
 178 0084 0AD1     		bne	.L6
 100:main.c        ****         RPi_Data = SPIS_ReadRxData();
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 6


 179              		.loc 1 100 0
 180 0086 FFF7FEFF 		bl	SPIS_ReadRxData
 181 008a 0346     		mov	r3, r0
 182 008c 1A46     		mov	r2, r3
 183 008e 0A4B     		ldr	r3, .L7+12
 184 0090 1A80     		strh	r2, [r3]	@ movhi
 101:main.c        ****         PSOC_state = execution_state;
 185              		.loc 1 101 0
 186 0092 064B     		ldr	r3, .L7
 187 0094 0222     		movs	r2, #2
 188 0096 1A70     		strb	r2, [r3]
 102:main.c        ****         SPIS_ClearRxBuffer();
 189              		.loc 1 102 0
 190 0098 FFF7FEFF 		bl	SPIS_ClearRxBuffer
 191              	.L6:
 103:main.c        ****     }
 104:main.c        ****     
 105:main.c        ****     SPIS_ReadRxStatus();
 192              		.loc 1 105 0
 193 009c FFF7FEFF 		bl	SPIS_ReadRxStatus
 106:main.c        ****     SPIS_ClearRxBuffer();
 194              		.loc 1 106 0
 195 00a0 FFF7FEFF 		bl	SPIS_ClearRxBuffer
 107:main.c        ****     isr_SS_Rise_ClearPending();
 196              		.loc 1 107 0
 197 00a4 FFF7FEFF 		bl	isr_SS_Rise_ClearPending
 108:main.c        **** }
 198              		.loc 1 108 0
 199 00a8 00BF     		nop
 200 00aa 80BD     		pop	{r7, pc}
 201              	.L8:
 202              		.align	2
 203              	.L7:
 204 00ac 00000000 		.word	PSOC_state
 205 00b0 00000000 		.word	RPi_Command_Data
 206 00b4 00000000 		.word	RPi_Command
 207 00b8 00000000 		.word	RPi_Data
 208              		.cfi_endproc
 209              	.LFE63:
 210              		.size	SS_Rise_Handler, .-SS_Rise_Handler
 211              		.comm	rxBuffer,8,4
 212              		.comm	temp1,1,1
 213              		.comm	temp2,1,1
 214              		.comm	i,1,1
 215              		.comm	shutdown_count,2,2
 216              		.section	.text.isRPiCommand,"ax",%progbits
 217              		.align	2
 218              		.global	isRPiCommand
 219              		.thumb
 220              		.thumb_func
 221              		.type	isRPiCommand, %function
 222              	isRPiCommand:
 223              	.LFB64:
 109:main.c        **** 
 110:main.c        **** /* The txBuffer size is equal (BUFFER_SIZE-1) because for SPI Mode where CPHA == 0 and
 111:main.c        **** * CPOL == 0 one byte writes directly in SPI TX FIFO using SPIS_WriteTxDataZero() API.
 112:main.c        **** */
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 7


 113:main.c        **** 
 114:main.c        **** uint16 rxBuffer [4];
 115:main.c        **** uint8 temp1;
 116:main.c        **** uint8 temp2;
 117:main.c        **** uint8 i;
 118:main.c        **** uint16 shutdown_count;
 119:main.c        **** 
 120:main.c        **** 
 121:main.c        **** uint8 isRPiCommand(command rpiCommand) {
 224              		.loc 1 121 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 83B0     		sub	sp, sp, #12
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 236 0006 0346     		mov	r3, r0
 237 0008 FB71     		strb	r3, [r7, #7]
 122:main.c        ****     switch (rpiCommand) {
 238              		.loc 1 122 0
 239 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 240 000c 013B     		subs	r3, r3, #1
 241 000e 0C2B     		cmp	r3, #12
 242 0010 01D8     		bhi	.L10
 123:main.c        ****         case read_gpio:
 124:main.c        ****         case write_gpio:
 125:main.c        ****         case read_spi:
 126:main.c        ****         case write_spi:
 127:main.c        ****         case write_pwm:
 128:main.c        ****         case read_i2c:
 129:main.c        ****         case write_i2c:
 130:main.c        ****         case read_encoder:
 131:main.c        ****         case add_i2c_data:
 132:main.c        ****         case add_i2c_address:
 133:main.c        ****         case set_spi_trigger:
 134:main.c        ****         case set_trigger_radius:
 135:main.c        ****         case read_firmware_date:
 136:main.c        ****             return 1;
 243              		.loc 1 136 0
 244 0012 0123     		movs	r3, #1
 245 0014 00E0     		b	.L12
 246              	.L10:
 137:main.c        ****             break;
 138:main.c        ****         
 139:main.c        ****         case no_command:
 140:main.c        ****         default:
 141:main.c        ****             return 0;
 247              		.loc 1 141 0
 248 0016 0023     		movs	r3, #0
 249              	.L12:
 142:main.c        ****             break;
 143:main.c        ****     }
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 8


 144:main.c        **** 
 145:main.c        ****     return 0;
 146:main.c        **** }
 250              		.loc 1 146 0
 251 0018 1846     		mov	r0, r3
 252 001a 0C37     		adds	r7, r7, #12
 253              		.cfi_def_cfa_offset 4
 254 001c BD46     		mov	sp, r7
 255              		.cfi_def_cfa_register 13
 256              		@ sp needed
 257 001e 80BC     		pop	{r7}
 258              		.cfi_restore 7
 259              		.cfi_def_cfa_offset 0
 260 0020 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE64:
 263              		.size	isRPiCommand, .-isRPiCommand
 264 0022 00BF     		.section	.text.InterpretCommand,"ax",%progbits
 265              		.align	2
 266              		.global	InterpretCommand
 267              		.thumb
 268              		.thumb_func
 269              		.type	InterpretCommand, %function
 270              	InterpretCommand:
 271              	.LFB65:
 147:main.c        **** 
 148:main.c        **** /*Command Structure: 0x0CPQ --> execute command C with parameters P and Q
 149:main.c        ****  *Some commands take no parameters, and are of the form 0x0C00
 150:main.c        ****  */
 151:main.c        **** 
 152:main.c        **** command InterpretCommand(uint16 data)
 153:main.c        **** {
 272              		.loc 1 153 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 16
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277 0000 80B4     		push	{r7}
 278              		.cfi_def_cfa_offset 4
 279              		.cfi_offset 7, -4
 280 0002 85B0     		sub	sp, sp, #20
 281              		.cfi_def_cfa_offset 24
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 284 0006 0346     		mov	r3, r0
 285 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 154:main.c        ****     command result = no_command;
 286              		.loc 1 154 0
 287 000a 0023     		movs	r3, #0
 288 000c FB73     		strb	r3, [r7, #15]
 155:main.c        ****     uint16 cmd = (data & COMMAND_MASK);
 289              		.loc 1 155 0
 290 000e FB88     		ldrh	r3, [r7, #6]	@ movhi
 291 0010 23F0FF03 		bic	r3, r3, #255
 292 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 156:main.c        ****     
 157:main.c        ****     switch(cmd) {  
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 9


 293              		.loc 1 157 0
 294 0016 BB89     		ldrh	r3, [r7, #12]
 295 0018 B3F5E06F 		cmp	r3, #1792
 296 001c 42D0     		beq	.L15
 297 001e B3F5E06F 		cmp	r3, #1792
 298 0022 16DC     		bgt	.L16
 299 0024 B3F5407F 		cmp	r3, #768
 300 0028 30D0     		beq	.L17
 301 002a B3F5407F 		cmp	r3, #768
 302 002e 06DC     		bgt	.L18
 303 0030 B3F5807F 		cmp	r3, #256
 304 0034 24D0     		beq	.L19
 305 0036 B3F5007F 		cmp	r3, #512
 306 003a 24D0     		beq	.L20
 307 003c 47E0     		b	.L14
 308              	.L18:
 309 003e B3F5A06F 		cmp	r3, #1280
 310 0042 29D0     		beq	.L21
 311 0044 B3F5C06F 		cmp	r3, #1536
 312 0048 29D0     		beq	.L22
 313 004a B3F5806F 		cmp	r3, #1024
 314 004e 20D0     		beq	.L23
 315 0050 3DE0     		b	.L14
 316              	.L16:
 317 0052 B3F5206F 		cmp	r3, #2560
 318 0056 2ED0     		beq	.L24
 319 0058 B3F5206F 		cmp	r3, #2560
 320 005c 06DC     		bgt	.L25
 321 005e B3F5006F 		cmp	r3, #2048
 322 0062 22D0     		beq	.L26
 323 0064 B3F5106F 		cmp	r3, #2304
 324 0068 22D0     		beq	.L27
 325 006a 30E0     		b	.L14
 326              	.L25:
 327 006c B3F5406F 		cmp	r3, #3072
 328 0070 27D0     		beq	.L28
 329 0072 B3F5706F 		cmp	r3, #3840
 330 0076 27D0     		beq	.L29
 331 0078 B3F5306F 		cmp	r3, #2816
 332 007c 1ED0     		beq	.L30
 333 007e 26E0     		b	.L14
 334              	.L19:
 158:main.c        ****         case 0x0100:
 159:main.c        ****             result = read_gpio;
 335              		.loc 1 159 0
 336 0080 0123     		movs	r3, #1
 337 0082 FB73     		strb	r3, [r7, #15]
 160:main.c        ****             break;
 338              		.loc 1 160 0
 339 0084 26E0     		b	.L31
 340              	.L20:
 161:main.c        ****         case 0x0200:
 162:main.c        ****             result = write_gpio;
 341              		.loc 1 162 0
 342 0086 0223     		movs	r3, #2
 343 0088 FB73     		strb	r3, [r7, #15]
 163:main.c        ****             break;        
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 10


 344              		.loc 1 163 0
 345 008a 23E0     		b	.L31
 346              	.L17:
 164:main.c        ****         case 0x0300:
 165:main.c        ****             result = read_spi;
 347              		.loc 1 165 0
 348 008c 0323     		movs	r3, #3
 349 008e FB73     		strb	r3, [r7, #15]
 166:main.c        ****             break;        
 350              		.loc 1 166 0
 351 0090 20E0     		b	.L31
 352              	.L23:
 167:main.c        ****         case 0x0400:
 168:main.c        ****             result = write_spi;
 353              		.loc 1 168 0
 354 0092 0423     		movs	r3, #4
 355 0094 FB73     		strb	r3, [r7, #15]
 169:main.c        ****             break;        
 356              		.loc 1 169 0
 357 0096 1DE0     		b	.L31
 358              	.L21:
 170:main.c        ****         case 0x0500:
 171:main.c        ****             result = write_pwm;
 359              		.loc 1 171 0
 360 0098 0523     		movs	r3, #5
 361 009a FB73     		strb	r3, [r7, #15]
 172:main.c        ****             break;        
 362              		.loc 1 172 0
 363 009c 1AE0     		b	.L31
 364              	.L22:
 173:main.c        ****         case 0x0600:
 174:main.c        ****             result = read_i2c;
 365              		.loc 1 174 0
 366 009e 0623     		movs	r3, #6
 367 00a0 FB73     		strb	r3, [r7, #15]
 175:main.c        ****             break;        
 368              		.loc 1 175 0
 369 00a2 17E0     		b	.L31
 370              	.L15:
 176:main.c        ****         case 0x0700:
 177:main.c        ****             result = write_i2c;
 371              		.loc 1 177 0
 372 00a4 0723     		movs	r3, #7
 373 00a6 FB73     		strb	r3, [r7, #15]
 178:main.c        ****             break;        
 374              		.loc 1 178 0
 375 00a8 14E0     		b	.L31
 376              	.L26:
 179:main.c        ****         case 0x0800:
 180:main.c        ****             result = add_i2c_data;
 377              		.loc 1 180 0
 378 00aa 0823     		movs	r3, #8
 379 00ac FB73     		strb	r3, [r7, #15]
 181:main.c        ****             break;        
 380              		.loc 1 181 0
 381 00ae 11E0     		b	.L31
 382              	.L27:
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 11


 182:main.c        ****         case 0x0900:
 183:main.c        ****             result = add_i2c_address;
 383              		.loc 1 183 0
 384 00b0 0923     		movs	r3, #9
 385 00b2 FB73     		strb	r3, [r7, #15]
 184:main.c        ****             break;        
 386              		.loc 1 184 0
 387 00b4 0EE0     		b	.L31
 388              	.L24:
 185:main.c        ****         case 0x0a00:
 186:main.c        ****             result = set_spi_trigger;
 389              		.loc 1 186 0
 390 00b6 0A23     		movs	r3, #10
 391 00b8 FB73     		strb	r3, [r7, #15]
 187:main.c        ****             break;
 392              		.loc 1 187 0
 393 00ba 0BE0     		b	.L31
 394              	.L30:
 188:main.c        ****         case 0x0b00:
 189:main.c        ****             result = read_encoder;
 395              		.loc 1 189 0
 396 00bc 0B23     		movs	r3, #11
 397 00be FB73     		strb	r3, [r7, #15]
 190:main.c        ****             break;
 398              		.loc 1 190 0
 399 00c0 08E0     		b	.L31
 400              	.L28:
 191:main.c        ****         case 0x0c00:
 192:main.c        ****             result = set_trigger_radius;
 401              		.loc 1 192 0
 402 00c2 0C23     		movs	r3, #12
 403 00c4 FB73     		strb	r3, [r7, #15]
 193:main.c        ****             break;
 404              		.loc 1 193 0
 405 00c6 05E0     		b	.L31
 406              	.L29:
 194:main.c        ****         case 0x0f00:
 195:main.c        ****             result = read_firmware_date;
 407              		.loc 1 195 0
 408 00c8 0D23     		movs	r3, #13
 409 00ca FB73     		strb	r3, [r7, #15]
 196:main.c        ****             break;
 410              		.loc 1 196 0
 411 00cc 02E0     		b	.L31
 412              	.L14:
 197:main.c        ****         default:
 198:main.c        ****             result = no_command;
 413              		.loc 1 198 0
 414 00ce 0023     		movs	r3, #0
 415 00d0 FB73     		strb	r3, [r7, #15]
 199:main.c        ****             break;
 416              		.loc 1 199 0
 417 00d2 00BF     		nop
 418              	.L31:
 200:main.c        ****     }
 201:main.c        ****     
 202:main.c        ****     return result;
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 12


 419              		.loc 1 202 0
 420 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 203:main.c        **** }
 421              		.loc 1 203 0
 422 00d6 1846     		mov	r0, r3
 423 00d8 1437     		adds	r7, r7, #20
 424              		.cfi_def_cfa_offset 4
 425 00da BD46     		mov	sp, r7
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 00dc 80BC     		pop	{r7}
 429              		.cfi_restore 7
 430              		.cfi_def_cfa_offset 0
 431 00de 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE65:
 434              		.size	InterpretCommand, .-InterpretCommand
 435              		.section	.text.main,"ax",%progbits
 436              		.align	2
 437              		.global	main
 438              		.thumb
 439              		.thumb_func
 440              		.type	main, %function
 441              	main:
 442              	.LFB66:
 204:main.c        **** 
 205:main.c        **** int main() {
 443              		.loc 1 205 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 16
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 80B5     		push	{r7, lr}
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 84B0     		sub	sp, sp, #16
 452              		.cfi_def_cfa_offset 24
 453 0004 00AF     		add	r7, sp, #0
 454              		.cfi_def_cfa_register 7
 206:main.c        ****     RpiInterrupts_Write(3u);  // 9.25.18 - New location, trying to force the interrupts high as ear
 455              		.loc 1 206 0
 456 0006 0320     		movs	r0, #3
 457 0008 FFF7FEFF 		bl	RpiInterrupts_Write
 207:main.c        ****     Comp_1_Start();
 458              		.loc 1 207 0
 459 000c FFF7FEFF 		bl	Comp_1_Start
 208:main.c        ****     CyDelay(2000u);
 460              		.loc 1 208 0
 461 0010 4FF4FA60 		mov	r0, #2000
 462 0014 FFF7FEFF 		bl	CyDelay
 209:main.c        ****     
 210:main.c        ****     /* Enable Battery Backup circuit and interface circuits between RPi and PSOC  */
 211:main.c        ****     EnableBattery_Write(1u);
 463              		.loc 1 211 0
 464 0018 0120     		movs	r0, #1
 465 001a FFF7FEFF 		bl	EnableBattery_Write
 212:main.c        ****     Control_Reg_SS_1_Write(0u);
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 13


 466              		.loc 1 212 0
 467 001e 0020     		movs	r0, #0
 468 0020 FFF7FEFF 		bl	Control_Reg_SS_1_Write
 213:main.c        ****     
 214:main.c        ****     //RpiInterrupts_Write(3u);     // 9.25.18 - Original location, moving this to the start of this
 215:main.c        ****     Clock_1_Start();
 469              		.loc 1 215 0
 470 0024 FFF7FEFF 		bl	Clock_1_Start
 216:main.c        ****  
 217:main.c        ****     SPIM_1_Start();
 471              		.loc 1 217 0
 472 0028 FFF7FEFF 		bl	SPIM_1_Start
 218:main.c        ****     SPIM_1_ClearFIFO();
 473              		.loc 1 218 0
 474 002c FFF7FEFF 		bl	SPIM_1_ClearFIFO
 219:main.c        ****     SPIM_1_ClearRxBuffer();
 475              		.loc 1 219 0
 476 0030 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
 220:main.c        ****     SPIM_1_ClearTxBuffer();   
 477              		.loc 1 220 0
 478 0034 FFF7FEFF 		bl	SPIM_1_ClearTxBuffer
 221:main.c        ****     
 222:main.c        ****     SPIM_2_Start();
 479              		.loc 1 222 0
 480 0038 FFF7FEFF 		bl	SPIM_2_Start
 223:main.c        ****     SPIM_2_ClearFIFO();
 481              		.loc 1 223 0
 482 003c FFF7FEFF 		bl	SPIM_2_ClearFIFO
 224:main.c        ****     SPIM_2_ClearRxBuffer();
 483              		.loc 1 224 0
 484 0040 FFF7FEFF 		bl	SPIM_2_ClearRxBuffer
 225:main.c        ****     SPIM_2_ClearTxBuffer();    
 485              		.loc 1 225 0
 486 0044 FFF7FEFF 		bl	SPIM_2_ClearTxBuffer
 226:main.c        **** 
 227:main.c        ****     SPIS_Start();
 487              		.loc 1 227 0
 488 0048 FFF7FEFF 		bl	SPIS_Start
 228:main.c        ****     SPIS_WriteTxDataZero(0x00u);
 489              		.loc 1 228 0
 490 004c 0020     		movs	r0, #0
 491 004e FFF7FEFF 		bl	SPIS_WriteTxDataZero
 229:main.c        ****  
 230:main.c        ****     PWM_1_Start();
 492              		.loc 1 230 0
 493 0052 FFF7FEFF 		bl	PWM_1_Start
 231:main.c        ****     PWM_2_Start();
 494              		.loc 1 231 0
 495 0056 FFF7FEFF 		bl	PWM_2_Start
 232:main.c        ****     PWM_1_SetCompareMode(PWM_1__B_PWM__LESS_THAN);
 496              		.loc 1 232 0
 497 005a 0120     		movs	r0, #1
 498 005c FFF7FEFF 		bl	PWM_1_SetCompareMode
 233:main.c        ****     PWM_2_SetCompareMode(PWM_1__B_PWM__LESS_THAN);
 499              		.loc 1 233 0
 500 0060 0120     		movs	r0, #1
 501 0062 FFF7FEFF 		bl	PWM_2_SetCompareMode
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 14


 234:main.c        ****     
 235:main.c        ****     I2C_1_Start();   
 502              		.loc 1 235 0
 503 0066 FFF7FEFF 		bl	I2C_1_Start
 236:main.c        ****     
 237:main.c        ****     PSOC_state = idle_state;
 504              		.loc 1 237 0
 505 006a AF4B     		ldr	r3, .L81
 506 006c 0022     		movs	r2, #0
 507 006e 1A70     		strb	r2, [r3]
 238:main.c        ****       
 239:main.c        ****     CyGlobalIntEnable; 
 508              		.loc 1 239 0
 509              		.syntax unified
 510              	@ 239 "main.c" 1
 511 0070 62B6     		CPSIE   i
 512              	@ 0 "" 2
 240:main.c        ****     isr_SS_Rise_StartEx( SS_Rise_Handler );
 513              		.loc 1 240 0
 514              		.thumb
 515              		.syntax unified
 516 0072 AE48     		ldr	r0, .L81+4
 517 0074 FFF7FEFF 		bl	isr_SS_Rise_StartEx
 241:main.c        ****  
 242:main.c        ****     RPi_Command_Data = 0x000f;
 518              		.loc 1 242 0
 519 0078 AD4B     		ldr	r3, .L81+8
 520 007a 0F22     		movs	r2, #15
 521 007c 1A80     		strh	r2, [r3]	@ movhi
 243:main.c        ****     shutdown_count = 0;
 522              		.loc 1 243 0
 523 007e AD4B     		ldr	r3, .L81+12
 524 0080 0022     		movs	r2, #0
 525 0082 1A80     		strh	r2, [r3]	@ movhi
 526              	.L74:
 244:main.c        **** 
 245:main.c        ****     while (1)  { 
 246:main.c        ****         // This code monitors the main power input.  A local backup batter supply prevents
 247:main.c        ****         // power from being removed from the raspberry pi before it has been properly shutdown
 248:main.c        ****         // Monitor the presence of the main power input. If power has been removed for more 
 249:main.c        ****         // than 5000 times through this loop (about 20 seconds), interrupt the Raspberry Pi 
 250:main.c        ****         // telling it to shut itself down allow 20 sec for the Pi to shut down then turn off 
 251:main.c        ****         // back up power.
 252:main.c        ****         CyDelayUs(1400u);   
 527              		.loc 1 252 0
 528 0084 4FF4AF60 		mov	r0, #1400
 529 0088 FFF7FEFF 		bl	CyDelayUs
 253:main.c        ****         if (Status_Reg_1_Read() == 1u) {
 530              		.loc 1 253 0
 531 008c FFF7FEFF 		bl	Status_Reg_1_Read
 532 0090 0346     		mov	r3, r0
 533 0092 012B     		cmp	r3, #1
 534 0094 1AD1     		bne	.L34
 254:main.c        ****             shutdown_count +=1;
 535              		.loc 1 254 0
 536 0096 A74B     		ldr	r3, .L81+12
 537 0098 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 15


 538 009a 0133     		adds	r3, r3, #1
 539 009c 9AB2     		uxth	r2, r3
 540 009e A54B     		ldr	r3, .L81+12
 541 00a0 1A80     		strh	r2, [r3]	@ movhi
 255:main.c        ****             if (shutdown_count == 2000u) {   //9.25.18 - The while loop executes in about 2ms total
 542              		.loc 1 255 0
 543 00a2 A44B     		ldr	r3, .L81+12
 544 00a4 1B88     		ldrh	r3, [r3]
 545 00a6 B3F5FA6F 		cmp	r3, #2000
 546 00aa 12D1     		bne	.L36
 256:main.c        ****                                              //          2ms * 2000 = 4 seconds, not 20 seconds as 
 257:main.c        ****                                              //          Changing to 10000 to get 20 seconds.      
 258:main.c        ****                 CyGlobalIntDisable; 
 547              		.loc 1 258 0
 548              		.syntax unified
 549              	@ 258 "main.c" 1
 550 00ac 72B6     		CPSID   i
 551              	@ 0 "" 2
 259:main.c        ****                 
 260:main.c        ****                 // tell Pi to shut down
 261:main.c        ****                 RpiInterrupts_Write(0u);
 552              		.loc 1 261 0
 553              		.thumb
 554              		.syntax unified
 555 00ae 0020     		movs	r0, #0
 556 00b0 FFF7FEFF 		bl	RpiInterrupts_Write
 262:main.c        ****                 CyDelay(20000u);
 557              		.loc 1 262 0
 558 00b4 44F62060 		movw	r0, #20000
 559 00b8 FFF7FEFF 		bl	CyDelay
 263:main.c        ****                 
 264:main.c        ****                 // Wait 60 seconds then turn off back up power
 265:main.c        ****                 EnableBattery_Write(2u);
 560              		.loc 1 265 0
 561 00bc 0220     		movs	r0, #2
 562 00be FFF7FEFF 		bl	EnableBattery_Write
 266:main.c        ****                 CyDelay(2000u);
 563              		.loc 1 266 0
 564 00c2 4FF4FA60 		mov	r0, #2000
 565 00c6 FFF7FEFF 		bl	CyDelay
 566 00ca 02E0     		b	.L36
 567              	.L34:
 267:main.c        ****             }
 268:main.c        ****         } else {
 269:main.c        ****            shutdown_count = 0u;
 568              		.loc 1 269 0
 569 00cc 994B     		ldr	r3, .L81+12
 570 00ce 0022     		movs	r2, #0
 571 00d0 1A80     		strh	r2, [r3]	@ movhi
 572              	.L36:
 573              	.LBB2:
 270:main.c        ****         }
 271:main.c        ****     
 272:main.c        ****         // Writes correspondign GPIO high if encoder value is within specified range of trigger val
 273:main.c        ****         for (int i = 0; i < 4; i++) {
 574              		.loc 1 273 0
 575 00d2 0023     		movs	r3, #0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 16


 576 00d4 FB60     		str	r3, [r7, #12]
 577 00d6 62E0     		b	.L37
 578              	.L43:
 579              	.LBB3:
 274:main.c        ****             uint16 encoderValue;
 275:main.c        ****             
 276:main.c        ****             if (i == 3) {
 580              		.loc 1 276 0
 581 00d8 FB68     		ldr	r3, [r7, #12]
 582 00da 032B     		cmp	r3, #3
 583 00dc 06D1     		bne	.L38
 277:main.c        ****                 encoderValue = ReadEncoder(2, 0);
 584              		.loc 1 277 0
 585 00de 0021     		movs	r1, #0
 586 00e0 0220     		movs	r0, #2
 587 00e2 FFF7FEFF 		bl	ReadEncoder
 588 00e6 0346     		mov	r3, r0
 589 00e8 7B81     		strh	r3, [r7, #10]	@ movhi
 590 00ea 07E0     		b	.L39
 591              	.L38:
 278:main.c        ****             } else {
 279:main.c        ****                 encoderValue = ReadEncoder(1, i);
 592              		.loc 1 279 0
 593 00ec FB68     		ldr	r3, [r7, #12]
 594 00ee DBB2     		uxtb	r3, r3
 595 00f0 1946     		mov	r1, r3
 596 00f2 0120     		movs	r0, #1
 597 00f4 FFF7FEFF 		bl	ReadEncoder
 598 00f8 0346     		mov	r3, r0
 599 00fa 7B81     		strh	r3, [r7, #10]	@ movhi
 600              	.L39:
 280:main.c        ****             }
 281:main.c        ****             
 282:main.c        ****             if ((spi_trigger_value[i] - spi_trigger_radius[i] < encoderValue) && 
 601              		.loc 1 282 0
 602 00fc 8E4A     		ldr	r2, .L81+16
 603 00fe FB68     		ldr	r3, [r7, #12]
 604 0100 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 605 0104 1946     		mov	r1, r3
 606 0106 8D4A     		ldr	r2, .L81+20
 607 0108 FB68     		ldr	r3, [r7, #12]
 608 010a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 609 010e CA1A     		subs	r2, r1, r3
 610 0110 7B89     		ldrh	r3, [r7, #10]
 611 0112 9A42     		cmp	r2, r3
 612 0114 2DDA     		bge	.L40
 283:main.c        ****                 (spi_trigger_value[i] + spi_trigger_radius[i] > encoderValue)) {
 613              		.loc 1 283 0 discriminator 1
 614 0116 884A     		ldr	r2, .L81+16
 615 0118 FB68     		ldr	r3, [r7, #12]
 616 011a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 617 011e 1946     		mov	r1, r3
 618 0120 864A     		ldr	r2, .L81+20
 619 0122 FB68     		ldr	r3, [r7, #12]
 620 0124 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 621 0128 CA18     		adds	r2, r1, r3
 622 012a 7B89     		ldrh	r3, [r7, #10]
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 17


 282:main.c        ****                 (spi_trigger_value[i] + spi_trigger_radius[i] > encoderValue)) {
 623              		.loc 1 282 0 discriminator 1
 624 012c 9A42     		cmp	r2, r3
 625 012e 20DD     		ble	.L40
 284:main.c        ****                 GPIO_Control_Reg_Write(GPIO_Status_Reg_Read() | (1 << i));
 626              		.loc 1 284 0
 627 0130 FFF7FEFF 		bl	GPIO_Status_Reg_Read
 628 0134 0346     		mov	r3, r0
 629 0136 5AB2     		sxtb	r2, r3
 630 0138 0121     		movs	r1, #1
 631 013a FB68     		ldr	r3, [r7, #12]
 632 013c 01FA03F3 		lsl	r3, r1, r3
 633 0140 5BB2     		sxtb	r3, r3
 634 0142 1343     		orrs	r3, r3, r2
 635 0144 5BB2     		sxtb	r3, r3
 636 0146 DBB2     		uxtb	r3, r3
 637 0148 1846     		mov	r0, r3
 638 014a FFF7FEFF 		bl	GPIO_Control_Reg_Write
 285:main.c        ****                 if (spi_trigger_reset[i] == TRIGGER_RESET) {
 639              		.loc 1 285 0
 640 014e 7C4A     		ldr	r2, .L81+24
 641 0150 FB68     		ldr	r3, [r7, #12]
 642 0152 1344     		add	r3, r3, r2
 643 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 644 0156 012B     		cmp	r3, #1
 645 0158 1ED1     		bne	.L42
 286:main.c        ****                     spi_trigger_reset[i] = 0x0;
 646              		.loc 1 286 0
 647 015a 794A     		ldr	r2, .L81+24
 648 015c FB68     		ldr	r3, [r7, #12]
 649 015e 1344     		add	r3, r3, r2
 650 0160 0022     		movs	r2, #0
 651 0162 1A70     		strb	r2, [r3]
 287:main.c        ****                     spi_trigger_value[i] = TRIGGER_OFF;
 652              		.loc 1 287 0
 653 0164 744A     		ldr	r2, .L81+16
 654 0166 FB68     		ldr	r3, [r7, #12]
 655 0168 4FF6FF71 		movw	r1, #65535
 656 016c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 285:main.c        ****                 if (spi_trigger_reset[i] == TRIGGER_RESET) {
 657              		.loc 1 285 0
 658 0170 12E0     		b	.L42
 659              	.L40:
 288:main.c        ****                 }
 289:main.c        ****             } else {
 290:main.c        ****                 GPIO_Control_Reg_Write(GPIO_Status_Reg_Read() & (0xF-(1 << i)));
 660              		.loc 1 290 0
 661 0172 FFF7FEFF 		bl	GPIO_Status_Reg_Read
 662 0176 0346     		mov	r3, r0
 663 0178 5AB2     		sxtb	r2, r3
 664 017a 0121     		movs	r1, #1
 665 017c FB68     		ldr	r3, [r7, #12]
 666 017e 01FA03F3 		lsl	r3, r1, r3
 667 0182 DBB2     		uxtb	r3, r3
 668 0184 C3F10F03 		rsb	r3, r3, #15
 669 0188 DBB2     		uxtb	r3, r3
 670 018a 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 18


 671 018c 1340     		ands	r3, r3, r2
 672 018e 5BB2     		sxtb	r3, r3
 673 0190 DBB2     		uxtb	r3, r3
 674 0192 1846     		mov	r0, r3
 675 0194 FFF7FEFF 		bl	GPIO_Control_Reg_Write
 676              	.L42:
 677              	.LBE3:
 273:main.c        ****             uint16 encoderValue;
 678              		.loc 1 273 0 discriminator 2
 679 0198 FB68     		ldr	r3, [r7, #12]
 680 019a 0133     		adds	r3, r3, #1
 681 019c FB60     		str	r3, [r7, #12]
 682              	.L37:
 273:main.c        ****             uint16 encoderValue;
 683              		.loc 1 273 0 is_stmt 0 discriminator 1
 684 019e FB68     		ldr	r3, [r7, #12]
 685 01a0 032B     		cmp	r3, #3
 686 01a2 99DD     		ble	.L43
 687              	.LBE2:
 291:main.c        ****             } 
 292:main.c        ****         }
 293:main.c        ****     
 294:main.c        ****         if (PSOC_state == execution_state) {
 688              		.loc 1 294 0 is_stmt 1
 689 01a4 604B     		ldr	r3, .L81
 690 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 691 01a8 022B     		cmp	r3, #2
 692 01aa 7FF46BAF 		bne	.L74
 295:main.c        ****             switch(RPi_Command) {      
 693              		.loc 1 295 0
 694 01ae 654B     		ldr	r3, .L81+28
 695 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 696 01b2 013B     		subs	r3, r3, #1
 697 01b4 0C2B     		cmp	r3, #12
 698 01b6 00F23E81 		bhi	.L75
 699 01ba 01A2     		adr	r2, .L47
 700 01bc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 701              		.p2align 2
 702              	.L47:
 703 01c0 F5010000 		.word	.L46+1
 704 01c4 05020000 		.word	.L48+1
 705 01c8 13020000 		.word	.L49+1
 706 01cc 69020000 		.word	.L50+1
 707 01d0 B9020000 		.word	.L51+1
 708 01d4 37040000 		.word	.L75+1
 709 01d8 71030000 		.word	.L53+1
 710 01dc 79030000 		.word	.L54+1
 711 01e0 9F030000 		.word	.L55+1
 712 01e4 AB030000 		.word	.L56+1
 713 01e8 ED030000 		.word	.L57+1
 714 01ec D9030000 		.word	.L58+1
 715 01f0 21040000 		.word	.L59+1
 716              		.p2align 1
 717              	.L46:
 296:main.c        ****                 case read_gpio:
 297:main.c        ****                     SPIS_WriteTxDataZero(GPIO_Status_Reg_Read());
 718              		.loc 1 297 0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 19


 719 01f4 FFF7FEFF 		bl	GPIO_Status_Reg_Read
 720 01f8 0346     		mov	r3, r0
 721 01fa 9BB2     		uxth	r3, r3
 722 01fc 1846     		mov	r0, r3
 723 01fe FFF7FEFF 		bl	SPIS_WriteTxDataZero
 298:main.c        ****                     break;
 724              		.loc 1 298 0
 725 0202 23E1     		b	.L60
 726              	.L48:
 299:main.c        ****                     
 300:main.c        ****                 case write_gpio:
 301:main.c        ****                     GPIO_Control_Reg_Write(RPi_Data);
 727              		.loc 1 301 0
 728 0204 504B     		ldr	r3, .L81+32
 729 0206 1B88     		ldrh	r3, [r3]
 730 0208 DBB2     		uxtb	r3, r3
 731 020a 1846     		mov	r0, r3
 732 020c FFF7FEFF 		bl	GPIO_Control_Reg_Write
 302:main.c        ****                     break;
 733              		.loc 1 302 0
 734 0210 1CE1     		b	.L60
 735              	.L49:
 303:main.c        ****                     
 304:main.c        ****                 case read_spi:
 305:main.c        ****                     if ((RPi_Command_Data & PORT_MASK) == 0x0010) {
 736              		.loc 1 305 0
 737 0212 474B     		ldr	r3, .L81+8
 738 0214 1B88     		ldrh	r3, [r3]
 739 0216 03F0F003 		and	r3, r3, #240
 740 021a 102B     		cmp	r3, #16
 741 021c 0ED1     		bne	.L61
 306:main.c        ****                         SPIS_WriteTxDataZero(ReadWriteSPIM1(RPi_Command_Data & DATA_MASK, 0x0000));
 742              		.loc 1 306 0
 743 021e 444B     		ldr	r3, .L81+8
 744 0220 1B88     		ldrh	r3, [r3]
 745 0222 DBB2     		uxtb	r3, r3
 746 0224 23F00F03 		bic	r3, r3, #15
 747 0228 DBB2     		uxtb	r3, r3
 748 022a 0021     		movs	r1, #0
 749 022c 1846     		mov	r0, r3
 750 022e FFF7FEFF 		bl	ReadWriteSPIM1
 751 0232 0346     		mov	r3, r0
 752 0234 1846     		mov	r0, r3
 753 0236 FFF7FEFF 		bl	SPIS_WriteTxDataZero
 307:main.c        ****                     } else if ((RPi_Command & PORT_MASK) == 0x0020){
 308:main.c        ****                         SPIS_WriteTxDataZero(ReadWriteSPIM2(RPi_Command_Data & DATA_MASK, 0x0000));
 309:main.c        ****                     }
 310:main.c        ****                     break;
 754              		.loc 1 310 0
 755 023a FEE0     		b	.L76
 756              	.L61:
 307:main.c        ****                     } else if ((RPi_Command & PORT_MASK) == 0x0020){
 757              		.loc 1 307 0
 758 023c 414B     		ldr	r3, .L81+28
 759 023e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 760 0240 03F0F003 		and	r3, r3, #240
 761 0244 202B     		cmp	r3, #32
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 20


 762 0246 40F0F880 		bne	.L76
 308:main.c        ****                     }
 763              		.loc 1 308 0
 764 024a 394B     		ldr	r3, .L81+8
 765 024c 1B88     		ldrh	r3, [r3]
 766 024e DBB2     		uxtb	r3, r3
 767 0250 23F00F03 		bic	r3, r3, #15
 768 0254 DBB2     		uxtb	r3, r3
 769 0256 0021     		movs	r1, #0
 770 0258 1846     		mov	r0, r3
 771 025a FFF7FEFF 		bl	ReadWriteSPIM2
 772 025e 0346     		mov	r3, r0
 773 0260 1846     		mov	r0, r3
 774 0262 FFF7FEFF 		bl	SPIS_WriteTxDataZero
 775              		.loc 1 310 0
 776 0266 E8E0     		b	.L76
 777              	.L50:
 311:main.c        ****                 
 312:main.c        ****                 case write_spi:
 313:main.c        ****                     if ((RPi_Command_Data & PORT_MASK) == 0x0010) {
 778              		.loc 1 313 0
 779 0268 314B     		ldr	r3, .L81+8
 780 026a 1B88     		ldrh	r3, [r3]
 781 026c 03F0F003 		and	r3, r3, #240
 782 0270 102B     		cmp	r3, #16
 783 0272 0DD1     		bne	.L63
 314:main.c        ****                         ReadWriteSPIM1(RPi_Command_Data & DATA_MASK, RPi_Data);
 784              		.loc 1 314 0
 785 0274 2E4B     		ldr	r3, .L81+8
 786 0276 1B88     		ldrh	r3, [r3]
 787 0278 DBB2     		uxtb	r3, r3
 788 027a 23F00F03 		bic	r3, r3, #15
 789 027e DAB2     		uxtb	r2, r3
 790 0280 314B     		ldr	r3, .L81+32
 791 0282 1B88     		ldrh	r3, [r3]
 792 0284 DBB2     		uxtb	r3, r3
 793 0286 1946     		mov	r1, r3
 794 0288 1046     		mov	r0, r2
 795 028a FFF7FEFF 		bl	ReadWriteSPIM1
 315:main.c        ****                     } else if ((RPi_Command_Data & PORT_MASK) == 0x0020) {
 316:main.c        ****                         ReadWriteSPIM2(RPi_Command_Data & DATA_MASK, RPi_Data);
 317:main.c        ****                     }
 318:main.c        ****                     break;    
 796              		.loc 1 318 0
 797 028e D6E0     		b	.L77
 798              	.L63:
 315:main.c        ****                     } else if ((RPi_Command_Data & PORT_MASK) == 0x0020) {
 799              		.loc 1 315 0
 800 0290 274B     		ldr	r3, .L81+8
 801 0292 1B88     		ldrh	r3, [r3]
 802 0294 03F0F003 		and	r3, r3, #240
 803 0298 202B     		cmp	r3, #32
 804 029a 40F0D080 		bne	.L77
 316:main.c        ****                     }
 805              		.loc 1 316 0
 806 029e 244B     		ldr	r3, .L81+8
 807 02a0 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 21


 808 02a2 DBB2     		uxtb	r3, r3
 809 02a4 23F00F03 		bic	r3, r3, #15
 810 02a8 DAB2     		uxtb	r2, r3
 811 02aa 274B     		ldr	r3, .L81+32
 812 02ac 1B88     		ldrh	r3, [r3]
 813 02ae 1946     		mov	r1, r3
 814 02b0 1046     		mov	r0, r2
 815 02b2 FFF7FEFF 		bl	ReadWriteSPIM2
 816              		.loc 1 318 0
 817 02b6 C2E0     		b	.L77
 818              	.L51:
 819              	.LBB4:
 319:main.c        ****                 
 320:main.c        ****                 case write_pwm: {
 321:main.c        ****                     uint16 port = RPi_Command_Data & PORT_MASK;
 820              		.loc 1 321 0
 821 02b8 1D4B     		ldr	r3, .L81+8
 822 02ba 1B88     		ldrh	r3, [r3]
 823 02bc 03F0F003 		and	r3, r3, #240
 824 02c0 3B81     		strh	r3, [r7, #8]	@ movhi
 322:main.c        ****                     uint16 parameter = RPi_Command_Data & 0x000F;
 825              		.loc 1 322 0
 826 02c2 1B4B     		ldr	r3, .L81+8
 827 02c4 1B88     		ldrh	r3, [r3]
 828 02c6 03F00F03 		and	r3, r3, #15
 829 02ca FB80     		strh	r3, [r7, #6]	@ movhi
 323:main.c        ****                     if (port == 0x0010) {
 830              		.loc 1 323 0
 831 02cc 3B89     		ldrh	r3, [r7, #8]
 832 02ce 102B     		cmp	r3, #16
 833 02d0 1CD1     		bne	.L65
 324:main.c        ****                         if (parameter == 0x0000) {
 834              		.loc 1 324 0
 835 02d2 FB88     		ldrh	r3, [r7, #6]
 836 02d4 002B     		cmp	r3, #0
 837 02d6 06D1     		bne	.L66
 325:main.c        ****                             PWM_1_SetCompareMode(RPi_Data);
 838              		.loc 1 325 0
 839 02d8 1B4B     		ldr	r3, .L81+32
 840 02da 1B88     		ldrh	r3, [r3]
 841 02dc DBB2     		uxtb	r3, r3
 842 02de 1846     		mov	r0, r3
 843 02e0 FFF7FEFF 		bl	PWM_1_SetCompareMode
 844              	.LBE4:
 326:main.c        ****                         } else if (parameter == 0x0001) {
 327:main.c        ****                             PWM_1_WritePeriod(RPi_Data);
 328:main.c        ****                         } else if (parameter == 0x0002) {
 329:main.c        ****                             PWM_1_WriteCompare(RPi_Data);
 330:main.c        ****                         }
 331:main.c        ****                     } else if (port == 0x0020) {
 332:main.c        ****                         if (parameter == 0x0000) {
 333:main.c        ****                             PWM_2_SetCompareMode(RPi_Data);
 334:main.c        ****                         } else if (parameter == 0x0001) {
 335:main.c        ****                             PWM_2_WritePeriod(RPi_Data);
 336:main.c        ****                         } else if (parameter == 0x0002) {
 337:main.c        ****                             PWM_2_WriteCompare(RPi_Data);
 338:main.c        ****                         }
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 22


 339:main.c        ****                     }
 340:main.c        ****                 }
 341:main.c        ****                 break;
 845              		.loc 1 341 0
 846 02e4 ADE0     		b	.L78
 847              	.L66:
 848              	.LBB5:
 326:main.c        ****                         } else if (parameter == 0x0001) {
 849              		.loc 1 326 0
 850 02e6 FB88     		ldrh	r3, [r7, #6]
 851 02e8 012B     		cmp	r3, #1
 852 02ea 05D1     		bne	.L68
 327:main.c        ****                         } else if (parameter == 0x0002) {
 853              		.loc 1 327 0
 854 02ec 164B     		ldr	r3, .L81+32
 855 02ee 1B88     		ldrh	r3, [r3]
 856 02f0 1846     		mov	r0, r3
 857 02f2 FFF7FEFF 		bl	PWM_1_WritePeriod
 858              	.LBE5:
 859              		.loc 1 341 0
 860 02f6 A4E0     		b	.L78
 861              	.L68:
 862              	.LBB6:
 328:main.c        ****                             PWM_1_WriteCompare(RPi_Data);
 863              		.loc 1 328 0
 864 02f8 FB88     		ldrh	r3, [r7, #6]
 865 02fa 022B     		cmp	r3, #2
 866 02fc 40F0A180 		bne	.L78
 329:main.c        ****                         }
 867              		.loc 1 329 0
 868 0300 114B     		ldr	r3, .L81+32
 869 0302 1B88     		ldrh	r3, [r3]
 870 0304 1846     		mov	r0, r3
 871 0306 FFF7FEFF 		bl	PWM_1_WriteCompare
 872              	.LBE6:
 873              		.loc 1 341 0
 874 030a 9AE0     		b	.L78
 875              	.L65:
 876              	.LBB7:
 331:main.c        ****                         if (parameter == 0x0000) {
 877              		.loc 1 331 0
 878 030c 3B89     		ldrh	r3, [r7, #8]
 879 030e 202B     		cmp	r3, #32
 880 0310 40F09780 		bne	.L78
 332:main.c        ****                             PWM_2_SetCompareMode(RPi_Data);
 881              		.loc 1 332 0
 882 0314 FB88     		ldrh	r3, [r7, #6]
 883 0316 002B     		cmp	r3, #0
 884 0318 18D1     		bne	.L70
 333:main.c        ****                         } else if (parameter == 0x0001) {
 885              		.loc 1 333 0
 886 031a 0B4B     		ldr	r3, .L81+32
 887 031c 1B88     		ldrh	r3, [r3]
 888 031e DBB2     		uxtb	r3, r3
 889 0320 1846     		mov	r0, r3
 890 0322 FFF7FEFF 		bl	PWM_2_SetCompareMode
 891              	.LBE7:
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 23


 892              		.loc 1 341 0
 893 0326 8CE0     		b	.L78
 894              	.L82:
 895              		.align	2
 896              	.L81:
 897 0328 00000000 		.word	PSOC_state
 898 032c 00000000 		.word	SS_Rise_Handler
 899 0330 00000000 		.word	RPi_Command_Data
 900 0334 00000000 		.word	shutdown_count
 901 0338 00000000 		.word	spi_trigger_value
 902 033c 00000000 		.word	spi_trigger_radius
 903 0340 00000000 		.word	spi_trigger_reset
 904 0344 00000000 		.word	RPi_Command
 905 0348 00000000 		.word	RPi_Data
 906              	.L70:
 907              	.LBB8:
 334:main.c        ****                             PWM_2_WritePeriod(RPi_Data);
 908              		.loc 1 334 0
 909 034c FB88     		ldrh	r3, [r7, #6]
 910 034e 012B     		cmp	r3, #1
 911 0350 05D1     		bne	.L71
 335:main.c        ****                         } else if (parameter == 0x0002) {
 912              		.loc 1 335 0
 913 0352 414B     		ldr	r3, .L83
 914 0354 1B88     		ldrh	r3, [r3]
 915 0356 1846     		mov	r0, r3
 916 0358 FFF7FEFF 		bl	PWM_2_WritePeriod
 917              	.LBE8:
 918              		.loc 1 341 0
 919 035c 71E0     		b	.L78
 920              	.L71:
 921              	.LBB9:
 336:main.c        ****                             PWM_2_WriteCompare(RPi_Data);
 922              		.loc 1 336 0
 923 035e FB88     		ldrh	r3, [r7, #6]
 924 0360 022B     		cmp	r3, #2
 925 0362 6ED1     		bne	.L78
 337:main.c        ****                         }
 926              		.loc 1 337 0
 927 0364 3C4B     		ldr	r3, .L83
 928 0366 1B88     		ldrh	r3, [r3]
 929 0368 1846     		mov	r0, r3
 930 036a FFF7FEFF 		bl	PWM_2_WriteCompare
 931              	.LBE9:
 932              		.loc 1 341 0
 933 036e 68E0     		b	.L78
 934              	.L53:
 342:main.c        ****                     
 343:main.c        ****                 case read_i2c: {
 344:main.c        ****                         uint8 i2c_data_read;
 345:main.c        ****                         if ((RPi_Command_Data & DATA_MASK) == 1) {
 346:main.c        ****                             I2C_1_MasterReadBuf(RPi_Data >> 8, &i2c_data_read, 1, I2C_1_MODE_COMPLE
 347:main.c        ****                             SPIS_WriteTxDataZero(i2c_data_read);
 348:main.c        ****                         } else if ((RPi_Command_Data & DATA_MASK) == 2) {
 349:main.c        ****                             I2C_2_MasterReadBuf(RPi_Data >> 8, &i2c_data_read, 1, I2C_2_MODE_COMPLE
 350:main.c        ****                             SPIS_WriteTxDataZero(i2c_data_read);
 351:main.c        ****                         }  
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 24


 352:main.c        ****                     }
 353:main.c        ****                     break;       
 354:main.c        ****                 
 355:main.c        ****                 case write_i2c:
 356:main.c        ****                     if ((RPi_Command_Data & DATA_MASK) == 1) {
 357:main.c        ****                         I2C_1_MasterWriteBuf(i2c_address, i2c_data_to_write, i2c_byte_count,  I2C_1
 358:main.c        ****                     } else if ((RPi_Command_Data & DATA_MASK) == 2) {
 359:main.c        ****                         I2C_2_MasterWriteBuf(i2c_address, i2c_data_to_write,  i2c_byte_count + 1,  
 360:main.c        ****                     }
 361:main.c        ****                 
 362:main.c        ****                     i2c_byte_count = 0;
 935              		.loc 1 362 0
 936 0370 3A4B     		ldr	r3, .L83+4
 937 0372 0022     		movs	r2, #0
 938 0374 1A70     		strb	r2, [r3]
 363:main.c        ****                 
 364:main.c        ****                     break;     
 939              		.loc 1 364 0
 940 0376 69E0     		b	.L60
 941              	.L54:
 365:main.c        ****                 
 366:main.c        ****                 case add_i2c_data:
 367:main.c        ****                     if (i2c_byte_count < 8) {
 942              		.loc 1 367 0
 943 0378 384B     		ldr	r3, .L83+4
 944 037a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 945 037c 072B     		cmp	r3, #7
 946 037e 62D8     		bhi	.L79
 368:main.c        ****                         i2c_data_to_write[i2c_byte_count] = (uint8)(0x00FF & RPi_Data);
 947              		.loc 1 368 0
 948 0380 364B     		ldr	r3, .L83+4
 949 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 950 0384 1A46     		mov	r2, r3
 951 0386 344B     		ldr	r3, .L83
 952 0388 1B88     		ldrh	r3, [r3]
 953 038a D9B2     		uxtb	r1, r3
 954 038c 344B     		ldr	r3, .L83+8
 955 038e 9954     		strb	r1, [r3, r2]
 369:main.c        ****                         i2c_byte_count++;
 956              		.loc 1 369 0
 957 0390 324B     		ldr	r3, .L83+4
 958 0392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 0394 0133     		adds	r3, r3, #1
 960 0396 DAB2     		uxtb	r2, r3
 961 0398 304B     		ldr	r3, .L83+4
 962 039a 1A70     		strb	r2, [r3]
 370:main.c        ****                     }
 371:main.c        ****                     break; 
 963              		.loc 1 371 0
 964 039c 53E0     		b	.L79
 965              	.L55:
 372:main.c        ****                 
 373:main.c        ****                 case add_i2c_address:
 374:main.c        ****                     i2c_address = RPi_Data;
 966              		.loc 1 374 0
 967 039e 2E4B     		ldr	r3, .L83
 968 03a0 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 25


 969 03a2 DAB2     		uxtb	r2, r3
 970 03a4 2F4B     		ldr	r3, .L83+12
 971 03a6 1A70     		strb	r2, [r3]
 375:main.c        ****                     break; 
 972              		.loc 1 375 0
 973 03a8 50E0     		b	.L60
 974              	.L56:
 376:main.c        ****                 
 377:main.c        ****                 case set_spi_trigger:
 378:main.c        ****                     spi_trigger_value[RPi_Command_Data & ORDINAL_MASK] = RPi_Data;
 975              		.loc 1 378 0
 976 03aa 2F4B     		ldr	r3, .L83+16
 977 03ac 1B88     		ldrh	r3, [r3]
 978 03ae 03F00F03 		and	r3, r3, #15
 979 03b2 294A     		ldr	r2, .L83
 980 03b4 1188     		ldrh	r1, [r2]
 981 03b6 2D4A     		ldr	r2, .L83+20
 982 03b8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 379:main.c        ****                     if ((RPi_Command_Data & TRIGGER_RESET_MASK) == 0x10) {
 983              		.loc 1 379 0
 984 03bc 2A4B     		ldr	r3, .L83+16
 985 03be 1B88     		ldrh	r3, [r3]
 986 03c0 03F0F003 		and	r3, r3, #240
 987 03c4 102B     		cmp	r3, #16
 988 03c6 40D1     		bne	.L80
 380:main.c        ****                         spi_trigger_reset[RPi_Command_Data & ORDINAL_MASK] = TRIGGER_RESET;
 989              		.loc 1 380 0
 990 03c8 274B     		ldr	r3, .L83+16
 991 03ca 1B88     		ldrh	r3, [r3]
 992 03cc 03F00F03 		and	r3, r3, #15
 993 03d0 274A     		ldr	r2, .L83+24
 994 03d2 0121     		movs	r1, #1
 995 03d4 D154     		strb	r1, [r2, r3]
 381:main.c        ****                     }
 382:main.c        ****                     break;
 996              		.loc 1 382 0
 997 03d6 38E0     		b	.L80
 998              	.L58:
 383:main.c        **** 
 384:main.c        ****                 case set_trigger_radius:
 385:main.c        ****                     spi_trigger_radius[RPi_Command_Data & ORDINAL_MASK] = RPi_Data;
 999              		.loc 1 385 0
 1000 03d8 234B     		ldr	r3, .L83+16
 1001 03da 1B88     		ldrh	r3, [r3]
 1002 03dc 03F00F03 		and	r3, r3, #15
 1003 03e0 1D4A     		ldr	r2, .L83
 1004 03e2 1188     		ldrh	r1, [r2]
 1005 03e4 234A     		ldr	r2, .L83+28
 1006 03e6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 386:main.c        ****                     break;
 1007              		.loc 1 386 0
 1008 03ea 2FE0     		b	.L60
 1009              	.L57:
 1010              	.LBB10:
 387:main.c        ****                     
 388:main.c        ****                 case read_encoder: {
 389:main.c        ****                     uint8 port = (RPi_Command_Data & PORT_MASK) >> 0x4;
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 26


 1011              		.loc 1 389 0
 1012 03ec 1E4B     		ldr	r3, .L83+16
 1013 03ee 1B88     		ldrh	r3, [r3]
 1014 03f0 1B11     		asrs	r3, r3, #4
 1015 03f2 DBB2     		uxtb	r3, r3
 1016 03f4 03F00F03 		and	r3, r3, #15
 1017 03f8 7B71     		strb	r3, [r7, #5]
 390:main.c        ****                     uint8 channel = RPi_Command_Data & CHANNEL_MASK;
 1018              		.loc 1 390 0
 1019 03fa 1B4B     		ldr	r3, .L83+16
 1020 03fc 1B88     		ldrh	r3, [r3]
 1021 03fe DBB2     		uxtb	r3, r3
 1022 0400 03F00F03 		and	r3, r3, #15
 1023 0404 3B71     		strb	r3, [r7, #4]
 391:main.c        ****                     uint16 encoder = ReadEncoder(port, channel);
 1024              		.loc 1 391 0
 1025 0406 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 1026 0408 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1027 040a 1146     		mov	r1, r2
 1028 040c 1846     		mov	r0, r3
 1029 040e FFF7FEFF 		bl	ReadEncoder
 1030 0412 0346     		mov	r3, r0
 1031 0414 7B80     		strh	r3, [r7, #2]	@ movhi
 392:main.c        ****                     SPIS_WriteTxDataZero(encoder);
 1032              		.loc 1 392 0
 1033 0416 7B88     		ldrh	r3, [r7, #2]
 1034 0418 1846     		mov	r0, r3
 1035 041a FFF7FEFF 		bl	SPIS_WriteTxDataZero
 393:main.c        ****                     break;
 1036              		.loc 1 393 0
 1037 041e 15E0     		b	.L60
 1038              	.L59:
 1039              	.LBE10:
 394:main.c        ****                 }
 395:main.c        ****                 
 396:main.c        ****                 case read_firmware_date: {
 397:main.c        ****                     SPIS_WriteTxDataZero(firmwareVersionDate[RPi_Command_Data & ORDINAL_MASK]);
 1040              		.loc 1 397 0
 1041 0420 114B     		ldr	r3, .L83+16
 1042 0422 1B88     		ldrh	r3, [r3]
 1043 0424 03F00F03 		and	r3, r3, #15
 1044 0428 134A     		ldr	r2, .L83+32
 1045 042a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1046 042c 9BB2     		uxth	r3, r3
 1047 042e 1846     		mov	r0, r3
 1048 0430 FFF7FEFF 		bl	SPIS_WriteTxDataZero
 398:main.c        ****                     break;
 1049              		.loc 1 398 0
 1050 0434 0AE0     		b	.L60
 1051              	.L75:
 399:main.c        ****                 }
 400:main.c        ****                 
 401:main.c        ****                 case no_command:
 402:main.c        ****                 default:
 403:main.c        ****                     break;
 1052              		.loc 1 403 0
 1053 0436 00BF     		nop
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 27


 1054 0438 08E0     		b	.L60
 1055              	.L76:
 310:main.c        ****                 
 1056              		.loc 1 310 0
 1057 043a 00BF     		nop
 1058 043c 06E0     		b	.L60
 1059              	.L77:
 318:main.c        ****                 
 1060              		.loc 1 318 0
 1061 043e 00BF     		nop
 1062 0440 04E0     		b	.L60
 1063              	.L78:
 341:main.c        ****                     
 1064              		.loc 1 341 0
 1065 0442 00BF     		nop
 1066 0444 02E0     		b	.L60
 1067              	.L79:
 371:main.c        ****                 
 1068              		.loc 1 371 0
 1069 0446 00BF     		nop
 1070 0448 00E0     		b	.L60
 1071              	.L80:
 382:main.c        **** 
 1072              		.loc 1 382 0
 1073 044a 00BF     		nop
 1074              	.L60:
 404:main.c        ****             }
 405:main.c        ****         
 406:main.c        ****             PSOC_state = idle_state;
 1075              		.loc 1 406 0
 1076 044c 0B4B     		ldr	r3, .L83+36
 1077 044e 0022     		movs	r2, #0
 1078 0450 1A70     		strb	r2, [r3]
 407:main.c        ****             SPIS_ClearRxBuffer(); 
 1079              		.loc 1 407 0
 1080 0452 FFF7FEFF 		bl	SPIS_ClearRxBuffer
 408:main.c        ****         }
 409:main.c        ****     }
 1081              		.loc 1 409 0
 1082 0456 15E6     		b	.L74
 1083              	.L84:
 1084              		.align	2
 1085              	.L83:
 1086 0458 00000000 		.word	RPi_Data
 1087 045c 00000000 		.word	i2c_byte_count
 1088 0460 00000000 		.word	i2c_data_to_write
 1089 0464 00000000 		.word	i2c_address
 1090 0468 00000000 		.word	RPi_Command_Data
 1091 046c 00000000 		.word	spi_trigger_value
 1092 0470 00000000 		.word	spi_trigger_reset
 1093 0474 00000000 		.word	spi_trigger_radius
 1094 0478 00000000 		.word	firmwareVersionDate
 1095 047c 00000000 		.word	PSOC_state
 1096              		.cfi_endproc
 1097              	.LFE66:
 1098              		.size	main, .-main
 1099              		.section	.text.ReadWriteSPIM1,"ax",%progbits
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 28


 1100              		.align	2
 1101              		.global	ReadWriteSPIM1
 1102              		.thumb
 1103              		.thumb_func
 1104              		.type	ReadWriteSPIM1, %function
 1105              	ReadWriteSPIM1:
 1106              	.LFB67:
 410:main.c        **** }
 411:main.c        **** 
 412:main.c        **** uint16 ReadWriteSPIM1(uint8 ChannelNumber, uint8 data) {
 1107              		.loc 1 412 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 16
 1110              		@ frame_needed = 1, uses_anonymous_args = 0
 1111 0000 80B5     		push	{r7, lr}
 1112              		.cfi_def_cfa_offset 8
 1113              		.cfi_offset 7, -8
 1114              		.cfi_offset 14, -4
 1115 0002 84B0     		sub	sp, sp, #16
 1116              		.cfi_def_cfa_offset 24
 1117 0004 00AF     		add	r7, sp, #0
 1118              		.cfi_def_cfa_register 7
 1119 0006 0346     		mov	r3, r0
 1120 0008 0A46     		mov	r2, r1
 1121 000a FB71     		strb	r3, [r7, #7]
 1122 000c 1346     		mov	r3, r2
 1123 000e BB71     		strb	r3, [r7, #6]
 413:main.c        ****     Control_Reg_SS_1_Write(ChannelNumber);
 1124              		.loc 1 413 0
 1125 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1126 0012 1846     		mov	r0, r3
 1127 0014 FFF7FEFF 		bl	Control_Reg_SS_1_Write
 414:main.c        ****     SPIM_1_ClearFIFO();
 1128              		.loc 1 414 0
 1129 0018 FFF7FEFF 		bl	SPIM_1_ClearFIFO
 415:main.c        ****     SPIM_1_WriteTxData(data);
 1130              		.loc 1 415 0
 1131 001c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1132 001e 1846     		mov	r0, r3
 1133 0020 FFF7FEFF 		bl	SPIM_1_WriteTxData
 416:main.c        ****     
 417:main.c        ****     while(!(SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE));
 1134              		.loc 1 417 0
 1135 0024 00BF     		nop
 1136              	.L86:
 1137              		.loc 1 417 0 is_stmt 0 discriminator 1
 1138 0026 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 1139 002a 0346     		mov	r3, r0
 1140 002c 03F00103 		and	r3, r3, #1
 1141 0030 002B     		cmp	r3, #0
 1142 0032 F8D0     		beq	.L86
 418:main.c        ****     uint16 result = SPIM_1_ReadRxData();
 1143              		.loc 1 418 0 is_stmt 1
 1144 0034 FFF7FEFF 		bl	SPIM_1_ReadRxData
 1145 0038 0346     		mov	r3, r0
 1146 003a FB81     		strh	r3, [r7, #14]	@ movhi
 419:main.c        ****     return(result);
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 29


 1147              		.loc 1 419 0
 1148 003c FB89     		ldrh	r3, [r7, #14]
 420:main.c        **** }
 1149              		.loc 1 420 0
 1150 003e 1846     		mov	r0, r3
 1151 0040 1037     		adds	r7, r7, #16
 1152              		.cfi_def_cfa_offset 8
 1153 0042 BD46     		mov	sp, r7
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 0044 80BD     		pop	{r7, pc}
 1157              		.cfi_endproc
 1158              	.LFE67:
 1159              		.size	ReadWriteSPIM1, .-ReadWriteSPIM1
 1160 0046 00BF     		.section	.text.ReadWriteSPIM2,"ax",%progbits
 1161              		.align	2
 1162              		.global	ReadWriteSPIM2
 1163              		.thumb
 1164              		.thumb_func
 1165              		.type	ReadWriteSPIM2, %function
 1166              	ReadWriteSPIM2:
 1167              	.LFB68:
 421:main.c        **** 
 422:main.c        **** uint16 ReadWriteSPIM2(uint8 ChannelNumber, uint16 data) {
 1168              		.loc 1 422 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 16
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172 0000 80B5     		push	{r7, lr}
 1173              		.cfi_def_cfa_offset 8
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 84B0     		sub	sp, sp, #16
 1177              		.cfi_def_cfa_offset 24
 1178 0004 00AF     		add	r7, sp, #0
 1179              		.cfi_def_cfa_register 7
 1180 0006 0346     		mov	r3, r0
 1181 0008 0A46     		mov	r2, r1
 1182 000a FB71     		strb	r3, [r7, #7]
 1183 000c 1346     		mov	r3, r2	@ movhi
 1184 000e BB80     		strh	r3, [r7, #4]	@ movhi
 423:main.c        ****     Control_Reg_SS_2_Write(ChannelNumber);
 1185              		.loc 1 423 0
 1186 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1187 0012 1846     		mov	r0, r3
 1188 0014 FFF7FEFF 		bl	Control_Reg_SS_2_Write
 424:main.c        ****     SPIM_2_ClearFIFO();
 1189              		.loc 1 424 0
 1190 0018 FFF7FEFF 		bl	SPIM_2_ClearFIFO
 425:main.c        ****     SPIM_2_WriteTxData(data);
 1191              		.loc 1 425 0
 1192 001c BB88     		ldrh	r3, [r7, #4]
 1193 001e 1846     		mov	r0, r3
 1194 0020 FFF7FEFF 		bl	SPIM_2_WriteTxData
 426:main.c        ****     
 427:main.c        ****     while(!(SPIM_2_ReadTxStatus() & SPIM_2_STS_SPI_DONE));
 1195              		.loc 1 427 0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 30


 1196 0024 00BF     		nop
 1197              	.L89:
 1198              		.loc 1 427 0 is_stmt 0 discriminator 1
 1199 0026 FFF7FEFF 		bl	SPIM_2_ReadTxStatus
 1200 002a 0346     		mov	r3, r0
 1201 002c 03F00103 		and	r3, r3, #1
 1202 0030 002B     		cmp	r3, #0
 1203 0032 F8D0     		beq	.L89
 428:main.c        ****     uint16 result = SPIM_2_ReadRxData();
 1204              		.loc 1 428 0 is_stmt 1
 1205 0034 FFF7FEFF 		bl	SPIM_2_ReadRxData
 1206 0038 0346     		mov	r3, r0
 1207 003a FB81     		strh	r3, [r7, #14]	@ movhi
 429:main.c        ****     return(result);
 1208              		.loc 1 429 0
 1209 003c FB89     		ldrh	r3, [r7, #14]
 430:main.c        **** }
 1210              		.loc 1 430 0
 1211 003e 1846     		mov	r0, r3
 1212 0040 1037     		adds	r7, r7, #16
 1213              		.cfi_def_cfa_offset 8
 1214 0042 BD46     		mov	sp, r7
 1215              		.cfi_def_cfa_register 13
 1216              		@ sp needed
 1217 0044 80BD     		pop	{r7, pc}
 1218              		.cfi_endproc
 1219              	.LFE68:
 1220              		.size	ReadWriteSPIM2, .-ReadWriteSPIM2
 1221 0046 00BF     		.section	.text.ReadEncoder,"ax",%progbits
 1222              		.align	2
 1223              		.global	ReadEncoder
 1224              		.thumb
 1225              		.thumb_func
 1226              		.type	ReadEncoder, %function
 1227              	ReadEncoder:
 1228              	.LFB69:
 431:main.c        **** 
 432:main.c        **** uint16 ReadEncoder(uint8 port, uint8 ChannelNumber) {
 1229              		.loc 1 432 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 16
 1232              		@ frame_needed = 1, uses_anonymous_args = 0
 1233 0000 80B5     		push	{r7, lr}
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 7, -8
 1236              		.cfi_offset 14, -4
 1237 0002 84B0     		sub	sp, sp, #16
 1238              		.cfi_def_cfa_offset 24
 1239 0004 00AF     		add	r7, sp, #0
 1240              		.cfi_def_cfa_register 7
 1241 0006 0346     		mov	r3, r0
 1242 0008 0A46     		mov	r2, r1
 1243 000a FB71     		strb	r3, [r7, #7]
 1244 000c 1346     		mov	r3, r2
 1245 000e BB71     		strb	r3, [r7, #6]
 433:main.c        ****     uint16 MSB = 0xff;
 1246              		.loc 1 433 0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 31


 1247 0010 FF23     		movs	r3, #255
 1248 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 434:main.c        ****     uint16 LSB = 0xff;
 1249              		.loc 1 434 0
 1250 0014 FF23     		movs	r3, #255
 1251 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 435:main.c        **** 
 436:main.c        ****     if (port == 0x01) {
 1252              		.loc 1 436 0
 1253 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1254 001a 012B     		cmp	r3, #1
 1255 001c 1CD1     		bne	.L92
 437:main.c        ****         ReadWriteSPIM1(ChannelNumber, READ_ENCODER);
 1256              		.loc 1 437 0
 1257 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1258 0020 1021     		movs	r1, #16
 1259 0022 1846     		mov	r0, r3
 1260 0024 FFF7FEFF 		bl	ReadWriteSPIM1
 438:main.c        ****         while (ReadWriteSPIM1(ChannelNumber, 0x00) == ENCODER_IDLE){}
 1261              		.loc 1 438 0
 1262 0028 00BF     		nop
 1263              	.L93:
 1264              		.loc 1 438 0 is_stmt 0 discriminator 1
 1265 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1266 002c 0021     		movs	r1, #0
 1267 002e 1846     		mov	r0, r3
 1268 0030 FFF7FEFF 		bl	ReadWriteSPIM1
 1269 0034 0346     		mov	r3, r0
 1270 0036 A52B     		cmp	r3, #165
 1271 0038 F7D0     		beq	.L93
 439:main.c        ****         MSB = ReadWriteSPIM1(ChannelNumber, 0x00);
 1272              		.loc 1 439 0 is_stmt 1
 1273 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1274 003c 0021     		movs	r1, #0
 1275 003e 1846     		mov	r0, r3
 1276 0040 FFF7FEFF 		bl	ReadWriteSPIM1
 1277 0044 0346     		mov	r3, r0
 1278 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 440:main.c        ****         LSB = ReadWriteSPIM1(ChannelNumber, 0x00);
 1279              		.loc 1 440 0
 1280 0048 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1281 004a 0021     		movs	r1, #0
 1282 004c 1846     		mov	r0, r3
 1283 004e FFF7FEFF 		bl	ReadWriteSPIM1
 1284 0052 0346     		mov	r3, r0
 1285 0054 BB81     		strh	r3, [r7, #12]	@ movhi
 1286 0056 1EE0     		b	.L94
 1287              	.L92:
 441:main.c        ****    } else if (port == 0x02) {
 1288              		.loc 1 441 0
 1289 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1290 005a 022B     		cmp	r3, #2
 1291 005c 1BD1     		bne	.L94
 442:main.c        ****         ReadWriteSPIM2(ChannelNumber, READ_ENCODER);
 1292              		.loc 1 442 0
 1293 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1294 0060 1021     		movs	r1, #16
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 32


 1295 0062 1846     		mov	r0, r3
 1296 0064 FFF7FEFF 		bl	ReadWriteSPIM2
 443:main.c        ****         while (ReadWriteSPIM2(ChannelNumber, 0x00) == ENCODER_IDLE){}
 1297              		.loc 1 443 0
 1298 0068 00BF     		nop
 1299              	.L95:
 1300              		.loc 1 443 0 is_stmt 0 discriminator 1
 1301 006a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1302 006c 0021     		movs	r1, #0
 1303 006e 1846     		mov	r0, r3
 1304 0070 FFF7FEFF 		bl	ReadWriteSPIM2
 1305 0074 0346     		mov	r3, r0
 1306 0076 A52B     		cmp	r3, #165
 1307 0078 F7D0     		beq	.L95
 444:main.c        ****         MSB = ReadWriteSPIM2(ChannelNumber, 0x00);
 1308              		.loc 1 444 0 is_stmt 1
 1309 007a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1310 007c 0021     		movs	r1, #0
 1311 007e 1846     		mov	r0, r3
 1312 0080 FFF7FEFF 		bl	ReadWriteSPIM2
 1313 0084 0346     		mov	r3, r0
 1314 0086 FB81     		strh	r3, [r7, #14]	@ movhi
 445:main.c        ****         LSB = ReadWriteSPIM2(ChannelNumber, 0x00);
 1315              		.loc 1 445 0
 1316 0088 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1317 008a 0021     		movs	r1, #0
 1318 008c 1846     		mov	r0, r3
 1319 008e FFF7FEFF 		bl	ReadWriteSPIM2
 1320 0092 0346     		mov	r3, r0
 1321 0094 BB81     		strh	r3, [r7, #12]	@ movhi
 1322              	.L94:
 446:main.c        ****    }
 447:main.c        **** 
 448:main.c        ****    return (uint16)(LSB + (MSB << 8));
 1323              		.loc 1 448 0
 1324 0096 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1325 0098 1B02     		lsls	r3, r3, #8
 1326 009a 9AB2     		uxth	r2, r3
 1327 009c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1328 009e 1344     		add	r3, r3, r2
 1329 00a0 9BB2     		uxth	r3, r3
 449:main.c        **** }
 1330              		.loc 1 449 0
 1331 00a2 1846     		mov	r0, r3
 1332 00a4 1037     		adds	r7, r7, #16
 1333              		.cfi_def_cfa_offset 8
 1334 00a6 BD46     		mov	sp, r7
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 00a8 80BD     		pop	{r7, pc}
 1338              		.cfi_endproc
 1339              	.LFE69:
 1340              		.size	ReadEncoder, .-ReadEncoder
 1341 00aa 00BF     		.text
 1342              	.Letext0:
 1343              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1344              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 33


 1345              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1346              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1347              		.section	.debug_info,"",%progbits
 1348              	.Ldebug_info0:
 1349 0000 D5040000 		.4byte	0x4d5
 1350 0004 0400     		.2byte	0x4
 1351 0006 00000000 		.4byte	.Ldebug_abbrev0
 1352 000a 04       		.byte	0x4
 1353 000b 01       		.uleb128 0x1
 1354 000c 64000000 		.4byte	.LASF69
 1355 0010 0C       		.byte	0xc
 1356 0011 75030000 		.4byte	.LASF70
 1357 0015 33000000 		.4byte	.LASF71
 1358 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 1359 001d 00000000 		.4byte	0
 1360 0021 00000000 		.4byte	.Ldebug_line0
 1361 0025 02       		.uleb128 0x2
 1362 0026 01       		.byte	0x1
 1363 0027 06       		.byte	0x6
 1364 0028 5E020000 		.4byte	.LASF0
 1365 002c 03       		.uleb128 0x3
 1366 002d F2010000 		.4byte	.LASF4
 1367 0031 02       		.byte	0x2
 1368 0032 1D       		.byte	0x1d
 1369 0033 37000000 		.4byte	0x37
 1370 0037 02       		.uleb128 0x2
 1371 0038 01       		.byte	0x1
 1372 0039 08       		.byte	0x8
 1373 003a 38020000 		.4byte	.LASF1
 1374 003e 02       		.uleb128 0x2
 1375 003f 02       		.byte	0x2
 1376 0040 05       		.byte	0x5
 1377 0041 20000000 		.4byte	.LASF2
 1378 0045 02       		.uleb128 0x2
 1379 0046 02       		.byte	0x2
 1380 0047 07       		.byte	0x7
 1381 0048 1B030000 		.4byte	.LASF3
 1382 004c 03       		.uleb128 0x3
 1383 004d D4030000 		.4byte	.LASF5
 1384 0051 02       		.byte	0x2
 1385 0052 3F       		.byte	0x3f
 1386 0053 57000000 		.4byte	0x57
 1387 0057 02       		.uleb128 0x2
 1388 0058 04       		.byte	0x4
 1389 0059 05       		.byte	0x5
 1390 005a CB010000 		.4byte	.LASF6
 1391 005e 02       		.uleb128 0x2
 1392 005f 04       		.byte	0x4
 1393 0060 07       		.byte	0x7
 1394 0061 8E030000 		.4byte	.LASF7
 1395 0065 02       		.uleb128 0x2
 1396 0066 08       		.byte	0x8
 1397 0067 05       		.byte	0x5
 1398 0068 AE010000 		.4byte	.LASF8
 1399 006c 02       		.uleb128 0x2
 1400 006d 08       		.byte	0x8
 1401 006e 07       		.byte	0x7
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 34


 1402 006f 74020000 		.4byte	.LASF9
 1403 0073 04       		.uleb128 0x4
 1404 0074 04       		.byte	0x4
 1405 0075 05       		.byte	0x5
 1406 0076 696E7400 		.ascii	"int\000"
 1407 007a 02       		.uleb128 0x2
 1408 007b 04       		.byte	0x4
 1409 007c 07       		.byte	0x7
 1410 007d 8B020000 		.4byte	.LASF10
 1411 0081 03       		.uleb128 0x3
 1412 0082 DE030000 		.4byte	.LASF11
 1413 0086 03       		.byte	0x3
 1414 0087 18       		.byte	0x18
 1415 0088 2C000000 		.4byte	0x2c
 1416 008c 03       		.uleb128 0x3
 1417 008d EA010000 		.4byte	.LASF12
 1418 0091 03       		.byte	0x3
 1419 0092 2C       		.byte	0x2c
 1420 0093 4C000000 		.4byte	0x4c
 1421 0097 05       		.uleb128 0x5
 1422 0098 69010000 		.4byte	.LASF13
 1423 009c 04       		.byte	0x4
 1424 009d E401     		.2byte	0x1e4
 1425 009f 37000000 		.4byte	0x37
 1426 00a3 05       		.uleb128 0x5
 1427 00a4 51010000 		.4byte	.LASF14
 1428 00a8 04       		.byte	0x4
 1429 00a9 E501     		.2byte	0x1e5
 1430 00ab 45000000 		.4byte	0x45
 1431 00af 02       		.uleb128 0x2
 1432 00b0 04       		.byte	0x4
 1433 00b1 04       		.byte	0x4
 1434 00b2 A8010000 		.4byte	.LASF15
 1435 00b6 02       		.uleb128 0x2
 1436 00b7 08       		.byte	0x8
 1437 00b8 04       		.byte	0x4
 1438 00b9 A0030000 		.4byte	.LASF16
 1439 00bd 02       		.uleb128 0x2
 1440 00be 01       		.byte	0x1
 1441 00bf 08       		.byte	0x8
 1442 00c0 F1020000 		.4byte	.LASF17
 1443 00c4 02       		.uleb128 0x2
 1444 00c5 08       		.byte	0x8
 1445 00c6 04       		.byte	0x4
 1446 00c7 02010000 		.4byte	.LASF18
 1447 00cb 02       		.uleb128 0x2
 1448 00cc 04       		.byte	0x4
 1449 00cd 07       		.byte	0x7
 1450 00ce 2A000000 		.4byte	.LASF19
 1451 00d2 06       		.uleb128 0x6
 1452 00d3 01       		.byte	0x1
 1453 00d4 37000000 		.4byte	0x37
 1454 00d8 01       		.byte	0x1
 1455 00d9 29       		.byte	0x29
 1456 00da F1000000 		.4byte	0xf1
 1457 00de 07       		.uleb128 0x7
 1458 00df BD030000 		.4byte	.LASF20
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 35


 1459 00e3 00       		.byte	0
 1460 00e4 07       		.uleb128 0x7
 1461 00e5 09020000 		.4byte	.LASF21
 1462 00e9 01       		.byte	0x1
 1463 00ea 07       		.uleb128 0x7
 1464 00eb 25010000 		.4byte	.LASF22
 1465 00ef 02       		.byte	0x2
 1466 00f0 00       		.byte	0
 1467 00f1 03       		.uleb128 0x3
 1468 00f2 19020000 		.4byte	.LASF23
 1469 00f6 01       		.byte	0x1
 1470 00f7 2D       		.byte	0x2d
 1471 00f8 D2000000 		.4byte	0xd2
 1472 00fc 06       		.uleb128 0x6
 1473 00fd 01       		.byte	0x1
 1474 00fe 37000000 		.4byte	0x37
 1475 0102 01       		.byte	0x1
 1476 0103 2F       		.byte	0x2f
 1477 0104 5D010000 		.4byte	0x15d
 1478 0108 07       		.uleb128 0x7
 1479 0109 53020000 		.4byte	.LASF24
 1480 010d 00       		.byte	0
 1481 010e 07       		.uleb128 0x7
 1482 010f E0010000 		.4byte	.LASF25
 1483 0113 01       		.byte	0x1
 1484 0114 07       		.uleb128 0x7
 1485 0115 1F020000 		.4byte	.LASF26
 1486 0119 02       		.byte	0x2
 1487 011a 07       		.uleb128 0x7
 1488 011b 35010000 		.4byte	.LASF27
 1489 011f 03       		.byte	0x3
 1490 0120 07       		.uleb128 0x7
 1491 0121 9E010000 		.4byte	.LASF28
 1492 0125 04       		.byte	0x4
 1493 0126 07       		.uleb128 0x7
 1494 0127 6A020000 		.4byte	.LASF29
 1495 012b 05       		.byte	0x5
 1496 012c 07       		.uleb128 0x7
 1497 012d B4030000 		.4byte	.LASF30
 1498 0131 06       		.byte	0x6
 1499 0132 07       		.uleb128 0x7
 1500 0133 E6030000 		.4byte	.LASF31
 1501 0137 07       		.byte	0x7
 1502 0138 07       		.uleb128 0x7
 1503 0139 FC010000 		.4byte	.LASF32
 1504 013d 08       		.byte	0x8
 1505 013e 07       		.uleb128 0x7
 1506 013f 07000000 		.4byte	.LASF33
 1507 0143 09       		.byte	0x9
 1508 0144 07       		.uleb128 0x7
 1509 0145 98020000 		.4byte	.LASF34
 1510 0149 0A       		.byte	0xa
 1511 014a 07       		.uleb128 0x7
 1512 014b 46020000 		.4byte	.LASF35
 1513 014f 0B       		.byte	0xb
 1514 0150 07       		.uleb128 0x7
 1515 0151 3E010000 		.4byte	.LASF36
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 36


 1516 0155 0C       		.byte	0xc
 1517 0156 07       		.uleb128 0x7
 1518 0157 DE020000 		.4byte	.LASF37
 1519 015b 0D       		.byte	0xd
 1520 015c 00       		.byte	0
 1521 015d 03       		.uleb128 0x3
 1522 015e 0B040000 		.4byte	.LASF38
 1523 0162 01       		.byte	0x1
 1524 0163 3E       		.byte	0x3e
 1525 0164 FC000000 		.4byte	0xfc
 1526 0168 08       		.uleb128 0x8
 1527 0169 F2000000 		.4byte	.LASF72
 1528 016d 01       		.byte	0x1
 1529 016e 52       		.byte	0x52
 1530 016f 00000000 		.4byte	.LFB63
 1531 0173 BC000000 		.4byte	.LFE63-.LFB63
 1532 0177 01       		.uleb128 0x1
 1533 0178 9C       		.byte	0x9c
 1534 0179 09       		.uleb128 0x9
 1535 017a A7030000 		.4byte	.LASF39
 1536 017e 01       		.byte	0x1
 1537 017f 79       		.byte	0x79
 1538 0180 97000000 		.4byte	0x97
 1539 0184 00000000 		.4byte	.LFB64
 1540 0188 22000000 		.4byte	.LFE64-.LFB64
 1541 018c 01       		.uleb128 0x1
 1542 018d 9C       		.byte	0x9c
 1543 018e A1010000 		.4byte	0x1a1
 1544 0192 0A       		.uleb128 0xa
 1545 0193 5B030000 		.4byte	.LASF41
 1546 0197 01       		.byte	0x1
 1547 0198 79       		.byte	0x79
 1548 0199 5D010000 		.4byte	0x15d
 1549 019d 02       		.uleb128 0x2
 1550 019e 91       		.byte	0x91
 1551 019f 77       		.sleb128 -9
 1552 01a0 00       		.byte	0
 1553 01a1 09       		.uleb128 0x9
 1554 01a2 8D010000 		.4byte	.LASF40
 1555 01a6 01       		.byte	0x1
 1556 01a7 98       		.byte	0x98
 1557 01a8 5D010000 		.4byte	0x15d
 1558 01ac 00000000 		.4byte	.LFB65
 1559 01b0 E0000000 		.4byte	.LFE65-.LFB65
 1560 01b4 01       		.uleb128 0x1
 1561 01b5 9C       		.byte	0x9c
 1562 01b6 E5010000 		.4byte	0x1e5
 1563 01ba 0A       		.uleb128 0xa
 1564 01bb 0E010000 		.4byte	.LASF42
 1565 01bf 01       		.byte	0x1
 1566 01c0 98       		.byte	0x98
 1567 01c1 A3000000 		.4byte	0xa3
 1568 01c5 02       		.uleb128 0x2
 1569 01c6 91       		.byte	0x91
 1570 01c7 6E       		.sleb128 -18
 1571 01c8 0B       		.uleb128 0xb
 1572 01c9 00000000 		.4byte	.LASF43
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 37


 1573 01cd 01       		.byte	0x1
 1574 01ce 9A       		.byte	0x9a
 1575 01cf 5D010000 		.4byte	0x15d
 1576 01d3 02       		.uleb128 0x2
 1577 01d4 91       		.byte	0x91
 1578 01d5 77       		.sleb128 -9
 1579 01d6 0C       		.uleb128 0xc
 1580 01d7 636D6400 		.ascii	"cmd\000"
 1581 01db 01       		.byte	0x1
 1582 01dc 9B       		.byte	0x9b
 1583 01dd A3000000 		.4byte	0xa3
 1584 01e1 02       		.uleb128 0x2
 1585 01e2 91       		.byte	0x91
 1586 01e3 74       		.sleb128 -12
 1587 01e4 00       		.byte	0
 1588 01e5 0D       		.uleb128 0xd
 1589 01e6 F6020000 		.4byte	.LASF73
 1590 01ea 01       		.byte	0x1
 1591 01eb CD       		.byte	0xcd
 1592 01ec 73000000 		.4byte	0x73
 1593 01f0 00000000 		.4byte	.LFB66
 1594 01f4 80040000 		.4byte	.LFE66-.LFB66
 1595 01f8 01       		.uleb128 0x1
 1596 01f9 9C       		.byte	0x9c
 1597 01fa 92020000 		.4byte	0x292
 1598 01fe 0E       		.uleb128 0xe
 1599 01ff D2000000 		.4byte	.LBB2
 1600 0203 D2000000 		.4byte	.LBE2-.LBB2
 1601 0207 32020000 		.4byte	0x232
 1602 020b 0F       		.uleb128 0xf
 1603 020c 6900     		.ascii	"i\000"
 1604 020e 01       		.byte	0x1
 1605 020f 1101     		.2byte	0x111
 1606 0211 73000000 		.4byte	0x73
 1607 0215 02       		.uleb128 0x2
 1608 0216 91       		.byte	0x91
 1609 0217 74       		.sleb128 -12
 1610 0218 10       		.uleb128 0x10
 1611 0219 D8000000 		.4byte	.LBB3
 1612 021d C0000000 		.4byte	.LBE3-.LBB3
 1613 0221 11       		.uleb128 0x11
 1614 0222 2E030000 		.4byte	.LASF44
 1615 0226 01       		.byte	0x1
 1616 0227 1201     		.2byte	0x112
 1617 0229 A3000000 		.4byte	0xa3
 1618 022d 02       		.uleb128 0x2
 1619 022e 91       		.byte	0x91
 1620 022f 72       		.sleb128 -14
 1621 0230 00       		.byte	0
 1622 0231 00       		.byte	0
 1623 0232 12       		.uleb128 0x12
 1624 0233 00000000 		.4byte	.Ldebug_ranges0+0
 1625 0237 5A020000 		.4byte	0x25a
 1626 023b 11       		.uleb128 0x11
 1627 023c 56030000 		.4byte	.LASF45
 1628 0240 01       		.byte	0x1
 1629 0241 4101     		.2byte	0x141
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 38


 1630 0243 A3000000 		.4byte	0xa3
 1631 0247 02       		.uleb128 0x2
 1632 0248 91       		.byte	0x91
 1633 0249 70       		.sleb128 -16
 1634 024a 11       		.uleb128 0x11
 1635 024b BA020000 		.4byte	.LASF46
 1636 024f 01       		.byte	0x1
 1637 0250 4201     		.2byte	0x142
 1638 0252 A3000000 		.4byte	0xa3
 1639 0256 02       		.uleb128 0x2
 1640 0257 91       		.byte	0x91
 1641 0258 6E       		.sleb128 -18
 1642 0259 00       		.byte	0
 1643 025a 10       		.uleb128 0x10
 1644 025b EC030000 		.4byte	.LBB10
 1645 025f 34000000 		.4byte	.LBE10-.LBB10
 1646 0263 11       		.uleb128 0x11
 1647 0264 56030000 		.4byte	.LASF45
 1648 0268 01       		.byte	0x1
 1649 0269 8501     		.2byte	0x185
 1650 026b 97000000 		.4byte	0x97
 1651 026f 02       		.uleb128 0x2
 1652 0270 91       		.byte	0x91
 1653 0271 6D       		.sleb128 -19
 1654 0272 11       		.uleb128 0x11
 1655 0273 3B030000 		.4byte	.LASF47
 1656 0277 01       		.byte	0x1
 1657 0278 8601     		.2byte	0x186
 1658 027a 97000000 		.4byte	0x97
 1659 027e 02       		.uleb128 0x2
 1660 027f 91       		.byte	0x91
 1661 0280 6C       		.sleb128 -20
 1662 0281 11       		.uleb128 0x11
 1663 0282 F0030000 		.4byte	.LASF48
 1664 0286 01       		.byte	0x1
 1665 0287 8701     		.2byte	0x187
 1666 0289 A3000000 		.4byte	0xa3
 1667 028d 02       		.uleb128 0x2
 1668 028e 91       		.byte	0x91
 1669 028f 6A       		.sleb128 -22
 1670 0290 00       		.byte	0
 1671 0291 00       		.byte	0
 1672 0292 13       		.uleb128 0x13
 1673 0293 6F010000 		.4byte	.LASF49
 1674 0297 01       		.byte	0x1
 1675 0298 9C01     		.2byte	0x19c
 1676 029a A3000000 		.4byte	0xa3
 1677 029e 00000000 		.4byte	.LFB67
 1678 02a2 46000000 		.4byte	.LFE67-.LFB67
 1679 02a6 01       		.uleb128 0x1
 1680 02a7 9C       		.byte	0x9c
 1681 02a8 DA020000 		.4byte	0x2da
 1682 02ac 14       		.uleb128 0x14
 1683 02ad 2A020000 		.4byte	.LASF50
 1684 02b1 01       		.byte	0x1
 1685 02b2 9C01     		.2byte	0x19c
 1686 02b4 97000000 		.4byte	0x97
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 39


 1687 02b8 02       		.uleb128 0x2
 1688 02b9 91       		.byte	0x91
 1689 02ba 6F       		.sleb128 -17
 1690 02bb 14       		.uleb128 0x14
 1691 02bc 0E010000 		.4byte	.LASF42
 1692 02c0 01       		.byte	0x1
 1693 02c1 9C01     		.2byte	0x19c
 1694 02c3 97000000 		.4byte	0x97
 1695 02c7 02       		.uleb128 0x2
 1696 02c8 91       		.byte	0x91
 1697 02c9 6E       		.sleb128 -18
 1698 02ca 11       		.uleb128 0x11
 1699 02cb 00000000 		.4byte	.LASF43
 1700 02cf 01       		.byte	0x1
 1701 02d0 A201     		.2byte	0x1a2
 1702 02d2 A3000000 		.4byte	0xa3
 1703 02d6 02       		.uleb128 0x2
 1704 02d7 91       		.byte	0x91
 1705 02d8 76       		.sleb128 -10
 1706 02d9 00       		.byte	0
 1707 02da 13       		.uleb128 0x13
 1708 02db 7E010000 		.4byte	.LASF51
 1709 02df 01       		.byte	0x1
 1710 02e0 A601     		.2byte	0x1a6
 1711 02e2 A3000000 		.4byte	0xa3
 1712 02e6 00000000 		.4byte	.LFB68
 1713 02ea 46000000 		.4byte	.LFE68-.LFB68
 1714 02ee 01       		.uleb128 0x1
 1715 02ef 9C       		.byte	0x9c
 1716 02f0 22030000 		.4byte	0x322
 1717 02f4 14       		.uleb128 0x14
 1718 02f5 2A020000 		.4byte	.LASF50
 1719 02f9 01       		.byte	0x1
 1720 02fa A601     		.2byte	0x1a6
 1721 02fc 97000000 		.4byte	0x97
 1722 0300 02       		.uleb128 0x2
 1723 0301 91       		.byte	0x91
 1724 0302 6F       		.sleb128 -17
 1725 0303 14       		.uleb128 0x14
 1726 0304 0E010000 		.4byte	.LASF42
 1727 0308 01       		.byte	0x1
 1728 0309 A601     		.2byte	0x1a6
 1729 030b A3000000 		.4byte	0xa3
 1730 030f 02       		.uleb128 0x2
 1731 0310 91       		.byte	0x91
 1732 0311 6C       		.sleb128 -20
 1733 0312 11       		.uleb128 0x11
 1734 0313 00000000 		.4byte	.LASF43
 1735 0317 01       		.byte	0x1
 1736 0318 AC01     		.2byte	0x1ac
 1737 031a A3000000 		.4byte	0xa3
 1738 031e 02       		.uleb128 0x2
 1739 031f 91       		.byte	0x91
 1740 0320 76       		.sleb128 -10
 1741 0321 00       		.byte	0
 1742 0322 13       		.uleb128 0x13
 1743 0323 FB020000 		.4byte	.LASF52
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 40


 1744 0327 01       		.byte	0x1
 1745 0328 B001     		.2byte	0x1b0
 1746 032a A3000000 		.4byte	0xa3
 1747 032e 00000000 		.4byte	.LFB69
 1748 0332 AA000000 		.4byte	.LFE69-.LFB69
 1749 0336 01       		.uleb128 0x1
 1750 0337 9C       		.byte	0x9c
 1751 0338 79030000 		.4byte	0x379
 1752 033c 14       		.uleb128 0x14
 1753 033d 56030000 		.4byte	.LASF45
 1754 0341 01       		.byte	0x1
 1755 0342 B001     		.2byte	0x1b0
 1756 0344 97000000 		.4byte	0x97
 1757 0348 02       		.uleb128 0x2
 1758 0349 91       		.byte	0x91
 1759 034a 6F       		.sleb128 -17
 1760 034b 14       		.uleb128 0x14
 1761 034c 2A020000 		.4byte	.LASF50
 1762 0350 01       		.byte	0x1
 1763 0351 B001     		.2byte	0x1b0
 1764 0353 97000000 		.4byte	0x97
 1765 0357 02       		.uleb128 0x2
 1766 0358 91       		.byte	0x91
 1767 0359 6E       		.sleb128 -18
 1768 035a 0F       		.uleb128 0xf
 1769 035b 4D534200 		.ascii	"MSB\000"
 1770 035f 01       		.byte	0x1
 1771 0360 B101     		.2byte	0x1b1
 1772 0362 A3000000 		.4byte	0xa3
 1773 0366 02       		.uleb128 0x2
 1774 0367 91       		.byte	0x91
 1775 0368 76       		.sleb128 -10
 1776 0369 0F       		.uleb128 0xf
 1777 036a 4C534200 		.ascii	"LSB\000"
 1778 036e 01       		.byte	0x1
 1779 036f B201     		.2byte	0x1b2
 1780 0371 A3000000 		.4byte	0xa3
 1781 0375 02       		.uleb128 0x2
 1782 0376 91       		.byte	0x91
 1783 0377 74       		.sleb128 -12
 1784 0378 00       		.byte	0
 1785 0379 15       		.uleb128 0x15
 1786 037a FE030000 		.4byte	.LASF53
 1787 037e 05       		.byte	0x5
 1788 037f 1207     		.2byte	0x712
 1789 0381 85030000 		.4byte	0x385
 1790 0385 16       		.uleb128 0x16
 1791 0386 8C000000 		.4byte	0x8c
 1792 038a 17       		.uleb128 0x17
 1793 038b CD020000 		.4byte	.LASF54
 1794 038f 01       		.byte	0x1
 1795 0390 44       		.byte	0x44
 1796 0391 A3000000 		.4byte	0xa3
 1797 0395 05       		.uleb128 0x5
 1798 0396 03       		.byte	0x3
 1799 0397 00000000 		.4byte	RPi_Command_Data
 1800 039b 17       		.uleb128 0x17
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 41


 1801 039c C4020000 		.4byte	.LASF55
 1802 03a0 01       		.byte	0x1
 1803 03a1 45       		.byte	0x45
 1804 03a2 A3000000 		.4byte	0xa3
 1805 03a6 05       		.uleb128 0x5
 1806 03a7 03       		.byte	0x3
 1807 03a8 00000000 		.4byte	RPi_Data
 1808 03ac 17       		.uleb128 0x17
 1809 03ad C8030000 		.4byte	.LASF56
 1810 03b1 01       		.byte	0x1
 1811 03b2 46       		.byte	0x46
 1812 03b3 97000000 		.4byte	0x97
 1813 03b7 05       		.uleb128 0x5
 1814 03b8 03       		.byte	0x3
 1815 03b9 00000000 		.4byte	i2c_address
 1816 03bd 18       		.uleb128 0x18
 1817 03be 97000000 		.4byte	0x97
 1818 03c2 CD030000 		.4byte	0x3cd
 1819 03c6 19       		.uleb128 0x19
 1820 03c7 CB000000 		.4byte	0xcb
 1821 03cb 07       		.byte	0x7
 1822 03cc 00       		.byte	0
 1823 03cd 17       		.uleb128 0x17
 1824 03ce 7C030000 		.4byte	.LASF57
 1825 03d2 01       		.byte	0x1
 1826 03d3 47       		.byte	0x47
 1827 03d4 BD030000 		.4byte	0x3bd
 1828 03d8 05       		.uleb128 0x5
 1829 03d9 03       		.byte	0x3
 1830 03da 00000000 		.4byte	i2c_data_to_write
 1831 03de 17       		.uleb128 0x17
 1832 03df BC010000 		.4byte	.LASF58
 1833 03e3 01       		.byte	0x1
 1834 03e4 48       		.byte	0x48
 1835 03e5 97000000 		.4byte	0x97
 1836 03e9 05       		.uleb128 0x5
 1837 03ea 03       		.byte	0x3
 1838 03eb 00000000 		.4byte	i2c_byte_count
 1839 03ef 18       		.uleb128 0x18
 1840 03f0 A3000000 		.4byte	0xa3
 1841 03f4 FF030000 		.4byte	0x3ff
 1842 03f8 19       		.uleb128 0x19
 1843 03f9 CB000000 		.4byte	0xcb
 1844 03fd 03       		.byte	0x3
 1845 03fe 00       		.byte	0
 1846 03ff 17       		.uleb128 0x17
 1847 0400 A8020000 		.4byte	.LASF59
 1848 0404 01       		.byte	0x1
 1849 0405 49       		.byte	0x49
 1850 0406 EF030000 		.4byte	0x3ef
 1851 040a 05       		.uleb128 0x5
 1852 040b 03       		.byte	0x3
 1853 040c 00000000 		.4byte	spi_trigger_value
 1854 0410 18       		.uleb128 0x18
 1855 0411 97000000 		.4byte	0x97
 1856 0415 20040000 		.4byte	0x420
 1857 0419 19       		.uleb128 0x19
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 42


 1858 041a CB000000 		.4byte	0xcb
 1859 041e 03       		.byte	0x3
 1860 041f 00       		.byte	0
 1861 0420 17       		.uleb128 0x17
 1862 0421 13010000 		.4byte	.LASF60
 1863 0425 01       		.byte	0x1
 1864 0426 4A       		.byte	0x4a
 1865 0427 10040000 		.4byte	0x410
 1866 042b 05       		.uleb128 0x5
 1867 042c 03       		.byte	0x3
 1868 042d 00000000 		.4byte	spi_trigger_reset
 1869 0431 17       		.uleb128 0x17
 1870 0432 43030000 		.4byte	.LASF61
 1871 0436 01       		.byte	0x1
 1872 0437 4B       		.byte	0x4b
 1873 0438 EF030000 		.4byte	0x3ef
 1874 043c 05       		.uleb128 0x5
 1875 043d 03       		.byte	0x3
 1876 043e 00000000 		.4byte	spi_trigger_radius
 1877 0442 18       		.uleb128 0x18
 1878 0443 81000000 		.4byte	0x81
 1879 0447 52040000 		.4byte	0x452
 1880 044b 19       		.uleb128 0x19
 1881 044c CB000000 		.4byte	0xcb
 1882 0450 05       		.byte	0x5
 1883 0451 00       		.byte	0
 1884 0452 17       		.uleb128 0x17
 1885 0453 07030000 		.4byte	.LASF62
 1886 0457 01       		.byte	0x1
 1887 0458 4D       		.byte	0x4d
 1888 0459 42040000 		.4byte	0x442
 1889 045d 05       		.uleb128 0x5
 1890 045e 03       		.byte	0x3
 1891 045f 00000000 		.4byte	firmwareVersionDate
 1892 0463 17       		.uleb128 0x17
 1893 0464 58010000 		.4byte	.LASF63
 1894 0468 01       		.byte	0x1
 1895 0469 4F       		.byte	0x4f
 1896 046a F1000000 		.4byte	0xf1
 1897 046e 05       		.uleb128 0x5
 1898 046f 03       		.byte	0x3
 1899 0470 00000000 		.4byte	PSOC_state
 1900 0474 17       		.uleb128 0x17
 1901 0475 D4010000 		.4byte	.LASF64
 1902 0479 01       		.byte	0x1
 1903 047a 50       		.byte	0x50
 1904 047b 5D010000 		.4byte	0x15d
 1905 047f 05       		.uleb128 0x5
 1906 0480 03       		.byte	0x3
 1907 0481 00000000 		.4byte	RPi_Command
 1908 0485 17       		.uleb128 0x17
 1909 0486 17000000 		.4byte	.LASF65
 1910 048a 01       		.byte	0x1
 1911 048b 72       		.byte	0x72
 1912 048c EF030000 		.4byte	0x3ef
 1913 0490 05       		.uleb128 0x5
 1914 0491 03       		.byte	0x3
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 43


 1915 0492 00000000 		.4byte	rxBuffer
 1916 0496 17       		.uleb128 0x17
 1917 0497 63010000 		.4byte	.LASF66
 1918 049b 01       		.byte	0x1
 1919 049c 73       		.byte	0x73
 1920 049d 97000000 		.4byte	0x97
 1921 04a1 05       		.uleb128 0x5
 1922 04a2 03       		.byte	0x3
 1923 04a3 00000000 		.4byte	temp1
 1924 04a7 17       		.uleb128 0x17
 1925 04a8 F8030000 		.4byte	.LASF67
 1926 04ac 01       		.byte	0x1
 1927 04ad 74       		.byte	0x74
 1928 04ae 97000000 		.4byte	0x97
 1929 04b2 05       		.uleb128 0x5
 1930 04b3 03       		.byte	0x3
 1931 04b4 00000000 		.4byte	temp2
 1932 04b8 1A       		.uleb128 0x1a
 1933 04b9 6900     		.ascii	"i\000"
 1934 04bb 01       		.byte	0x1
 1935 04bc 75       		.byte	0x75
 1936 04bd 97000000 		.4byte	0x97
 1937 04c1 05       		.uleb128 0x5
 1938 04c2 03       		.byte	0x3
 1939 04c3 00000000 		.4byte	i
 1940 04c7 17       		.uleb128 0x17
 1941 04c8 66030000 		.4byte	.LASF68
 1942 04cc 01       		.byte	0x1
 1943 04cd 76       		.byte	0x76
 1944 04ce A3000000 		.4byte	0xa3
 1945 04d2 05       		.uleb128 0x5
 1946 04d3 03       		.byte	0x3
 1947 04d4 00000000 		.4byte	shutdown_count
 1948 04d8 00       		.byte	0
 1949              		.section	.debug_abbrev,"",%progbits
 1950              	.Ldebug_abbrev0:
 1951 0000 01       		.uleb128 0x1
 1952 0001 11       		.uleb128 0x11
 1953 0002 01       		.byte	0x1
 1954 0003 25       		.uleb128 0x25
 1955 0004 0E       		.uleb128 0xe
 1956 0005 13       		.uleb128 0x13
 1957 0006 0B       		.uleb128 0xb
 1958 0007 03       		.uleb128 0x3
 1959 0008 0E       		.uleb128 0xe
 1960 0009 1B       		.uleb128 0x1b
 1961 000a 0E       		.uleb128 0xe
 1962 000b 55       		.uleb128 0x55
 1963 000c 17       		.uleb128 0x17
 1964 000d 11       		.uleb128 0x11
 1965 000e 01       		.uleb128 0x1
 1966 000f 10       		.uleb128 0x10
 1967 0010 17       		.uleb128 0x17
 1968 0011 00       		.byte	0
 1969 0012 00       		.byte	0
 1970 0013 02       		.uleb128 0x2
 1971 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 44


 1972 0015 00       		.byte	0
 1973 0016 0B       		.uleb128 0xb
 1974 0017 0B       		.uleb128 0xb
 1975 0018 3E       		.uleb128 0x3e
 1976 0019 0B       		.uleb128 0xb
 1977 001a 03       		.uleb128 0x3
 1978 001b 0E       		.uleb128 0xe
 1979 001c 00       		.byte	0
 1980 001d 00       		.byte	0
 1981 001e 03       		.uleb128 0x3
 1982 001f 16       		.uleb128 0x16
 1983 0020 00       		.byte	0
 1984 0021 03       		.uleb128 0x3
 1985 0022 0E       		.uleb128 0xe
 1986 0023 3A       		.uleb128 0x3a
 1987 0024 0B       		.uleb128 0xb
 1988 0025 3B       		.uleb128 0x3b
 1989 0026 0B       		.uleb128 0xb
 1990 0027 49       		.uleb128 0x49
 1991 0028 13       		.uleb128 0x13
 1992 0029 00       		.byte	0
 1993 002a 00       		.byte	0
 1994 002b 04       		.uleb128 0x4
 1995 002c 24       		.uleb128 0x24
 1996 002d 00       		.byte	0
 1997 002e 0B       		.uleb128 0xb
 1998 002f 0B       		.uleb128 0xb
 1999 0030 3E       		.uleb128 0x3e
 2000 0031 0B       		.uleb128 0xb
 2001 0032 03       		.uleb128 0x3
 2002 0033 08       		.uleb128 0x8
 2003 0034 00       		.byte	0
 2004 0035 00       		.byte	0
 2005 0036 05       		.uleb128 0x5
 2006 0037 16       		.uleb128 0x16
 2007 0038 00       		.byte	0
 2008 0039 03       		.uleb128 0x3
 2009 003a 0E       		.uleb128 0xe
 2010 003b 3A       		.uleb128 0x3a
 2011 003c 0B       		.uleb128 0xb
 2012 003d 3B       		.uleb128 0x3b
 2013 003e 05       		.uleb128 0x5
 2014 003f 49       		.uleb128 0x49
 2015 0040 13       		.uleb128 0x13
 2016 0041 00       		.byte	0
 2017 0042 00       		.byte	0
 2018 0043 06       		.uleb128 0x6
 2019 0044 04       		.uleb128 0x4
 2020 0045 01       		.byte	0x1
 2021 0046 0B       		.uleb128 0xb
 2022 0047 0B       		.uleb128 0xb
 2023 0048 49       		.uleb128 0x49
 2024 0049 13       		.uleb128 0x13
 2025 004a 3A       		.uleb128 0x3a
 2026 004b 0B       		.uleb128 0xb
 2027 004c 3B       		.uleb128 0x3b
 2028 004d 0B       		.uleb128 0xb
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 45


 2029 004e 01       		.uleb128 0x1
 2030 004f 13       		.uleb128 0x13
 2031 0050 00       		.byte	0
 2032 0051 00       		.byte	0
 2033 0052 07       		.uleb128 0x7
 2034 0053 28       		.uleb128 0x28
 2035 0054 00       		.byte	0
 2036 0055 03       		.uleb128 0x3
 2037 0056 0E       		.uleb128 0xe
 2038 0057 1C       		.uleb128 0x1c
 2039 0058 0B       		.uleb128 0xb
 2040 0059 00       		.byte	0
 2041 005a 00       		.byte	0
 2042 005b 08       		.uleb128 0x8
 2043 005c 2E       		.uleb128 0x2e
 2044 005d 00       		.byte	0
 2045 005e 3F       		.uleb128 0x3f
 2046 005f 19       		.uleb128 0x19
 2047 0060 03       		.uleb128 0x3
 2048 0061 0E       		.uleb128 0xe
 2049 0062 3A       		.uleb128 0x3a
 2050 0063 0B       		.uleb128 0xb
 2051 0064 3B       		.uleb128 0x3b
 2052 0065 0B       		.uleb128 0xb
 2053 0066 27       		.uleb128 0x27
 2054 0067 19       		.uleb128 0x19
 2055 0068 11       		.uleb128 0x11
 2056 0069 01       		.uleb128 0x1
 2057 006a 12       		.uleb128 0x12
 2058 006b 06       		.uleb128 0x6
 2059 006c 40       		.uleb128 0x40
 2060 006d 18       		.uleb128 0x18
 2061 006e 9642     		.uleb128 0x2116
 2062 0070 19       		.uleb128 0x19
 2063 0071 00       		.byte	0
 2064 0072 00       		.byte	0
 2065 0073 09       		.uleb128 0x9
 2066 0074 2E       		.uleb128 0x2e
 2067 0075 01       		.byte	0x1
 2068 0076 3F       		.uleb128 0x3f
 2069 0077 19       		.uleb128 0x19
 2070 0078 03       		.uleb128 0x3
 2071 0079 0E       		.uleb128 0xe
 2072 007a 3A       		.uleb128 0x3a
 2073 007b 0B       		.uleb128 0xb
 2074 007c 3B       		.uleb128 0x3b
 2075 007d 0B       		.uleb128 0xb
 2076 007e 27       		.uleb128 0x27
 2077 007f 19       		.uleb128 0x19
 2078 0080 49       		.uleb128 0x49
 2079 0081 13       		.uleb128 0x13
 2080 0082 11       		.uleb128 0x11
 2081 0083 01       		.uleb128 0x1
 2082 0084 12       		.uleb128 0x12
 2083 0085 06       		.uleb128 0x6
 2084 0086 40       		.uleb128 0x40
 2085 0087 18       		.uleb128 0x18
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 46


 2086 0088 9742     		.uleb128 0x2117
 2087 008a 19       		.uleb128 0x19
 2088 008b 01       		.uleb128 0x1
 2089 008c 13       		.uleb128 0x13
 2090 008d 00       		.byte	0
 2091 008e 00       		.byte	0
 2092 008f 0A       		.uleb128 0xa
 2093 0090 05       		.uleb128 0x5
 2094 0091 00       		.byte	0
 2095 0092 03       		.uleb128 0x3
 2096 0093 0E       		.uleb128 0xe
 2097 0094 3A       		.uleb128 0x3a
 2098 0095 0B       		.uleb128 0xb
 2099 0096 3B       		.uleb128 0x3b
 2100 0097 0B       		.uleb128 0xb
 2101 0098 49       		.uleb128 0x49
 2102 0099 13       		.uleb128 0x13
 2103 009a 02       		.uleb128 0x2
 2104 009b 18       		.uleb128 0x18
 2105 009c 00       		.byte	0
 2106 009d 00       		.byte	0
 2107 009e 0B       		.uleb128 0xb
 2108 009f 34       		.uleb128 0x34
 2109 00a0 00       		.byte	0
 2110 00a1 03       		.uleb128 0x3
 2111 00a2 0E       		.uleb128 0xe
 2112 00a3 3A       		.uleb128 0x3a
 2113 00a4 0B       		.uleb128 0xb
 2114 00a5 3B       		.uleb128 0x3b
 2115 00a6 0B       		.uleb128 0xb
 2116 00a7 49       		.uleb128 0x49
 2117 00a8 13       		.uleb128 0x13
 2118 00a9 02       		.uleb128 0x2
 2119 00aa 18       		.uleb128 0x18
 2120 00ab 00       		.byte	0
 2121 00ac 00       		.byte	0
 2122 00ad 0C       		.uleb128 0xc
 2123 00ae 34       		.uleb128 0x34
 2124 00af 00       		.byte	0
 2125 00b0 03       		.uleb128 0x3
 2126 00b1 08       		.uleb128 0x8
 2127 00b2 3A       		.uleb128 0x3a
 2128 00b3 0B       		.uleb128 0xb
 2129 00b4 3B       		.uleb128 0x3b
 2130 00b5 0B       		.uleb128 0xb
 2131 00b6 49       		.uleb128 0x49
 2132 00b7 13       		.uleb128 0x13
 2133 00b8 02       		.uleb128 0x2
 2134 00b9 18       		.uleb128 0x18
 2135 00ba 00       		.byte	0
 2136 00bb 00       		.byte	0
 2137 00bc 0D       		.uleb128 0xd
 2138 00bd 2E       		.uleb128 0x2e
 2139 00be 01       		.byte	0x1
 2140 00bf 3F       		.uleb128 0x3f
 2141 00c0 19       		.uleb128 0x19
 2142 00c1 03       		.uleb128 0x3
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 47


 2143 00c2 0E       		.uleb128 0xe
 2144 00c3 3A       		.uleb128 0x3a
 2145 00c4 0B       		.uleb128 0xb
 2146 00c5 3B       		.uleb128 0x3b
 2147 00c6 0B       		.uleb128 0xb
 2148 00c7 49       		.uleb128 0x49
 2149 00c8 13       		.uleb128 0x13
 2150 00c9 11       		.uleb128 0x11
 2151 00ca 01       		.uleb128 0x1
 2152 00cb 12       		.uleb128 0x12
 2153 00cc 06       		.uleb128 0x6
 2154 00cd 40       		.uleb128 0x40
 2155 00ce 18       		.uleb128 0x18
 2156 00cf 9642     		.uleb128 0x2116
 2157 00d1 19       		.uleb128 0x19
 2158 00d2 01       		.uleb128 0x1
 2159 00d3 13       		.uleb128 0x13
 2160 00d4 00       		.byte	0
 2161 00d5 00       		.byte	0
 2162 00d6 0E       		.uleb128 0xe
 2163 00d7 0B       		.uleb128 0xb
 2164 00d8 01       		.byte	0x1
 2165 00d9 11       		.uleb128 0x11
 2166 00da 01       		.uleb128 0x1
 2167 00db 12       		.uleb128 0x12
 2168 00dc 06       		.uleb128 0x6
 2169 00dd 01       		.uleb128 0x1
 2170 00de 13       		.uleb128 0x13
 2171 00df 00       		.byte	0
 2172 00e0 00       		.byte	0
 2173 00e1 0F       		.uleb128 0xf
 2174 00e2 34       		.uleb128 0x34
 2175 00e3 00       		.byte	0
 2176 00e4 03       		.uleb128 0x3
 2177 00e5 08       		.uleb128 0x8
 2178 00e6 3A       		.uleb128 0x3a
 2179 00e7 0B       		.uleb128 0xb
 2180 00e8 3B       		.uleb128 0x3b
 2181 00e9 05       		.uleb128 0x5
 2182 00ea 49       		.uleb128 0x49
 2183 00eb 13       		.uleb128 0x13
 2184 00ec 02       		.uleb128 0x2
 2185 00ed 18       		.uleb128 0x18
 2186 00ee 00       		.byte	0
 2187 00ef 00       		.byte	0
 2188 00f0 10       		.uleb128 0x10
 2189 00f1 0B       		.uleb128 0xb
 2190 00f2 01       		.byte	0x1
 2191 00f3 11       		.uleb128 0x11
 2192 00f4 01       		.uleb128 0x1
 2193 00f5 12       		.uleb128 0x12
 2194 00f6 06       		.uleb128 0x6
 2195 00f7 00       		.byte	0
 2196 00f8 00       		.byte	0
 2197 00f9 11       		.uleb128 0x11
 2198 00fa 34       		.uleb128 0x34
 2199 00fb 00       		.byte	0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 48


 2200 00fc 03       		.uleb128 0x3
 2201 00fd 0E       		.uleb128 0xe
 2202 00fe 3A       		.uleb128 0x3a
 2203 00ff 0B       		.uleb128 0xb
 2204 0100 3B       		.uleb128 0x3b
 2205 0101 05       		.uleb128 0x5
 2206 0102 49       		.uleb128 0x49
 2207 0103 13       		.uleb128 0x13
 2208 0104 02       		.uleb128 0x2
 2209 0105 18       		.uleb128 0x18
 2210 0106 00       		.byte	0
 2211 0107 00       		.byte	0
 2212 0108 12       		.uleb128 0x12
 2213 0109 0B       		.uleb128 0xb
 2214 010a 01       		.byte	0x1
 2215 010b 55       		.uleb128 0x55
 2216 010c 17       		.uleb128 0x17
 2217 010d 01       		.uleb128 0x1
 2218 010e 13       		.uleb128 0x13
 2219 010f 00       		.byte	0
 2220 0110 00       		.byte	0
 2221 0111 13       		.uleb128 0x13
 2222 0112 2E       		.uleb128 0x2e
 2223 0113 01       		.byte	0x1
 2224 0114 3F       		.uleb128 0x3f
 2225 0115 19       		.uleb128 0x19
 2226 0116 03       		.uleb128 0x3
 2227 0117 0E       		.uleb128 0xe
 2228 0118 3A       		.uleb128 0x3a
 2229 0119 0B       		.uleb128 0xb
 2230 011a 3B       		.uleb128 0x3b
 2231 011b 05       		.uleb128 0x5
 2232 011c 27       		.uleb128 0x27
 2233 011d 19       		.uleb128 0x19
 2234 011e 49       		.uleb128 0x49
 2235 011f 13       		.uleb128 0x13
 2236 0120 11       		.uleb128 0x11
 2237 0121 01       		.uleb128 0x1
 2238 0122 12       		.uleb128 0x12
 2239 0123 06       		.uleb128 0x6
 2240 0124 40       		.uleb128 0x40
 2241 0125 18       		.uleb128 0x18
 2242 0126 9642     		.uleb128 0x2116
 2243 0128 19       		.uleb128 0x19
 2244 0129 01       		.uleb128 0x1
 2245 012a 13       		.uleb128 0x13
 2246 012b 00       		.byte	0
 2247 012c 00       		.byte	0
 2248 012d 14       		.uleb128 0x14
 2249 012e 05       		.uleb128 0x5
 2250 012f 00       		.byte	0
 2251 0130 03       		.uleb128 0x3
 2252 0131 0E       		.uleb128 0xe
 2253 0132 3A       		.uleb128 0x3a
 2254 0133 0B       		.uleb128 0xb
 2255 0134 3B       		.uleb128 0x3b
 2256 0135 05       		.uleb128 0x5
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 49


 2257 0136 49       		.uleb128 0x49
 2258 0137 13       		.uleb128 0x13
 2259 0138 02       		.uleb128 0x2
 2260 0139 18       		.uleb128 0x18
 2261 013a 00       		.byte	0
 2262 013b 00       		.byte	0
 2263 013c 15       		.uleb128 0x15
 2264 013d 34       		.uleb128 0x34
 2265 013e 00       		.byte	0
 2266 013f 03       		.uleb128 0x3
 2267 0140 0E       		.uleb128 0xe
 2268 0141 3A       		.uleb128 0x3a
 2269 0142 0B       		.uleb128 0xb
 2270 0143 3B       		.uleb128 0x3b
 2271 0144 05       		.uleb128 0x5
 2272 0145 49       		.uleb128 0x49
 2273 0146 13       		.uleb128 0x13
 2274 0147 3F       		.uleb128 0x3f
 2275 0148 19       		.uleb128 0x19
 2276 0149 3C       		.uleb128 0x3c
 2277 014a 19       		.uleb128 0x19
 2278 014b 00       		.byte	0
 2279 014c 00       		.byte	0
 2280 014d 16       		.uleb128 0x16
 2281 014e 35       		.uleb128 0x35
 2282 014f 00       		.byte	0
 2283 0150 49       		.uleb128 0x49
 2284 0151 13       		.uleb128 0x13
 2285 0152 00       		.byte	0
 2286 0153 00       		.byte	0
 2287 0154 17       		.uleb128 0x17
 2288 0155 34       		.uleb128 0x34
 2289 0156 00       		.byte	0
 2290 0157 03       		.uleb128 0x3
 2291 0158 0E       		.uleb128 0xe
 2292 0159 3A       		.uleb128 0x3a
 2293 015a 0B       		.uleb128 0xb
 2294 015b 3B       		.uleb128 0x3b
 2295 015c 0B       		.uleb128 0xb
 2296 015d 49       		.uleb128 0x49
 2297 015e 13       		.uleb128 0x13
 2298 015f 3F       		.uleb128 0x3f
 2299 0160 19       		.uleb128 0x19
 2300 0161 02       		.uleb128 0x2
 2301 0162 18       		.uleb128 0x18
 2302 0163 00       		.byte	0
 2303 0164 00       		.byte	0
 2304 0165 18       		.uleb128 0x18
 2305 0166 01       		.uleb128 0x1
 2306 0167 01       		.byte	0x1
 2307 0168 49       		.uleb128 0x49
 2308 0169 13       		.uleb128 0x13
 2309 016a 01       		.uleb128 0x1
 2310 016b 13       		.uleb128 0x13
 2311 016c 00       		.byte	0
 2312 016d 00       		.byte	0
 2313 016e 19       		.uleb128 0x19
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 50


 2314 016f 21       		.uleb128 0x21
 2315 0170 00       		.byte	0
 2316 0171 49       		.uleb128 0x49
 2317 0172 13       		.uleb128 0x13
 2318 0173 2F       		.uleb128 0x2f
 2319 0174 0B       		.uleb128 0xb
 2320 0175 00       		.byte	0
 2321 0176 00       		.byte	0
 2322 0177 1A       		.uleb128 0x1a
 2323 0178 34       		.uleb128 0x34
 2324 0179 00       		.byte	0
 2325 017a 03       		.uleb128 0x3
 2326 017b 08       		.uleb128 0x8
 2327 017c 3A       		.uleb128 0x3a
 2328 017d 0B       		.uleb128 0xb
 2329 017e 3B       		.uleb128 0x3b
 2330 017f 0B       		.uleb128 0xb
 2331 0180 49       		.uleb128 0x49
 2332 0181 13       		.uleb128 0x13
 2333 0182 3F       		.uleb128 0x3f
 2334 0183 19       		.uleb128 0x19
 2335 0184 02       		.uleb128 0x2
 2336 0185 18       		.uleb128 0x18
 2337 0186 00       		.byte	0
 2338 0187 00       		.byte	0
 2339 0188 00       		.byte	0
 2340              		.section	.debug_aranges,"",%progbits
 2341 0000 4C000000 		.4byte	0x4c
 2342 0004 0200     		.2byte	0x2
 2343 0006 00000000 		.4byte	.Ldebug_info0
 2344 000a 04       		.byte	0x4
 2345 000b 00       		.byte	0
 2346 000c 0000     		.2byte	0
 2347 000e 0000     		.2byte	0
 2348 0010 00000000 		.4byte	.LFB63
 2349 0014 BC000000 		.4byte	.LFE63-.LFB63
 2350 0018 00000000 		.4byte	.LFB64
 2351 001c 22000000 		.4byte	.LFE64-.LFB64
 2352 0020 00000000 		.4byte	.LFB65
 2353 0024 E0000000 		.4byte	.LFE65-.LFB65
 2354 0028 00000000 		.4byte	.LFB66
 2355 002c 80040000 		.4byte	.LFE66-.LFB66
 2356 0030 00000000 		.4byte	.LFB67
 2357 0034 46000000 		.4byte	.LFE67-.LFB67
 2358 0038 00000000 		.4byte	.LFB68
 2359 003c 46000000 		.4byte	.LFE68-.LFB68
 2360 0040 00000000 		.4byte	.LFB69
 2361 0044 AA000000 		.4byte	.LFE69-.LFB69
 2362 0048 00000000 		.4byte	0
 2363 004c 00000000 		.4byte	0
 2364              		.section	.debug_ranges,"",%progbits
 2365              	.Ldebug_ranges0:
 2366 0000 B8020000 		.4byte	.LBB4
 2367 0004 E4020000 		.4byte	.LBE4
 2368 0008 E6020000 		.4byte	.LBB5
 2369 000c F6020000 		.4byte	.LBE5
 2370 0010 F8020000 		.4byte	.LBB6
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 51


 2371 0014 0A030000 		.4byte	.LBE6
 2372 0018 0C030000 		.4byte	.LBB7
 2373 001c 26030000 		.4byte	.LBE7
 2374 0020 4C030000 		.4byte	.LBB8
 2375 0024 5C030000 		.4byte	.LBE8
 2376 0028 5E030000 		.4byte	.LBB9
 2377 002c 6E030000 		.4byte	.LBE9
 2378 0030 00000000 		.4byte	0
 2379 0034 00000000 		.4byte	0
 2380 0038 00000000 		.4byte	.LFB63
 2381 003c BC000000 		.4byte	.LFE63
 2382 0040 00000000 		.4byte	.LFB64
 2383 0044 22000000 		.4byte	.LFE64
 2384 0048 00000000 		.4byte	.LFB65
 2385 004c E0000000 		.4byte	.LFE65
 2386 0050 00000000 		.4byte	.LFB66
 2387 0054 80040000 		.4byte	.LFE66
 2388 0058 00000000 		.4byte	.LFB67
 2389 005c 46000000 		.4byte	.LFE67
 2390 0060 00000000 		.4byte	.LFB68
 2391 0064 46000000 		.4byte	.LFE68
 2392 0068 00000000 		.4byte	.LFB69
 2393 006c AA000000 		.4byte	.LFE69
 2394 0070 00000000 		.4byte	0
 2395 0074 00000000 		.4byte	0
 2396              		.section	.debug_line,"",%progbits
 2397              	.Ldebug_line0:
 2398 0000 F8020000 		.section	.debug_str,"MS",%progbits,1
 2398      02004C01 
 2398      00000201 
 2398      FB0E0D00 
 2398      01010101 
 2399              	.LASF43:
 2400 0000 72657375 		.ascii	"result\000"
 2400      6C7400
 2401              	.LASF33:
 2402 0007 6164645F 		.ascii	"add_i2c_address\000"
 2402      6932635F 
 2402      61646472 
 2402      65737300 
 2403              	.LASF65:
 2404 0017 72784275 		.ascii	"rxBuffer\000"
 2404      66666572 
 2404      00
 2405              	.LASF2:
 2406 0020 73686F72 		.ascii	"short int\000"
 2406      7420696E 
 2406      7400
 2407              	.LASF19:
 2408 002a 73697A65 		.ascii	"sizetype\000"
 2408      74797065 
 2408      00
 2409              	.LASF71:
 2410 0033 433A5C55 		.ascii	"C:\\Users\\Doug\\Documents\\DPEA\\RpiMIB\\RpiMIB.cy"
 2410      73657273 
 2410      5C446F75 
 2410      675C446F 
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 52


 2410      63756D65 
 2411 0060 64736E00 		.ascii	"dsn\000"
 2412              	.LASF69:
 2413 0064 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2413      43313120 
 2413      352E342E 
 2413      31203230 
 2413      31363036 
 2414 0097 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2414      20726576 
 2414      6973696F 
 2414      6E203233 
 2414      37373135 
 2415 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2415      66756E63 
 2415      74696F6E 
 2415      2D736563 
 2415      74696F6E 
 2416              	.LASF72:
 2417 00f2 53535F52 		.ascii	"SS_Rise_Handler\000"
 2417      6973655F 
 2417      48616E64 
 2417      6C657200 
 2418              	.LASF18:
 2419 0102 6C6F6E67 		.ascii	"long double\000"
 2419      20646F75 
 2419      626C6500 
 2420              	.LASF42:
 2421 010e 64617461 		.ascii	"data\000"
 2421      00
 2422              	.LASF60:
 2423 0113 7370695F 		.ascii	"spi_trigger_reset\000"
 2423      74726967 
 2423      6765725F 
 2423      72657365 
 2423      7400
 2424              	.LASF22:
 2425 0125 65786563 		.ascii	"execution_state\000"
 2425      7574696F 
 2425      6E5F7374 
 2425      61746500 
 2426              	.LASF27:
 2427 0135 72656164 		.ascii	"read_spi\000"
 2427      5F737069 
 2427      00
 2428              	.LASF36:
 2429 013e 7365745F 		.ascii	"set_trigger_radius\000"
 2429      74726967 
 2429      6765725F 
 2429      72616469 
 2429      757300
 2430              	.LASF14:
 2431 0151 75696E74 		.ascii	"uint16\000"
 2431      313600
 2432              	.LASF63:
 2433 0158 50534F43 		.ascii	"PSOC_state\000"
 2433      5F737461 
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 53


 2433      746500
 2434              	.LASF66:
 2435 0163 74656D70 		.ascii	"temp1\000"
 2435      3100
 2436              	.LASF13:
 2437 0169 75696E74 		.ascii	"uint8\000"
 2437      3800
 2438              	.LASF49:
 2439 016f 52656164 		.ascii	"ReadWriteSPIM1\000"
 2439      57726974 
 2439      65535049 
 2439      4D3100
 2440              	.LASF51:
 2441 017e 52656164 		.ascii	"ReadWriteSPIM2\000"
 2441      57726974 
 2441      65535049 
 2441      4D3200
 2442              	.LASF40:
 2443 018d 496E7465 		.ascii	"InterpretCommand\000"
 2443      72707265 
 2443      74436F6D 
 2443      6D616E64 
 2443      00
 2444              	.LASF28:
 2445 019e 77726974 		.ascii	"write_spi\000"
 2445      655F7370 
 2445      6900
 2446              	.LASF15:
 2447 01a8 666C6F61 		.ascii	"float\000"
 2447      7400
 2448              	.LASF8:
 2449 01ae 6C6F6E67 		.ascii	"long long int\000"
 2449      206C6F6E 
 2449      6720696E 
 2449      7400
 2450              	.LASF58:
 2451 01bc 6932635F 		.ascii	"i2c_byte_count\000"
 2451      62797465 
 2451      5F636F75 
 2451      6E7400
 2452              	.LASF6:
 2453 01cb 6C6F6E67 		.ascii	"long int\000"
 2453      20696E74 
 2453      00
 2454              	.LASF64:
 2455 01d4 5250695F 		.ascii	"RPi_Command\000"
 2455      436F6D6D 
 2455      616E6400 
 2456              	.LASF25:
 2457 01e0 72656164 		.ascii	"read_gpio\000"
 2457      5F677069 
 2457      6F00
 2458              	.LASF12:
 2459 01ea 696E7433 		.ascii	"int32_t\000"
 2459      325F7400 
 2460              	.LASF4:
 2461 01f2 5F5F7569 		.ascii	"__uint8_t\000"
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 54


 2461      6E74385F 
 2461      7400
 2462              	.LASF32:
 2463 01fc 6164645F 		.ascii	"add_i2c_data\000"
 2463      6932635F 
 2463      64617461 
 2463      00
 2464              	.LASF21:
 2465 0209 6C697374 		.ascii	"listening_state\000"
 2465      656E696E 
 2465      675F7374 
 2465      61746500 
 2466              	.LASF23:
 2467 0219 73746174 		.ascii	"state\000"
 2467      6500
 2468              	.LASF26:
 2469 021f 77726974 		.ascii	"write_gpio\000"
 2469      655F6770 
 2469      696F00
 2470              	.LASF50:
 2471 022a 4368616E 		.ascii	"ChannelNumber\000"
 2471      6E656C4E 
 2471      756D6265 
 2471      7200
 2472              	.LASF1:
 2473 0238 756E7369 		.ascii	"unsigned char\000"
 2473      676E6564 
 2473      20636861 
 2473      7200
 2474              	.LASF35:
 2475 0246 72656164 		.ascii	"read_encoder\000"
 2475      5F656E63 
 2475      6F646572 
 2475      00
 2476              	.LASF24:
 2477 0253 6E6F5F63 		.ascii	"no_command\000"
 2477      6F6D6D61 
 2477      6E6400
 2478              	.LASF0:
 2479 025e 7369676E 		.ascii	"signed char\000"
 2479      65642063 
 2479      68617200 
 2480              	.LASF29:
 2481 026a 77726974 		.ascii	"write_pwm\000"
 2481      655F7077 
 2481      6D00
 2482              	.LASF9:
 2483 0274 6C6F6E67 		.ascii	"long long unsigned int\000"
 2483      206C6F6E 
 2483      6720756E 
 2483      7369676E 
 2483      65642069 
 2484              	.LASF10:
 2485 028b 756E7369 		.ascii	"unsigned int\000"
 2485      676E6564 
 2485      20696E74 
 2485      00
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 55


 2486              	.LASF34:
 2487 0298 7365745F 		.ascii	"set_spi_trigger\000"
 2487      7370695F 
 2487      74726967 
 2487      67657200 
 2488              	.LASF59:
 2489 02a8 7370695F 		.ascii	"spi_trigger_value\000"
 2489      74726967 
 2489      6765725F 
 2489      76616C75 
 2489      6500
 2490              	.LASF46:
 2491 02ba 70617261 		.ascii	"parameter\000"
 2491      6D657465 
 2491      7200
 2492              	.LASF55:
 2493 02c4 5250695F 		.ascii	"RPi_Data\000"
 2493      44617461 
 2493      00
 2494              	.LASF54:
 2495 02cd 5250695F 		.ascii	"RPi_Command_Data\000"
 2495      436F6D6D 
 2495      616E645F 
 2495      44617461 
 2495      00
 2496              	.LASF37:
 2497 02de 72656164 		.ascii	"read_firmware_date\000"
 2497      5F666972 
 2497      6D776172 
 2497      655F6461 
 2497      746500
 2498              	.LASF17:
 2499 02f1 63686172 		.ascii	"char\000"
 2499      00
 2500              	.LASF73:
 2501 02f6 6D61696E 		.ascii	"main\000"
 2501      00
 2502              	.LASF52:
 2503 02fb 52656164 		.ascii	"ReadEncoder\000"
 2503      456E636F 
 2503      64657200 
 2504              	.LASF62:
 2505 0307 6669726D 		.ascii	"firmwareVersionDate\000"
 2505      77617265 
 2505      56657273 
 2505      696F6E44 
 2505      61746500 
 2506              	.LASF3:
 2507 031b 73686F72 		.ascii	"short unsigned int\000"
 2507      7420756E 
 2507      7369676E 
 2507      65642069 
 2507      6E7400
 2508              	.LASF44:
 2509 032e 656E636F 		.ascii	"encoderValue\000"
 2509      64657256 
 2509      616C7565 
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 56


 2509      00
 2510              	.LASF47:
 2511 033b 6368616E 		.ascii	"channel\000"
 2511      6E656C00 
 2512              	.LASF61:
 2513 0343 7370695F 		.ascii	"spi_trigger_radius\000"
 2513      74726967 
 2513      6765725F 
 2513      72616469 
 2513      757300
 2514              	.LASF45:
 2515 0356 706F7274 		.ascii	"port\000"
 2515      00
 2516              	.LASF41:
 2517 035b 72706943 		.ascii	"rpiCommand\000"
 2517      6F6D6D61 
 2517      6E6400
 2518              	.LASF68:
 2519 0366 73687574 		.ascii	"shutdown_count\000"
 2519      646F776E 
 2519      5F636F75 
 2519      6E7400
 2520              	.LASF70:
 2521 0375 6D61696E 		.ascii	"main.c\000"
 2521      2E6300
 2522              	.LASF57:
 2523 037c 6932635F 		.ascii	"i2c_data_to_write\000"
 2523      64617461 
 2523      5F746F5F 
 2523      77726974 
 2523      6500
 2524              	.LASF7:
 2525 038e 6C6F6E67 		.ascii	"long unsigned int\000"
 2525      20756E73 
 2525      69676E65 
 2525      6420696E 
 2525      7400
 2526              	.LASF16:
 2527 03a0 646F7562 		.ascii	"double\000"
 2527      6C6500
 2528              	.LASF39:
 2529 03a7 69735250 		.ascii	"isRPiCommand\000"
 2529      69436F6D 
 2529      6D616E64 
 2529      00
 2530              	.LASF30:
 2531 03b4 72656164 		.ascii	"read_i2c\000"
 2531      5F693263 
 2531      00
 2532              	.LASF20:
 2533 03bd 69646C65 		.ascii	"idle_state\000"
 2533      5F737461 
 2533      746500
 2534              	.LASF56:
 2535 03c8 6932635F 		.ascii	"i2c_address\000"
 2535      61646472 
 2535      65737300 
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccSaEm3K.s 			page 57


 2536              	.LASF5:
 2537 03d4 5F5F696E 		.ascii	"__int32_t\000"
 2537      7433325F 
 2537      7400
 2538              	.LASF11:
 2539 03de 75696E74 		.ascii	"uint8_t\000"
 2539      385F7400 
 2540              	.LASF31:
 2541 03e6 77726974 		.ascii	"write_i2c\000"
 2541      655F6932 
 2541      6300
 2542              	.LASF48:
 2543 03f0 656E636F 		.ascii	"encoder\000"
 2543      64657200 
 2544              	.LASF67:
 2545 03f8 74656D70 		.ascii	"temp2\000"
 2545      3200
 2546              	.LASF53:
 2547 03fe 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2547      52784275 
 2547      66666572 
 2547      00
 2548              	.LASF38:
 2549 040b 636F6D6D 		.ascii	"command\000"
 2549      616E6400 
 2550              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
