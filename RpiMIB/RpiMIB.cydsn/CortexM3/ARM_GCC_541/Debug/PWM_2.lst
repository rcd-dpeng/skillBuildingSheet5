ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_2.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_2_initVar
  20              		.bss
  21              		.type	PWM_2_initVar, %object
  22              		.size	PWM_2_initVar, 1
  23              	PWM_2_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_2_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_2_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_2_Start, %function
  31              	PWM_2_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_2.c"
   1:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_2.c **** * File Name: PWM_2.c
   3:Generated_Source\PSoC5/PWM_2.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_2.c **** *
   5:Generated_Source\PSoC5/PWM_2.c **** * Description:
   6:Generated_Source\PSoC5/PWM_2.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_2.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_2.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_2.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_2.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_2.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_2.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_2.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_2.c **** *
  15:Generated_Source\PSoC5/PWM_2.c **** * Note:
  16:Generated_Source\PSoC5/PWM_2.c **** *
  17:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_2.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_2.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_2.c **** 
  24:Generated_Source\PSoC5/PWM_2.c **** #include "PWM_2.h"
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 2


  25:Generated_Source\PSoC5/PWM_2.c **** 
  26:Generated_Source\PSoC5/PWM_2.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_2.c **** #ifdef PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_2.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_2.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_2.c **** #endif /* PWM_2_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_2.c **** 
  32:Generated_Source\PSoC5/PWM_2.c **** uint8 PWM_2_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_2.c **** 
  34:Generated_Source\PSoC5/PWM_2.c **** 
  35:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Start
  37:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_2.c **** *
  39:Generated_Source\PSoC5/PWM_2.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_2.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_2.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_2.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_2.c **** *
  44:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_2.c **** *  None
  46:Generated_Source\PSoC5/PWM_2.c **** *
  47:Generated_Source\PSoC5/PWM_2.c **** * Return:
  48:Generated_Source\PSoC5/PWM_2.c **** *  None
  49:Generated_Source\PSoC5/PWM_2.c **** *
  50:Generated_Source\PSoC5/PWM_2.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_2.c **** *  PWM_2_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_2.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_2.c **** *
  54:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Start(void) 
  56:Generated_Source\PSoC5/PWM_2.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_2.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_2.c ****     if(PWM_2_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_2.c ****     {
  60:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_2_Init
  61:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_2.c ****     }
  63:Generated_Source\PSoC5/PWM_2.c ****     PWM_2_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_2_Enable
  64:Generated_Source\PSoC5/PWM_2.c **** 
  65:Generated_Source\PSoC5/PWM_2.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_2_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_2_Start, .-PWM_2_Start
  68              		.section	.text.PWM_2_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_2_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_2_Init, %function
  74              	PWM_2_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_2.c **** 
  67:Generated_Source\PSoC5/PWM_2.c **** 
  68:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Init
  70:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_2.c **** *
  72:Generated_Source\PSoC5/PWM_2.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_2.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_2.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_2.c **** *  PWM_2_Start().
  76:Generated_Source\PSoC5/PWM_2.c **** *
  77:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_2.c **** *  None
  79:Generated_Source\PSoC5/PWM_2.c **** *
  80:Generated_Source\PSoC5/PWM_2.c **** * Return:
  81:Generated_Source\PSoC5/PWM_2.c **** *  None
  82:Generated_Source\PSoC5/PWM_2.c **** *
  83:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Init(void) 
  85:Generated_Source\PSoC5/PWM_2.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction || PWM_2_UseControl)
  87:Generated_Source\PSoC5/PWM_2.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction || PWM_2_UseControl) */
  89:Generated_Source\PSoC5/PWM_2.c **** 
  90:Generated_Source\PSoC5/PWM_2.c ****     #if(!PWM_2_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UseStatus)
  92:Generated_Source\PSoC5/PWM_2.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_2.c ****             uint8 PWM_2_interruptState;
  94:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
  95:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_2.c **** 
  97:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_2.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CFG0_MODE;
  88              		.loc 1 99 0
  89 0006 294A     		ldr	r2, .L6
  90 0008 284B     		ldr	r3, .L6
  91 000a 1B78     		ldrb	r3, [r3]
  92 000c DBB2     		uxtb	r3, r3
  93 000e 43F00203 		orr	r3, r3, #2
  94 0012 DBB2     		uxtb	r3, r3
  95 0014 1370     		strb	r3, [r2]
 100:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL |= PWM_2_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_2.c **** 
 104:Generated_Source\PSoC5/PWM_2.c ****         ctrl = PWM_2_CONTROL3 & ((uint8 )(~PWM_2_CTRL_CMPMODE1_MASK));
  96              		.loc 1 104 0
  97 0016 264B     		ldr	r3, .L6+4
  98 0018 1B78     		ldrb	r3, [r3]
  99 001a DBB2     		uxtb	r3, r3
 100 001c 23F07003 		bic	r3, r3, #112
 101 0020 FB71     		strb	r3, [r7, #7]
 105:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL3 = ctrl | PWM_2_DEFAULT_COMPARE1_MODE;
 102              		.loc 1 105 0
 103 0022 234A     		ldr	r2, .L6+4
 104 0024 FB79     		ldrb	r3, [r7, #7]
 105 0026 43F05003 		orr	r3, r3, #80
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 106:Generated_Source\PSoC5/PWM_2.c **** 
 107:Generated_Source\PSoC5/PWM_2.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_RT1_MASK));
 108              		.loc 1 108 0
 109 002e 214A     		ldr	r2, .L6+8
 110 0030 204B     		ldr	r3, .L6+8
 111 0032 1B78     		ldrb	r3, [r3]
 112 0034 DBB2     		uxtb	r3, r3
 113 0036 23F03003 		bic	r3, r3, #48
 114 003a DBB2     		uxtb	r3, r3
 115 003c 1370     		strb	r3, [r2]
 109:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNC;
 116              		.loc 1 109 0
 117 003e 1D4A     		ldr	r2, .L6+8
 118 0040 1C4B     		ldr	r3, .L6+8
 119 0042 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 5


 120 0044 DBB2     		uxtb	r3, r3
 121 0046 43F03003 		orr	r3, r3, #48
 122 004a DBB2     		uxtb	r3, r3
 123 004c 1370     		strb	r3, [r2]
 110:Generated_Source\PSoC5/PWM_2.c **** 
 111:Generated_Source\PSoC5/PWM_2.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 &= ((uint8)(~PWM_2_SYNCDSI_MASK));
 124              		.loc 1 112 0
 125 004e 194A     		ldr	r2, .L6+8
 126 0050 184B     		ldr	r3, .L6+8
 127 0052 1B78     		ldrb	r3, [r3]
 128 0054 DBB2     		uxtb	r3, r3
 129 0056 23F00F03 		bic	r3, r3, #15
 130 005a DBB2     		uxtb	r3, r3
 131 005c 1370     		strb	r3, [r2]
 113:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_RT1 |= PWM_2_SYNCDSI_EN;
 132              		.loc 1 113 0
 133 005e 154A     		ldr	r2, .L6+8
 134 0060 144B     		ldr	r3, .L6+8
 135 0062 1B78     		ldrb	r3, [r3]
 136 0064 DBB2     		uxtb	r3, r3
 137 0066 43F00F03 		orr	r3, r3, #15
 138 006a DBB2     		uxtb	r3, r3
 139 006c 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/PWM_2.c **** 
 115:Generated_Source\PSoC5/PWM_2.c ****     #elif (PWM_2_UseControl)
 116:Generated_Source\PSoC5/PWM_2.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_2.c ****         ctrl = PWM_2_CONTROL & ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_2.c ****                 ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL = ctrl | PWM_2_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_2.c ****                                    PWM_2_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_2.c **** 
 123:Generated_Source\PSoC5/PWM_2.c ****     #if (!PWM_2_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_2.c ****         #else /* (PWM_2_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_2.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP0 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_AUX_CONTROLDP1 |= (PWM_2_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_2.c **** 
 133:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_WriteCounter(PWM_2_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (!PWM_2_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_2.c **** 
 136:Generated_Source\PSoC5/PWM_2.c ****     PWM_2_WritePeriod(PWM_2_INIT_PERIOD_VALUE);
 140              		.loc 1 136 0
 141 006e 41F28830 		movw	r0, #5000
 142 0072 FFF7FEFF 		bl	PWM_2_WritePeriod
 137:Generated_Source\PSoC5/PWM_2.c **** 
 138:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare(PWM_2_INIT_COMPARE_VALUE1);
 143              		.loc 1 139 0
 144 0076 40F2DC50 		movw	r0, #1500
 145 007a FFF7FEFF 		bl	PWM_2_WriteCompare
 140:Generated_Source\PSoC5/PWM_2.c ****         #else
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 6


 141:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare1(PWM_2_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteCompare2(PWM_2_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_2.c **** 
 145:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteKillTime(PWM_2_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_2.c **** 
 149:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_WriteDeadTime(PWM_2_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_2.c **** 
 153:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_INIT_INTERRUPTS_MODE);
 146              		.loc 1 154 0
 147 007e 0020     		movs	r0, #0
 148 0080 FFF7FEFF 		bl	PWM_2_SetInterruptMode
 155:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_2.c **** 
 157:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_2.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 149              		.loc 1 159 0
 150 0084 0C4A     		ldr	r2, .L6+12
 151 0086 0C4B     		ldr	r3, .L6+12
 152 0088 1B78     		ldrb	r3, [r3]
 153 008a DBB2     		uxtb	r3, r3
 154 008c 43F00203 		orr	r3, r3, #2
 155 0090 DBB2     		uxtb	r3, r3
 156 0092 1370     		strb	r3, [r2]
 160:Generated_Source\PSoC5/PWM_2.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL2 |= PWM_2_CTRL2_IRQ_SEL;
 157              		.loc 1 161 0
 158 0094 094A     		ldr	r2, .L6+16
 159 0096 094B     		ldr	r3, .L6+16
 160 0098 1B78     		ldrb	r3, [r3]
 161 009a DBB2     		uxtb	r3, r3
 162 009c 43F00103 		orr	r3, r3, #1
 163 00a0 DBB2     		uxtb	r3, r3
 164 00a2 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/PWM_2.c ****     #else
 163:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UseStatus)
 164:Generated_Source\PSoC5/PWM_2.c **** 
 165:Generated_Source\PSoC5/PWM_2.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_2.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_2.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_STATUS_AUX_CTRL |= PWM_2_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_2.c **** 
 171:Generated_Source\PSoC5/PWM_2.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_2.c ****             CyExitCriticalSection(PWM_2_interruptState);
 173:Generated_Source\PSoC5/PWM_2.c **** 
 174:Generated_Source\PSoC5/PWM_2.c ****             /* Clear the FIFO to enable the PWM_2_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_2.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseStatus) */
 178:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 7


 179:Generated_Source\PSoC5/PWM_2.c **** }
 165              		.loc 1 179 0
 166 00a4 00BF     		nop
 167 00a6 0837     		adds	r7, r7, #8
 168              		.cfi_def_cfa_offset 8
 169 00a8 BD46     		mov	sp, r7
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 00aa 80BD     		pop	{r7, pc}
 173              	.L7:
 174              		.align	2
 175              	.L6:
 176 00ac 0C4F0040 		.word	1073762060
 177 00b0 0E4F0040 		.word	1073762062
 178 00b4 174F0040 		.word	1073762071
 179 00b8 A3430040 		.word	1073759139
 180 00bc 0D4F0040 		.word	1073762061
 181              		.cfi_endproc
 182              	.LFE1:
 183              		.size	PWM_2_Init, .-PWM_2_Init
 184              		.section	.text.PWM_2_Enable,"ax",%progbits
 185              		.align	2
 186              		.global	PWM_2_Enable
 187              		.thumb
 188              		.thumb_func
 189              		.type	PWM_2_Enable, %function
 190              	PWM_2_Enable:
 191              	.LFB2:
 180:Generated_Source\PSoC5/PWM_2.c **** 
 181:Generated_Source\PSoC5/PWM_2.c **** 
 182:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Enable
 184:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_2.c **** *
 186:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_2.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_2.c **** *
 189:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_2.c **** *  None
 191:Generated_Source\PSoC5/PWM_2.c **** *
 192:Generated_Source\PSoC5/PWM_2.c **** * Return:
 193:Generated_Source\PSoC5/PWM_2.c **** *  None
 194:Generated_Source\PSoC5/PWM_2.c **** *
 195:Generated_Source\PSoC5/PWM_2.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_2.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_2.c **** *
 198:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Enable(void) 
 200:Generated_Source\PSoC5/PWM_2.c **** {
 192              		.loc 1 200 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 8


 200 0002 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_2.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE |= PWM_2_BLOCK_EN_MASK;
 202              		.loc 1 203 0
 203 0004 0D4A     		ldr	r2, .L9
 204 0006 0D4B     		ldr	r3, .L9
 205 0008 1B78     		ldrb	r3, [r3]
 206 000a DBB2     		uxtb	r3, r3
 207 000c 43F00203 		orr	r3, r3, #2
 208 0010 DBB2     		uxtb	r3, r3
 209 0012 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE |= PWM_2_BLOCK_STBY_EN_MASK;
 210              		.loc 1 204 0
 211 0014 0A4A     		ldr	r2, .L9+4
 212 0016 0A4B     		ldr	r3, .L9+4
 213 0018 1B78     		ldrb	r3, [r3]
 214 001a DBB2     		uxtb	r3, r3
 215 001c 43F00203 		orr	r3, r3, #2
 216 0020 DBB2     		uxtb	r3, r3
 217 0022 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_2.c **** 
 207:Generated_Source\PSoC5/PWM_2.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL |= PWM_2_CTRL_ENABLE;
 218              		.loc 1 209 0
 219 0024 074A     		ldr	r2, .L9+8
 220 0026 074B     		ldr	r3, .L9+8
 221 0028 1B78     		ldrb	r3, [r3]
 222 002a DBB2     		uxtb	r3, r3
 223 002c 43F00103 		orr	r3, r3, #1
 224 0030 DBB2     		uxtb	r3, r3
 225 0032 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_2.c **** }
 226              		.loc 1 211 0
 227 0034 00BF     		nop
 228 0036 BD46     		mov	sp, r7
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0038 80BC     		pop	{r7}
 232              		.cfi_restore 7
 233              		.cfi_def_cfa_offset 0
 234 003a 7047     		bx	lr
 235              	.L10:
 236              		.align	2
 237              	.L9:
 238 003c A3430040 		.word	1073759139
 239 0040 B3430040 		.word	1073759155
 240 0044 0C4F0040 		.word	1073762060
 241              		.cfi_endproc
 242              	.LFE2:
 243              		.size	PWM_2_Enable, .-PWM_2_Enable
 244              		.section	.text.PWM_2_Stop,"ax",%progbits
 245              		.align	2
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 9


 246              		.global	PWM_2_Stop
 247              		.thumb
 248              		.thumb_func
 249              		.type	PWM_2_Stop, %function
 250              	PWM_2_Stop:
 251              	.LFB3:
 212:Generated_Source\PSoC5/PWM_2.c **** 
 213:Generated_Source\PSoC5/PWM_2.c **** 
 214:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_Stop
 216:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_2.c **** *
 218:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_2.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_2.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_2.c **** *
 222:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_2.c **** *  None
 224:Generated_Source\PSoC5/PWM_2.c **** *
 225:Generated_Source\PSoC5/PWM_2.c **** * Return:
 226:Generated_Source\PSoC5/PWM_2.c **** *  None
 227:Generated_Source\PSoC5/PWM_2.c **** *
 228:Generated_Source\PSoC5/PWM_2.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_2.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_2.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_2.c **** *
 232:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_Stop(void) 
 234:Generated_Source\PSoC5/PWM_2.c **** {
 252              		.loc 1 234 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0000 80B4     		push	{r7}
 258              		.cfi_def_cfa_offset 4
 259              		.cfi_offset 7, -4
 260 0002 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseControl || PWM_2_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_ENABLE));
 262              		.loc 1 236 0
 263 0004 0D4A     		ldr	r2, .L12
 264 0006 0D4B     		ldr	r3, .L12
 265 0008 1B78     		ldrb	r3, [r3]
 266 000a DBB2     		uxtb	r3, r3
 267 000c 23F00103 		bic	r3, r3, #1
 268 0010 DBB2     		uxtb	r3, r3
 269 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UseControl || PWM_2_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_2.c **** 
 239:Generated_Source\PSoC5/PWM_2.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_ENABLE &= ((uint8)(~PWM_2_BLOCK_EN_MASK));
 270              		.loc 1 241 0
 271 0014 0A4A     		ldr	r2, .L12+4
 272 0016 0A4B     		ldr	r3, .L12+4
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 10


 273 0018 1B78     		ldrb	r3, [r3]
 274 001a DBB2     		uxtb	r3, r3
 275 001c 23F00203 		bic	r3, r3, #2
 276 0020 DBB2     		uxtb	r3, r3
 277 0022 1370     		strb	r3, [r2]
 242:Generated_Source\PSoC5/PWM_2.c ****         PWM_2_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_2_BLOCK_STBY_EN_MASK));
 278              		.loc 1 242 0
 279 0024 074A     		ldr	r2, .L12+8
 280 0026 074B     		ldr	r3, .L12+8
 281 0028 1B78     		ldrb	r3, [r3]
 282 002a DBB2     		uxtb	r3, r3
 283 002c 23F00203 		bic	r3, r3, #2
 284 0030 DBB2     		uxtb	r3, r3
 285 0032 1370     		strb	r3, [r2]
 243:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_2.c **** }
 286              		.loc 1 244 0
 287 0034 00BF     		nop
 288 0036 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 0038 80BC     		pop	{r7}
 292              		.cfi_restore 7
 293              		.cfi_def_cfa_offset 0
 294 003a 7047     		bx	lr
 295              	.L13:
 296              		.align	2
 297              	.L12:
 298 003c 0C4F0040 		.word	1073762060
 299 0040 A3430040 		.word	1073759139
 300 0044 B3430040 		.word	1073759155
 301              		.cfi_endproc
 302              	.LFE3:
 303              		.size	PWM_2_Stop, .-PWM_2_Stop
 304              		.section	.text.PWM_2_SetCompareMode,"ax",%progbits
 305              		.align	2
 306              		.global	PWM_2_SetCompareMode
 307              		.thumb
 308              		.thumb_func
 309              		.type	PWM_2_SetCompareMode, %function
 310              	PWM_2_SetCompareMode:
 311              	.LFB4:
 245:Generated_Source\PSoC5/PWM_2.c **** 
 246:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_2.c **** 
 249:Generated_Source\PSoC5/PWM_2.c **** 
 250:Generated_Source\PSoC5/PWM_2.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode
 252:Generated_Source\PSoC5/PWM_2.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_2.c ****         *
 254:Generated_Source\PSoC5/PWM_2.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_2.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_2.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_2.c ****         *
 258:Generated_Source\PSoC5/PWM_2.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 11


 260:Generated_Source\PSoC5/PWM_2.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_2.c ****         *
 262:Generated_Source\PSoC5/PWM_2.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_2.c ****         *  None
 264:Generated_Source\PSoC5/PWM_2.c ****         *
 265:Generated_Source\PSoC5/PWM_2.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_2.c ****         void PWM_2_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_2.c ****         {
 312              		.loc 1 267 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 16
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 7, -4
 320 0002 85B0     		sub	sp, sp, #20
 321              		.cfi_def_cfa_offset 24
 322 0004 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 324 0006 0346     		mov	r3, r0
 325 0008 FB71     		strb	r3, [r7, #7]
 268:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_2.c **** 
 270:Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SH
 326              		.loc 1 271 0
 327 000a FB79     		ldrb	r3, [r7, #7]
 328 000c 1B01     		lsls	r3, r3, #4
 329 000e FB73     		strb	r3, [r7, #15]
 272:Generated_Source\PSoC5/PWM_2.c ****                 #else
 273:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_2.c **** 
 276:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL3 &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 330              		.loc 1 276 0
 331 0010 0A4A     		ldr	r2, .L15
 332 0012 0A4B     		ldr	r3, .L15
 333 0014 1B78     		ldrb	r3, [r3]
 334 0016 DBB2     		uxtb	r3, r3
 335 0018 23F07003 		bic	r3, r3, #112
 336 001c DBB2     		uxtb	r3, r3
 337 001e 1370     		strb	r3, [r2]
 277:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL3 |= comparemodemasked;
 338              		.loc 1 277 0
 339 0020 0649     		ldr	r1, .L15
 340 0022 064B     		ldr	r3, .L15
 341 0024 1B78     		ldrb	r3, [r3]
 342 0026 DAB2     		uxtb	r2, r3
 343 0028 FB7B     		ldrb	r3, [r7, #15]
 344 002a 1343     		orrs	r3, r3, r2
 345 002c DBB2     		uxtb	r3, r3
 346 002e 0B70     		strb	r3, [r1]
 278:Generated_Source\PSoC5/PWM_2.c **** 
 279:Generated_Source\PSoC5/PWM_2.c ****             #elif (PWM_2_UseControl)
 280:Generated_Source\PSoC5/PWM_2.c **** 
 281:Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 12


 282:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_2.c ****                                                 PWM_2_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_2.c ****                 #else
 285:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode1masked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_2.c **** 
 288:Generated_Source\PSoC5/PWM_2.c ****                 #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_2.c ****                                                PWM_2_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_2.c ****                 #else
 292:Generated_Source\PSoC5/PWM_2.c ****                     uint8 comparemode2masked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_2.c ****                 #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_2.c **** 
 295:Generated_Source\PSoC5/PWM_2.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~(PWM_2_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_2.c ****                                             PWM_2_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_2.c **** 
 300:Generated_Source\PSoC5/PWM_2.c ****             #else
 301:Generated_Source\PSoC5/PWM_2.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_2.c ****         }
 347              		.loc 1 303 0
 348 0030 00BF     		nop
 349 0032 1437     		adds	r7, r7, #20
 350              		.cfi_def_cfa_offset 4
 351 0034 BD46     		mov	sp, r7
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 0036 80BC     		pop	{r7}
 355              		.cfi_restore 7
 356              		.cfi_def_cfa_offset 0
 357 0038 7047     		bx	lr
 358              	.L16:
 359 003a 00BF     		.align	2
 360              	.L15:
 361 003c 0E4F0040 		.word	1073762062
 362              		.cfi_endproc
 363              	.LFE4:
 364              		.size	PWM_2_SetCompareMode, .-PWM_2_SetCompareMode
 365              		.section	.text.PWM_2_WritePeriod,"ax",%progbits
 366              		.align	2
 367              		.global	PWM_2_WritePeriod
 368              		.thumb
 369              		.thumb_func
 370              		.type	PWM_2_WritePeriod, %function
 371              	PWM_2_WritePeriod:
 372              	.LFB5:
 304:Generated_Source\PSoC5/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_2.c **** 
 306:Generated_Source\PSoC5/PWM_2.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_2.c **** 
 308:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_2.c **** 
 310:Generated_Source\PSoC5/PWM_2.c **** 
 311:Generated_Source\PSoC5/PWM_2.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_2.c ****         * Function Name: PWM_2_SetCompareMode1
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 13


 313:Generated_Source\PSoC5/PWM_2.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_2.c ****         *
 315:Generated_Source\PSoC5/PWM_2.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_2.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_2.c ****         *
 318:Generated_Source\PSoC5/PWM_2.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_2.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_2.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_2.c ****         *
 322:Generated_Source\PSoC5/PWM_2.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_2.c ****         *  None
 324:Generated_Source\PSoC5/PWM_2.c ****         *
 325:Generated_Source\PSoC5/PWM_2.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_2.c ****         void PWM_2_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_2.c ****         {
 328:Generated_Source\PSoC5/PWM_2.c ****             #if(0 != PWM_2_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_2.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_2.c ****                                            PWM_2_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_2.c ****             #else
 332:Generated_Source\PSoC5/PWM_2.c ****                 uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (0 != PWM_2_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_2.c **** 
 335:Generated_Source\PSoC5/PWM_2.c ****             #if (PWM_2_UseControl)
 336:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_UseControl) */
 339:Generated_Source\PSoC5/PWM_2.c ****         }
 340:Generated_Source\PSoC5/PWM_2.c ****     #endif /* PWM_2_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_2.c **** 
 342:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_2.c **** 
 344:Generated_Source\PSoC5/PWM_2.c **** 
 345:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_2.c ****     *
 349:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_2.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_2.c ****     *
 352:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_2.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_2.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_2.c ****     *
 356:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_2.c ****     *  None
 358:Generated_Source\PSoC5/PWM_2.c ****     *
 359:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_2.c ****     {
 362:Generated_Source\PSoC5/PWM_2.c **** 
 363:Generated_Source\PSoC5/PWM_2.c ****         #if(0 != PWM_2_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_2.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_2_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_2.c ****                                                  PWM_2_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_2.c ****         #else
 367:Generated_Source\PSoC5/PWM_2.c ****             uint8 comparemodemasked = comparemode & PWM_2_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (0 != PWM_2_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_2.c **** 
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 14


 370:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_UseControl)
 371:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL &= ((uint8)(~PWM_2_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UseControl) */
 374:Generated_Source\PSoC5/PWM_2.c ****     }
 375:Generated_Source\PSoC5/PWM_2.c ****     #endif /*PWM_2_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_2.c **** 
 377:Generated_Source\PSoC5/PWM_2.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_2.c **** 
 379:Generated_Source\PSoC5/PWM_2.c **** 
 380:Generated_Source\PSoC5/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_2.c **** 
 382:Generated_Source\PSoC5/PWM_2.c **** 
 383:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCounter
 385:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_2.c ****     *
 387:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_2.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_2.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_2.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_2.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_2.c ****     *
 393:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_2.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_2.c ****     *
 396:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_2.c ****     *  None
 398:Generated_Source\PSoC5/PWM_2.c ****     *
 399:Generated_Source\PSoC5/PWM_2.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_2.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_2.c ****     *
 402:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_2.c ****                                        
 405:Generated_Source\PSoC5/PWM_2.c ****     {
 406:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG16(PWM_2_COUNTER_LSB_PTR, counter);
 407:Generated_Source\PSoC5/PWM_2.c ****     }
 408:Generated_Source\PSoC5/PWM_2.c **** 
 409:Generated_Source\PSoC5/PWM_2.c **** 
 410:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCounter
 412:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_2.c ****     *
 414:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_2.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_2.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_2.c ****     *
 418:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_2.c ****     *  None
 420:Generated_Source\PSoC5/PWM_2.c ****     *
 421:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_2.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_2.c ****     *
 424:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_2.c ****     {
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 15


 427:Generated_Source\PSoC5/PWM_2.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_2.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_2.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_2.c ****           (void)CY_GET_REG8(PWM_2_COUNTERCAP_LSB_PTR_8BIT);
 431:Generated_Source\PSoC5/PWM_2.c **** 
 432:Generated_Source\PSoC5/PWM_2.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_CAPTURE_LSB_PTR));
 434:Generated_Source\PSoC5/PWM_2.c ****     }
 435:Generated_Source\PSoC5/PWM_2.c **** 
 436:Generated_Source\PSoC5/PWM_2.c ****     #if (PWM_2_UseStatus)
 437:Generated_Source\PSoC5/PWM_2.c **** 
 438:Generated_Source\PSoC5/PWM_2.c **** 
 439:Generated_Source\PSoC5/PWM_2.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_2.c ****         * Function Name: PWM_2_ClearFIFO
 441:Generated_Source\PSoC5/PWM_2.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_2.c ****         *
 443:Generated_Source\PSoC5/PWM_2.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_2.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_2.c ****         *
 446:Generated_Source\PSoC5/PWM_2.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_2.c ****         *  None
 448:Generated_Source\PSoC5/PWM_2.c ****         *
 449:Generated_Source\PSoC5/PWM_2.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_2.c ****         *  None
 451:Generated_Source\PSoC5/PWM_2.c ****         *
 452:Generated_Source\PSoC5/PWM_2.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_2.c ****         void PWM_2_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_2.c ****         {
 455:Generated_Source\PSoC5/PWM_2.c ****             while(0u != (PWM_2_ReadStatusRegister() & PWM_2_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_2.c ****             {
 457:Generated_Source\PSoC5/PWM_2.c ****                 (void)PWM_2_ReadCapture();
 458:Generated_Source\PSoC5/PWM_2.c ****             }
 459:Generated_Source\PSoC5/PWM_2.c ****         }
 460:Generated_Source\PSoC5/PWM_2.c **** 
 461:Generated_Source\PSoC5/PWM_2.c ****     #endif /* PWM_2_UseStatus */
 462:Generated_Source\PSoC5/PWM_2.c **** 
 463:Generated_Source\PSoC5/PWM_2.c **** #endif /* !PWM_2_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_2.c **** 
 465:Generated_Source\PSoC5/PWM_2.c **** 
 466:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_WritePeriod
 468:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_2.c **** *
 470:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_2.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_2.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_2.c **** *
 474:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_2.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_2.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_2.c **** *
 478:Generated_Source\PSoC5/PWM_2.c **** * Return:
 479:Generated_Source\PSoC5/PWM_2.c **** *  None
 480:Generated_Source\PSoC5/PWM_2.c **** *
 481:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_2.c **** void PWM_2_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_2.c **** {
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 16


 373              		.loc 1 483 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 83B0     		sub	sp, sp, #12
 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 385 0006 0346     		mov	r3, r0
 386 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG16(PWM_2_PERIOD_LSB_PTR, (uint16)period);
 387              		.loc 1 485 0
 388 000a 044A     		ldr	r2, .L18
 389 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 390 000e 1380     		strh	r3, [r2]	@ movhi
 486:Generated_Source\PSoC5/PWM_2.c ****     #else
 487:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG16(PWM_2_PERIOD_LSB_PTR, period);
 488:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_2.c **** }
 391              		.loc 1 489 0
 392 0010 00BF     		nop
 393 0012 0C37     		adds	r7, r7, #12
 394              		.cfi_def_cfa_offset 4
 395 0014 BD46     		mov	sp, r7
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 0016 80BC     		pop	{r7}
 399              		.cfi_restore 7
 400              		.cfi_def_cfa_offset 0
 401 0018 7047     		bx	lr
 402              	.L19:
 403 001a 00BF     		.align	2
 404              	.L18:
 405 001c 104F0040 		.word	1073762064
 406              		.cfi_endproc
 407              	.LFE5:
 408              		.size	PWM_2_WritePeriod, .-PWM_2_WritePeriod
 409              		.section	.text.PWM_2_WriteCompare,"ax",%progbits
 410              		.align	2
 411              		.global	PWM_2_WriteCompare
 412              		.thumb
 413              		.thumb_func
 414              		.type	PWM_2_WriteCompare, %function
 415              	PWM_2_WriteCompare:
 416              	.LFB6:
 490:Generated_Source\PSoC5/PWM_2.c **** 
 491:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_2.c **** 
 493:Generated_Source\PSoC5/PWM_2.c **** 
 494:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare
 496:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 17


 497:Generated_Source\PSoC5/PWM_2.c ****     *
 498:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_2.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_2.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_2.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_2.c ****     *
 505:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_2.c ****     *
 508:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_2.c ****     *  None
 510:Generated_Source\PSoC5/PWM_2.c ****     *
 511:Generated_Source\PSoC5/PWM_2.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_2.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_2.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_2.c ****     *
 515:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_2.c ****                                        
 518:Generated_Source\PSoC5/PWM_2.c ****     {
 417              		.loc 1 518 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 7, -4
 425 0002 83B0     		sub	sp, sp, #12
 426              		.cfi_def_cfa_offset 16
 427 0004 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 429 0006 0346     		mov	r3, r0
 430 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 431              		.loc 1 520 0
 432 000a 044A     		ldr	r2, .L21
 433 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 434 000e 1380     		strh	r3, [r2]	@ movhi
 521:Generated_Source\PSoC5/PWM_2.c ****         #else
 522:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_2.c **** 
 525:Generated_Source\PSoC5/PWM_2.c ****         #if (PWM_2_PWMMode == PWM_2__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_2.c ****                 CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_2.c ****             #else
 529:Generated_Source\PSoC5/PWM_2.c ****                 CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_PWMMode == PWM_2__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_2.c ****     }
 435              		.loc 1 532 0
 436 0010 00BF     		nop
 437 0012 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 18


 438              		.cfi_def_cfa_offset 4
 439 0014 BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 0016 80BC     		pop	{r7}
 443              		.cfi_restore 7
 444              		.cfi_def_cfa_offset 0
 445 0018 7047     		bx	lr
 446              	.L22:
 447 001a 00BF     		.align	2
 448              	.L21:
 449 001c 124F0040 		.word	1073762066
 450              		.cfi_endproc
 451              	.LFE6:
 452              		.size	PWM_2_WriteCompare, .-PWM_2_WriteCompare
 453              		.section	.text.PWM_2_SetInterruptMode,"ax",%progbits
 454              		.align	2
 455              		.global	PWM_2_SetInterruptMode
 456              		.thumb
 457              		.thumb_func
 458              		.type	PWM_2_SetInterruptMode, %function
 459              	PWM_2_SetInterruptMode:
 460              	.LFB7:
 533:Generated_Source\PSoC5/PWM_2.c **** 
 534:Generated_Source\PSoC5/PWM_2.c **** 
 535:Generated_Source\PSoC5/PWM_2.c **** #else
 536:Generated_Source\PSoC5/PWM_2.c **** 
 537:Generated_Source\PSoC5/PWM_2.c **** 
 538:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare1
 540:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_2.c ****     *
 542:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_2.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_2.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_2.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_2.c ****     *
 548:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_2.c ****     *
 551:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_2.c ****     *  None
 553:Generated_Source\PSoC5/PWM_2.c ****     *
 554:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_2.c ****                                         
 557:Generated_Source\PSoC5/PWM_2.c ****     {
 558:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_2.c ****         #else
 561:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_2.c ****     }
 564:Generated_Source\PSoC5/PWM_2.c **** 
 565:Generated_Source\PSoC5/PWM_2.c **** 
 566:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 19


 567:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteCompare2
 568:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_2.c ****     *
 570:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_2.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_2.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_2.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_2.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_2.c ****     *
 577:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_2.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_2.c ****     *
 580:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_2.c ****     *  None
 582:Generated_Source\PSoC5/PWM_2.c ****     *
 583:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_2.c ****                                         
 586:Generated_Source\PSoC5/PWM_2.c ****     {
 587:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_2.c ****         #else
 590:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG16(PWM_2_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_2.c ****     }
 593:Generated_Source\PSoC5/PWM_2.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_2.c **** 
 595:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_2.c **** 
 597:Generated_Source\PSoC5/PWM_2.c **** 
 598:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_2.c ****     *
 602:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_2.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_2.c ****     *
 605:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_2.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_2.c ****     *
 608:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_2.c ****     *  None
 610:Generated_Source\PSoC5/PWM_2.c ****     *
 611:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_2.c ****     {
 614:Generated_Source\PSoC5/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_2.c ****             CY_SET_REG8(PWM_2_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_2.c ****         #else
 618:Generated_Source\PSoC5/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_2.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_2.c ****             PWM_2_DEADBAND_COUNT &= ((uint8)(~PWM_2_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_2.c **** 
 622:Generated_Source\PSoC5/PWM_2.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 20


 624:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_2_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_2.c ****                                                     PWM_2_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_2.c ****             #else
 627:Generated_Source\PSoC5/PWM_2.c ****                 PWM_2_DEADBAND_COUNT |= deadtime & PWM_2_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_2.c **** 
 630:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_2.c ****     }
 632:Generated_Source\PSoC5/PWM_2.c **** 
 633:Generated_Source\PSoC5/PWM_2.c **** 
 634:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_2.c ****     *
 638:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_2.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_2.c ****     *
 641:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_2.c ****     *  None
 643:Generated_Source\PSoC5/PWM_2.c ****     *
 644:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_2.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_2.c ****     *
 647:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_2.c ****     {
 650:Generated_Source\PSoC5/PWM_2.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_2.c ****         #if(!PWM_2_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_2.c ****             return (CY_GET_REG8(PWM_2_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_2.c ****         #else
 654:Generated_Source\PSoC5/PWM_2.c **** 
 655:Generated_Source\PSoC5/PWM_2.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_2.c ****             #if(PWM_2_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_2.c ****                 return ((uint8)(((uint8)(PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_2.c ****                                                                            PWM_2_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_2.c ****             #else
 660:Generated_Source\PSoC5/PWM_2.c ****                 return (PWM_2_DEADBAND_COUNT & PWM_2_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_2.c ****             #endif /* (PWM_2_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (!PWM_2_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_2.c ****     }
 664:Generated_Source\PSoC5/PWM_2.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_2.c **** 
 666:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseStatus || PWM_2_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_2.c **** 
 668:Generated_Source\PSoC5/PWM_2.c **** 
 669:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_2.c ****     *
 673:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_2.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_2.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_2.c ****     *
 677:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_2.c ****     *
 680:Generated_Source\PSoC5/PWM_2.c ****     * Return:
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 21


 681:Generated_Source\PSoC5/PWM_2.c ****     *  None
 682:Generated_Source\PSoC5/PWM_2.c ****     *
 683:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_2.c ****     {
 461              		.loc 1 685 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 7, -4
 469 0002 83B0     		sub	sp, sp, #12
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 0346     		mov	r3, r0
 474 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG8(PWM_2_STATUS_MASK_PTR, interruptMode);
 475              		.loc 1 686 0
 476 000a 044A     		ldr	r2, .L24
 477 000c FB79     		ldrb	r3, [r7, #7]
 478 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM_2.c ****     }
 479              		.loc 1 687 0
 480 0010 00BF     		nop
 481 0012 0C37     		adds	r7, r7, #12
 482              		.cfi_def_cfa_offset 4
 483 0014 BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 0016 80BC     		pop	{r7}
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0018 7047     		bx	lr
 490              	.L25:
 491 001a 00BF     		.align	2
 492              	.L24:
 493 001c 0F4F0040 		.word	1073762063
 494              		.cfi_endproc
 495              	.LFE7:
 496              		.size	PWM_2_SetInterruptMode, .-PWM_2_SetInterruptMode
 497              		.section	.text.PWM_2_ReadStatusRegister,"ax",%progbits
 498              		.align	2
 499              		.global	PWM_2_ReadStatusRegister
 500              		.thumb
 501              		.thumb_func
 502              		.type	PWM_2_ReadStatusRegister, %function
 503              	PWM_2_ReadStatusRegister:
 504              	.LFB8:
 688:Generated_Source\PSoC5/PWM_2.c **** 
 689:Generated_Source\PSoC5/PWM_2.c **** 
 690:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_2.c ****     *
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 22


 694:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_2.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_2.c ****     *
 697:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_2.c ****     *  None
 699:Generated_Source\PSoC5/PWM_2.c ****     *
 700:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_2.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_2.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_2.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_2.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_2.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_2.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_2.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_2.c ****     *
 710:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_2.c ****     {
 505              		.loc 1 712 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510 0000 80B4     		push	{r7}
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG8(PWM_2_STATUS_PTR));
 515              		.loc 1 713 0
 516 0004 034B     		ldr	r3, .L28
 517 0006 1B78     		ldrb	r3, [r3]
 518 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM_2.c ****     }
 519              		.loc 1 714 0
 520 000a 1846     		mov	r0, r3
 521 000c BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 000e 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0010 7047     		bx	lr
 528              	.L29:
 529 0012 00BF     		.align	2
 530              	.L28:
 531 0014 0F4F0040 		.word	1073762063
 532              		.cfi_endproc
 533              	.LFE8:
 534              		.size	PWM_2_ReadStatusRegister, .-PWM_2_ReadStatusRegister
 535              		.section	.text.PWM_2_ReadControlRegister,"ax",%progbits
 536              		.align	2
 537              		.global	PWM_2_ReadControlRegister
 538              		.thumb
 539              		.thumb_func
 540              		.type	PWM_2_ReadControlRegister, %function
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 23


 541              	PWM_2_ReadControlRegister:
 542              	.LFB9:
 715:Generated_Source\PSoC5/PWM_2.c **** 
 716:Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseStatus || PWM_2_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_2.c **** 
 718:Generated_Source\PSoC5/PWM_2.c **** 
 719:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseControl)
 720:Generated_Source\PSoC5/PWM_2.c **** 
 721:Generated_Source\PSoC5/PWM_2.c **** 
 722:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_2.c ****     *
 726:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_2.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_2.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_2.c ****     *
 730:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_2.c ****     *  None
 732:Generated_Source\PSoC5/PWM_2.c ****     *
 733:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_2.c ****     *
 736:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_2.c ****     uint8 PWM_2_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_2.c ****     {
 543              		.loc 1 738 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 83B0     		sub	sp, sp, #12
 552              		.cfi_def_cfa_offset 16
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_2.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_2.c **** 
 741:Generated_Source\PSoC5/PWM_2.c ****         result = CY_GET_REG8(PWM_2_CONTROL_PTR);
 555              		.loc 1 741 0
 556 0006 044B     		ldr	r3, .L32
 557 0008 1B78     		ldrb	r3, [r3]
 558 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_2.c ****         return (result);
 559              		.loc 1 742 0
 560 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_2.c ****     }
 561              		.loc 1 743 0
 562 000e 1846     		mov	r0, r3
 563 0010 0C37     		adds	r7, r7, #12
 564              		.cfi_def_cfa_offset 4
 565 0012 BD46     		mov	sp, r7
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 0014 80BC     		pop	{r7}
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 24


 569              		.cfi_restore 7
 570              		.cfi_def_cfa_offset 0
 571 0016 7047     		bx	lr
 572              	.L33:
 573              		.align	2
 574              	.L32:
 575 0018 0C4F0040 		.word	1073762060
 576              		.cfi_endproc
 577              	.LFE9:
 578              		.size	PWM_2_ReadControlRegister, .-PWM_2_ReadControlRegister
 579              		.section	.text.PWM_2_WriteControlRegister,"ax",%progbits
 580              		.align	2
 581              		.global	PWM_2_WriteControlRegister
 582              		.thumb
 583              		.thumb_func
 584              		.type	PWM_2_WriteControlRegister, %function
 585              	PWM_2_WriteControlRegister:
 586              	.LFB10:
 744:Generated_Source\PSoC5/PWM_2.c **** 
 745:Generated_Source\PSoC5/PWM_2.c **** 
 746:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_2.c ****     *
 750:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_2.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_2.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_2.c ****     *
 754:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_2.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_2.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_2.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_2.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_2.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_2.c ****     *
 761:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_2.c ****     *  None
 763:Generated_Source\PSoC5/PWM_2.c ****     *
 764:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_2.c ****     void PWM_2_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_2.c ****     {
 587              		.loc 1 766 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 83B0     		sub	sp, sp, #12
 596              		.cfi_def_cfa_offset 16
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599 0006 0346     		mov	r3, r0
 600 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_2.c ****         CY_SET_REG8(PWM_2_CONTROL_PTR, control);
 601              		.loc 1 767 0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 25


 602 000a 044A     		ldr	r2, .L35
 603 000c FB79     		ldrb	r3, [r7, #7]
 604 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_2.c ****     }
 605              		.loc 1 768 0
 606 0010 00BF     		nop
 607 0012 0C37     		adds	r7, r7, #12
 608              		.cfi_def_cfa_offset 4
 609 0014 BD46     		mov	sp, r7
 610              		.cfi_def_cfa_register 13
 611              		@ sp needed
 612 0016 80BC     		pop	{r7}
 613              		.cfi_restore 7
 614              		.cfi_def_cfa_offset 0
 615 0018 7047     		bx	lr
 616              	.L36:
 617 001a 00BF     		.align	2
 618              	.L35:
 619 001c 0C4F0040 		.word	1073762060
 620              		.cfi_endproc
 621              	.LFE10:
 622              		.size	PWM_2_WriteControlRegister, .-PWM_2_WriteControlRegister
 623              		.section	.text.PWM_2_ReadCompare,"ax",%progbits
 624              		.align	2
 625              		.global	PWM_2_ReadCompare
 626              		.thumb
 627              		.thumb_func
 628              		.type	PWM_2_ReadCompare, %function
 629              	PWM_2_ReadCompare:
 630              	.LFB11:
 769:Generated_Source\PSoC5/PWM_2.c **** 
 770:Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseControl) */
 771:Generated_Source\PSoC5/PWM_2.c **** 
 772:Generated_Source\PSoC5/PWM_2.c **** 
 773:Generated_Source\PSoC5/PWM_2.c **** #if (!PWM_2_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_2.c **** 
 775:Generated_Source\PSoC5/PWM_2.c **** 
 776:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCapture
 778:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_2.c ****     *
 780:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_2.c ****     *
 783:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_2.c ****     *  None
 785:Generated_Source\PSoC5/PWM_2.c ****     *
 786:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_2.c ****     *
 789:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_2.c ****     {
 792:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_CAPTURE_LSB_PTR));
 793:Generated_Source\PSoC5/PWM_2.c ****     }
 794:Generated_Source\PSoC5/PWM_2.c **** 
 795:Generated_Source\PSoC5/PWM_2.c **** #endif /* (!PWM_2_UsingFixedFunction) */
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 26


 796:Generated_Source\PSoC5/PWM_2.c **** 
 797:Generated_Source\PSoC5/PWM_2.c **** 
 798:Generated_Source\PSoC5/PWM_2.c **** #if (PWM_2_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_2.c **** 
 800:Generated_Source\PSoC5/PWM_2.c **** 
 801:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare
 803:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_2.c ****     *
 805:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_2.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_2.c ****     *
 809:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_2.c ****     *  None
 811:Generated_Source\PSoC5/PWM_2.c ****     *
 812:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_2.c ****     *
 815:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_2.c ****     {
 631              		.loc 1 817 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636 0000 80B4     		push	{r7}
 637              		.cfi_def_cfa_offset 4
 638              		.cfi_offset 7, -4
 639 0002 00AF     		add	r7, sp, #0
 640              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC5/PWM_2.c ****         #if(PWM_2_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_2.c ****             return ((uint16)CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 641              		.loc 1 819 0
 642 0004 034B     		ldr	r3, .L39
 643 0006 1B88     		ldrh	r3, [r3]	@ movhi
 644 0008 9BB2     		uxth	r3, r3
 820:Generated_Source\PSoC5/PWM_2.c ****         #else
 821:Generated_Source\PSoC5/PWM_2.c ****             return (CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_2.c ****         #endif /* (PWM_2_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_2.c ****     }
 645              		.loc 1 823 0
 646 000a 1846     		mov	r0, r3
 647 000c BD46     		mov	sp, r7
 648              		.cfi_def_cfa_register 13
 649              		@ sp needed
 650 000e 80BC     		pop	{r7}
 651              		.cfi_restore 7
 652              		.cfi_def_cfa_offset 0
 653 0010 7047     		bx	lr
 654              	.L40:
 655 0012 00BF     		.align	2
 656              	.L39:
 657 0014 124F0040 		.word	1073762066
 658              		.cfi_endproc
 659              	.LFE11:
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 27


 660              		.size	PWM_2_ReadCompare, .-PWM_2_ReadCompare
 661              		.section	.text.PWM_2_ReadPeriod,"ax",%progbits
 662              		.align	2
 663              		.global	PWM_2_ReadPeriod
 664              		.thumb
 665              		.thumb_func
 666              		.type	PWM_2_ReadPeriod, %function
 667              	PWM_2_ReadPeriod:
 668              	.LFB12:
 824:Generated_Source\PSoC5/PWM_2.c **** 
 825:Generated_Source\PSoC5/PWM_2.c **** #else
 826:Generated_Source\PSoC5/PWM_2.c **** 
 827:Generated_Source\PSoC5/PWM_2.c **** 
 828:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare1
 830:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_2.c ****     *
 832:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_2.c ****     *
 835:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_2.c ****     *  None
 837:Generated_Source\PSoC5/PWM_2.c ****     *
 838:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_2.c ****     *
 841:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_2.c ****     {
 844:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_2.c ****     }
 846:Generated_Source\PSoC5/PWM_2.c **** 
 847:Generated_Source\PSoC5/PWM_2.c **** 
 848:Generated_Source\PSoC5/PWM_2.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_2.c ****     * Function Name: PWM_2_ReadCompare2
 850:Generated_Source\PSoC5/PWM_2.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_2.c ****     *
 852:Generated_Source\PSoC5/PWM_2.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_2.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_2.c ****     *
 855:Generated_Source\PSoC5/PWM_2.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_2.c ****     *  None
 857:Generated_Source\PSoC5/PWM_2.c ****     *
 858:Generated_Source\PSoC5/PWM_2.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_2.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_2.c ****     *
 861:Generated_Source\PSoC5/PWM_2.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_2.c ****     uint16 PWM_2_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_2.c ****     {
 864:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_2.c ****     }
 866:Generated_Source\PSoC5/PWM_2.c **** 
 867:Generated_Source\PSoC5/PWM_2.c **** #endif /* (PWM_2_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_2.c **** 
 869:Generated_Source\PSoC5/PWM_2.c **** 
 870:Generated_Source\PSoC5/PWM_2.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_2.c **** * Function Name: PWM_2_ReadPeriod
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 28


 872:Generated_Source\PSoC5/PWM_2.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_2.c **** *
 874:Generated_Source\PSoC5/PWM_2.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_2.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_2.c **** *
 877:Generated_Source\PSoC5/PWM_2.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_2.c **** *  None
 879:Generated_Source\PSoC5/PWM_2.c **** *
 880:Generated_Source\PSoC5/PWM_2.c **** * Return:
 881:Generated_Source\PSoC5/PWM_2.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_2.c **** *
 883:Generated_Source\PSoC5/PWM_2.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_2.c **** uint16 PWM_2_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_2.c **** {
 669              		.loc 1 885 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0000 80B4     		push	{r7}
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 0002 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_2.c ****     #if(PWM_2_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_2.c ****         return ((uint16)CY_GET_REG16(PWM_2_PERIOD_LSB_PTR));
 679              		.loc 1 887 0
 680 0004 034B     		ldr	r3, .L43
 681 0006 1B88     		ldrh	r3, [r3]	@ movhi
 682 0008 9BB2     		uxth	r3, r3
 888:Generated_Source\PSoC5/PWM_2.c ****     #else
 889:Generated_Source\PSoC5/PWM_2.c ****         return (CY_GET_REG16(PWM_2_PERIOD_LSB_PTR));
 890:Generated_Source\PSoC5/PWM_2.c ****     #endif /* (PWM_2_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_2.c **** }
 683              		.loc 1 891 0
 684 000a 1846     		mov	r0, r3
 685 000c BD46     		mov	sp, r7
 686              		.cfi_def_cfa_register 13
 687              		@ sp needed
 688 000e 80BC     		pop	{r7}
 689              		.cfi_restore 7
 690              		.cfi_def_cfa_offset 0
 691 0010 7047     		bx	lr
 692              	.L44:
 693 0012 00BF     		.align	2
 694              	.L43:
 695 0014 104F0040 		.word	1073762064
 696              		.cfi_endproc
 697              	.LFE12:
 698              		.size	PWM_2_ReadPeriod, .-PWM_2_ReadPeriod
 699              		.text
 700              	.Letext0:
 701              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 702              		.section	.debug_info,"",%progbits
 703              	.Ldebug_info0:
 704 0000 66020000 		.4byte	0x266
 705 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 29


 706 0006 00000000 		.4byte	.Ldebug_abbrev0
 707 000a 04       		.byte	0x4
 708 000b 01       		.uleb128 0x1
 709 000c 2D000000 		.4byte	.LASF38
 710 0010 0C       		.byte	0xc
 711 0011 C4020000 		.4byte	.LASF39
 712 0015 66020000 		.4byte	.LASF40
 713 0019 00000000 		.4byte	.Ldebug_ranges0+0
 714 001d 00000000 		.4byte	0
 715 0021 00000000 		.4byte	.Ldebug_line0
 716 0025 02       		.uleb128 0x2
 717 0026 01       		.byte	0x1
 718 0027 06       		.byte	0x6
 719 0028 A5020000 		.4byte	.LASF0
 720 002c 02       		.uleb128 0x2
 721 002d 01       		.byte	0x1
 722 002e 08       		.byte	0x8
 723 002f 14010000 		.4byte	.LASF1
 724 0033 02       		.uleb128 0x2
 725 0034 02       		.byte	0x2
 726 0035 05       		.byte	0x5
 727 0036 23020000 		.4byte	.LASF2
 728 003a 02       		.uleb128 0x2
 729 003b 02       		.byte	0x2
 730 003c 07       		.byte	0x7
 731 003d C9000000 		.4byte	.LASF3
 732 0041 02       		.uleb128 0x2
 733 0042 04       		.byte	0x4
 734 0043 05       		.byte	0x5
 735 0044 4C020000 		.4byte	.LASF4
 736 0048 02       		.uleb128 0x2
 737 0049 04       		.byte	0x4
 738 004a 07       		.byte	0x7
 739 004b 39010000 		.4byte	.LASF5
 740 004f 02       		.uleb128 0x2
 741 0050 08       		.byte	0x8
 742 0051 05       		.byte	0x5
 743 0052 00000000 		.4byte	.LASF6
 744 0056 02       		.uleb128 0x2
 745 0057 08       		.byte	0x8
 746 0058 07       		.byte	0x7
 747 0059 AE010000 		.4byte	.LASF7
 748 005d 03       		.uleb128 0x3
 749 005e 04       		.byte	0x4
 750 005f 05       		.byte	0x5
 751 0060 696E7400 		.ascii	"int\000"
 752 0064 02       		.uleb128 0x2
 753 0065 04       		.byte	0x4
 754 0066 07       		.byte	0x7
 755 0067 A1010000 		.4byte	.LASF8
 756 006b 04       		.uleb128 0x4
 757 006c 4B010000 		.4byte	.LASF9
 758 0070 02       		.byte	0x2
 759 0071 E401     		.2byte	0x1e4
 760 0073 2C000000 		.4byte	0x2c
 761 0077 04       		.uleb128 0x4
 762 0078 87010000 		.4byte	.LASF10
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 30


 763 007c 02       		.byte	0x2
 764 007d E501     		.2byte	0x1e5
 765 007f 3A000000 		.4byte	0x3a
 766 0083 02       		.uleb128 0x2
 767 0084 04       		.byte	0x4
 768 0085 04       		.byte	0x4
 769 0086 FC000000 		.4byte	.LASF11
 770 008a 02       		.uleb128 0x2
 771 008b 08       		.byte	0x8
 772 008c 04       		.byte	0x4
 773 008d 74010000 		.4byte	.LASF12
 774 0091 02       		.uleb128 0x2
 775 0092 01       		.byte	0x1
 776 0093 08       		.byte	0x8
 777 0094 28000000 		.4byte	.LASF13
 778 0098 04       		.uleb128 0x4
 779 0099 34010000 		.4byte	.LASF14
 780 009d 02       		.byte	0x2
 781 009e 8E02     		.2byte	0x28e
 782 00a0 A4000000 		.4byte	0xa4
 783 00a4 05       		.uleb128 0x5
 784 00a5 6B000000 		.4byte	0x6b
 785 00a9 04       		.uleb128 0x4
 786 00aa 2D020000 		.4byte	.LASF15
 787 00ae 02       		.byte	0x2
 788 00af 8F02     		.2byte	0x28f
 789 00b1 B5000000 		.4byte	0xb5
 790 00b5 05       		.uleb128 0x5
 791 00b6 77000000 		.4byte	0x77
 792 00ba 02       		.uleb128 0x2
 793 00bb 08       		.byte	0x8
 794 00bc 04       		.byte	0x4
 795 00bd 99020000 		.4byte	.LASF16
 796 00c1 02       		.uleb128 0x2
 797 00c2 04       		.byte	0x4
 798 00c3 07       		.byte	0x7
 799 00c4 E3010000 		.4byte	.LASF17
 800 00c8 06       		.uleb128 0x6
 801 00c9 7B010000 		.4byte	.LASF18
 802 00cd 01       		.byte	0x1
 803 00ce 37       		.byte	0x37
 804 00cf 00000000 		.4byte	.LFB0
 805 00d3 24000000 		.4byte	.LFE0-.LFB0
 806 00d7 01       		.uleb128 0x1
 807 00d8 9C       		.byte	0x9c
 808 00d9 07       		.uleb128 0x7
 809 00da B9020000 		.4byte	.LASF21
 810 00de 01       		.byte	0x1
 811 00df 54       		.byte	0x54
 812 00e0 00000000 		.4byte	.LFB1
 813 00e4 C0000000 		.4byte	.LFE1-.LFB1
 814 00e8 01       		.uleb128 0x1
 815 00e9 9C       		.byte	0x9c
 816 00ea FD000000 		.4byte	0xfd
 817 00ee 08       		.uleb128 0x8
 818 00ef DE010000 		.4byte	.LASF23
 819 00f3 01       		.byte	0x1
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 31


 820 00f4 57       		.byte	0x57
 821 00f5 6B000000 		.4byte	0x6b
 822 00f9 02       		.uleb128 0x2
 823 00fa 91       		.byte	0x91
 824 00fb 77       		.sleb128 -9
 825 00fc 00       		.byte	0
 826 00fd 09       		.uleb128 0x9
 827 00fe 33020000 		.4byte	.LASF19
 828 0102 01       		.byte	0x1
 829 0103 C7       		.byte	0xc7
 830 0104 00000000 		.4byte	.LFB2
 831 0108 48000000 		.4byte	.LFE2-.LFB2
 832 010c 01       		.uleb128 0x1
 833 010d 9C       		.byte	0x9c
 834 010e 09       		.uleb128 0x9
 835 010f DC000000 		.4byte	.LASF20
 836 0113 01       		.byte	0x1
 837 0114 E9       		.byte	0xe9
 838 0115 00000000 		.4byte	.LFB3
 839 0119 48000000 		.4byte	.LFE3-.LFB3
 840 011d 01       		.uleb128 0x1
 841 011e 9C       		.byte	0x9c
 842 011f 0A       		.uleb128 0xa
 843 0120 E7000000 		.4byte	.LASF22
 844 0124 01       		.byte	0x1
 845 0125 0A01     		.2byte	0x10a
 846 0127 00000000 		.4byte	.LFB4
 847 012b 40000000 		.4byte	.LFE4-.LFB4
 848 012f 01       		.uleb128 0x1
 849 0130 9C       		.byte	0x9c
 850 0131 54010000 		.4byte	0x154
 851 0135 0B       		.uleb128 0xb
 852 0136 40020000 		.4byte	.LASF26
 853 013a 01       		.byte	0x1
 854 013b 0A01     		.2byte	0x10a
 855 013d 6B000000 		.4byte	0x6b
 856 0141 02       		.uleb128 0x2
 857 0142 91       		.byte	0x91
 858 0143 6F       		.sleb128 -17
 859 0144 0C       		.uleb128 0xc
 860 0145 22010000 		.4byte	.LASF24
 861 0149 01       		.byte	0x1
 862 014a 0F01     		.2byte	0x10f
 863 014c 6B000000 		.4byte	0x6b
 864 0150 02       		.uleb128 0x2
 865 0151 91       		.byte	0x91
 866 0152 77       		.sleb128 -9
 867 0153 00       		.byte	0
 868 0154 0A       		.uleb128 0xa
 869 0155 EC010000 		.4byte	.LASF25
 870 0159 01       		.byte	0x1
 871 015a E201     		.2byte	0x1e2
 872 015c 00000000 		.4byte	.LFB5
 873 0160 20000000 		.4byte	.LFE5-.LFB5
 874 0164 01       		.uleb128 0x1
 875 0165 9C       		.byte	0x9c
 876 0166 7A010000 		.4byte	0x17a
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 32


 877 016a 0B       		.uleb128 0xb
 878 016b C2000000 		.4byte	.LASF27
 879 016f 01       		.byte	0x1
 880 0170 E201     		.2byte	0x1e2
 881 0172 77000000 		.4byte	0x77
 882 0176 02       		.uleb128 0x2
 883 0177 91       		.byte	0x91
 884 0178 76       		.sleb128 -10
 885 0179 00       		.byte	0
 886 017a 0A       		.uleb128 0xa
 887 017b 8E010000 		.4byte	.LASF28
 888 017f 01       		.byte	0x1
 889 0180 0402     		.2byte	0x204
 890 0182 00000000 		.4byte	.LFB6
 891 0186 20000000 		.4byte	.LFE6-.LFB6
 892 018a 01       		.uleb128 0x1
 893 018b 9C       		.byte	0x9c
 894 018c A0010000 		.4byte	0x1a0
 895 0190 0B       		.uleb128 0xb
 896 0191 B1020000 		.4byte	.LASF29
 897 0195 01       		.byte	0x1
 898 0196 0402     		.2byte	0x204
 899 0198 77000000 		.4byte	0x77
 900 019c 02       		.uleb128 0x2
 901 019d 91       		.byte	0x91
 902 019e 76       		.sleb128 -10
 903 019f 00       		.byte	0
 904 01a0 0A       		.uleb128 0xa
 905 01a1 0C020000 		.4byte	.LASF30
 906 01a5 01       		.byte	0x1
 907 01a6 AC02     		.2byte	0x2ac
 908 01a8 00000000 		.4byte	.LFB7
 909 01ac 20000000 		.4byte	.LFE7-.LFB7
 910 01b0 01       		.uleb128 0x1
 911 01b1 9C       		.byte	0x9c
 912 01b2 C6010000 		.4byte	0x1c6
 913 01b6 0B       		.uleb128 0xb
 914 01b7 FE010000 		.4byte	.LASF31
 915 01bb 01       		.byte	0x1
 916 01bc AC02     		.2byte	0x2ac
 917 01be 6B000000 		.4byte	0x6b
 918 01c2 02       		.uleb128 0x2
 919 01c3 91       		.byte	0x91
 920 01c4 77       		.sleb128 -9
 921 01c5 00       		.byte	0
 922 01c6 0D       		.uleb128 0xd
 923 01c7 C5010000 		.4byte	.LASF35
 924 01cb 01       		.byte	0x1
 925 01cc C702     		.2byte	0x2c7
 926 01ce 6B000000 		.4byte	0x6b
 927 01d2 00000000 		.4byte	.LFB8
 928 01d6 18000000 		.4byte	.LFE8-.LFB8
 929 01da 01       		.uleb128 0x1
 930 01db 9C       		.byte	0x9c
 931 01dc 0E       		.uleb128 0xe
 932 01dd 0E000000 		.4byte	.LASF41
 933 01e1 01       		.byte	0x1
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 33


 934 01e2 E102     		.2byte	0x2e1
 935 01e4 6B000000 		.4byte	0x6b
 936 01e8 00000000 		.4byte	.LFB9
 937 01ec 1C000000 		.4byte	.LFE9-.LFB9
 938 01f0 01       		.uleb128 0x1
 939 01f1 9C       		.byte	0x9c
 940 01f2 06020000 		.4byte	0x206
 941 01f6 0C       		.uleb128 0xc
 942 01f7 BB000000 		.4byte	.LASF32
 943 01fb 01       		.byte	0x1
 944 01fc E302     		.2byte	0x2e3
 945 01fe 6B000000 		.4byte	0x6b
 946 0202 02       		.uleb128 0x2
 947 0203 91       		.byte	0x91
 948 0204 77       		.sleb128 -9
 949 0205 00       		.byte	0
 950 0206 0A       		.uleb128 0xa
 951 0207 59010000 		.4byte	.LASF33
 952 020b 01       		.byte	0x1
 953 020c FD02     		.2byte	0x2fd
 954 020e 00000000 		.4byte	.LFB10
 955 0212 20000000 		.4byte	.LFE10-.LFB10
 956 0216 01       		.uleb128 0x1
 957 0217 9C       		.byte	0x9c
 958 0218 2C020000 		.4byte	0x22c
 959 021c 0B       		.uleb128 0xb
 960 021d 51010000 		.4byte	.LASF34
 961 0221 01       		.byte	0x1
 962 0222 FD02     		.2byte	0x2fd
 963 0224 6B000000 		.4byte	0x6b
 964 0228 02       		.uleb128 0x2
 965 0229 91       		.byte	0x91
 966 022a 77       		.sleb128 -9
 967 022b 00       		.byte	0
 968 022c 0D       		.uleb128 0xd
 969 022d 02010000 		.4byte	.LASF36
 970 0231 01       		.byte	0x1
 971 0232 3003     		.2byte	0x330
 972 0234 77000000 		.4byte	0x77
 973 0238 00000000 		.4byte	.LFB11
 974 023c 18000000 		.4byte	.LFE11-.LFB11
 975 0240 01       		.uleb128 0x1
 976 0241 9C       		.byte	0x9c
 977 0242 0D       		.uleb128 0xd
 978 0243 55020000 		.4byte	.LASF37
 979 0247 01       		.byte	0x1
 980 0248 7403     		.2byte	0x374
 981 024a 77000000 		.4byte	0x77
 982 024e 00000000 		.4byte	.LFB12
 983 0252 18000000 		.4byte	.LFE12-.LFB12
 984 0256 01       		.uleb128 0x1
 985 0257 9C       		.byte	0x9c
 986 0258 0F       		.uleb128 0xf
 987 0259 E3020000 		.4byte	.LASF42
 988 025d 01       		.byte	0x1
 989 025e 20       		.byte	0x20
 990 025f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 34


 991 0263 05       		.uleb128 0x5
 992 0264 03       		.byte	0x3
 993 0265 00000000 		.4byte	PWM_2_initVar
 994 0269 00       		.byte	0
 995              		.section	.debug_abbrev,"",%progbits
 996              	.Ldebug_abbrev0:
 997 0000 01       		.uleb128 0x1
 998 0001 11       		.uleb128 0x11
 999 0002 01       		.byte	0x1
 1000 0003 25       		.uleb128 0x25
 1001 0004 0E       		.uleb128 0xe
 1002 0005 13       		.uleb128 0x13
 1003 0006 0B       		.uleb128 0xb
 1004 0007 03       		.uleb128 0x3
 1005 0008 0E       		.uleb128 0xe
 1006 0009 1B       		.uleb128 0x1b
 1007 000a 0E       		.uleb128 0xe
 1008 000b 55       		.uleb128 0x55
 1009 000c 17       		.uleb128 0x17
 1010 000d 11       		.uleb128 0x11
 1011 000e 01       		.uleb128 0x1
 1012 000f 10       		.uleb128 0x10
 1013 0010 17       		.uleb128 0x17
 1014 0011 00       		.byte	0
 1015 0012 00       		.byte	0
 1016 0013 02       		.uleb128 0x2
 1017 0014 24       		.uleb128 0x24
 1018 0015 00       		.byte	0
 1019 0016 0B       		.uleb128 0xb
 1020 0017 0B       		.uleb128 0xb
 1021 0018 3E       		.uleb128 0x3e
 1022 0019 0B       		.uleb128 0xb
 1023 001a 03       		.uleb128 0x3
 1024 001b 0E       		.uleb128 0xe
 1025 001c 00       		.byte	0
 1026 001d 00       		.byte	0
 1027 001e 03       		.uleb128 0x3
 1028 001f 24       		.uleb128 0x24
 1029 0020 00       		.byte	0
 1030 0021 0B       		.uleb128 0xb
 1031 0022 0B       		.uleb128 0xb
 1032 0023 3E       		.uleb128 0x3e
 1033 0024 0B       		.uleb128 0xb
 1034 0025 03       		.uleb128 0x3
 1035 0026 08       		.uleb128 0x8
 1036 0027 00       		.byte	0
 1037 0028 00       		.byte	0
 1038 0029 04       		.uleb128 0x4
 1039 002a 16       		.uleb128 0x16
 1040 002b 00       		.byte	0
 1041 002c 03       		.uleb128 0x3
 1042 002d 0E       		.uleb128 0xe
 1043 002e 3A       		.uleb128 0x3a
 1044 002f 0B       		.uleb128 0xb
 1045 0030 3B       		.uleb128 0x3b
 1046 0031 05       		.uleb128 0x5
 1047 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 35


 1048 0033 13       		.uleb128 0x13
 1049 0034 00       		.byte	0
 1050 0035 00       		.byte	0
 1051 0036 05       		.uleb128 0x5
 1052 0037 35       		.uleb128 0x35
 1053 0038 00       		.byte	0
 1054 0039 49       		.uleb128 0x49
 1055 003a 13       		.uleb128 0x13
 1056 003b 00       		.byte	0
 1057 003c 00       		.byte	0
 1058 003d 06       		.uleb128 0x6
 1059 003e 2E       		.uleb128 0x2e
 1060 003f 00       		.byte	0
 1061 0040 3F       		.uleb128 0x3f
 1062 0041 19       		.uleb128 0x19
 1063 0042 03       		.uleb128 0x3
 1064 0043 0E       		.uleb128 0xe
 1065 0044 3A       		.uleb128 0x3a
 1066 0045 0B       		.uleb128 0xb
 1067 0046 3B       		.uleb128 0x3b
 1068 0047 0B       		.uleb128 0xb
 1069 0048 27       		.uleb128 0x27
 1070 0049 19       		.uleb128 0x19
 1071 004a 11       		.uleb128 0x11
 1072 004b 01       		.uleb128 0x1
 1073 004c 12       		.uleb128 0x12
 1074 004d 06       		.uleb128 0x6
 1075 004e 40       		.uleb128 0x40
 1076 004f 18       		.uleb128 0x18
 1077 0050 9642     		.uleb128 0x2116
 1078 0052 19       		.uleb128 0x19
 1079 0053 00       		.byte	0
 1080 0054 00       		.byte	0
 1081 0055 07       		.uleb128 0x7
 1082 0056 2E       		.uleb128 0x2e
 1083 0057 01       		.byte	0x1
 1084 0058 3F       		.uleb128 0x3f
 1085 0059 19       		.uleb128 0x19
 1086 005a 03       		.uleb128 0x3
 1087 005b 0E       		.uleb128 0xe
 1088 005c 3A       		.uleb128 0x3a
 1089 005d 0B       		.uleb128 0xb
 1090 005e 3B       		.uleb128 0x3b
 1091 005f 0B       		.uleb128 0xb
 1092 0060 27       		.uleb128 0x27
 1093 0061 19       		.uleb128 0x19
 1094 0062 11       		.uleb128 0x11
 1095 0063 01       		.uleb128 0x1
 1096 0064 12       		.uleb128 0x12
 1097 0065 06       		.uleb128 0x6
 1098 0066 40       		.uleb128 0x40
 1099 0067 18       		.uleb128 0x18
 1100 0068 9642     		.uleb128 0x2116
 1101 006a 19       		.uleb128 0x19
 1102 006b 01       		.uleb128 0x1
 1103 006c 13       		.uleb128 0x13
 1104 006d 00       		.byte	0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 36


 1105 006e 00       		.byte	0
 1106 006f 08       		.uleb128 0x8
 1107 0070 34       		.uleb128 0x34
 1108 0071 00       		.byte	0
 1109 0072 03       		.uleb128 0x3
 1110 0073 0E       		.uleb128 0xe
 1111 0074 3A       		.uleb128 0x3a
 1112 0075 0B       		.uleb128 0xb
 1113 0076 3B       		.uleb128 0x3b
 1114 0077 0B       		.uleb128 0xb
 1115 0078 49       		.uleb128 0x49
 1116 0079 13       		.uleb128 0x13
 1117 007a 02       		.uleb128 0x2
 1118 007b 18       		.uleb128 0x18
 1119 007c 00       		.byte	0
 1120 007d 00       		.byte	0
 1121 007e 09       		.uleb128 0x9
 1122 007f 2E       		.uleb128 0x2e
 1123 0080 00       		.byte	0
 1124 0081 3F       		.uleb128 0x3f
 1125 0082 19       		.uleb128 0x19
 1126 0083 03       		.uleb128 0x3
 1127 0084 0E       		.uleb128 0xe
 1128 0085 3A       		.uleb128 0x3a
 1129 0086 0B       		.uleb128 0xb
 1130 0087 3B       		.uleb128 0x3b
 1131 0088 0B       		.uleb128 0xb
 1132 0089 27       		.uleb128 0x27
 1133 008a 19       		.uleb128 0x19
 1134 008b 11       		.uleb128 0x11
 1135 008c 01       		.uleb128 0x1
 1136 008d 12       		.uleb128 0x12
 1137 008e 06       		.uleb128 0x6
 1138 008f 40       		.uleb128 0x40
 1139 0090 18       		.uleb128 0x18
 1140 0091 9742     		.uleb128 0x2117
 1141 0093 19       		.uleb128 0x19
 1142 0094 00       		.byte	0
 1143 0095 00       		.byte	0
 1144 0096 0A       		.uleb128 0xa
 1145 0097 2E       		.uleb128 0x2e
 1146 0098 01       		.byte	0x1
 1147 0099 3F       		.uleb128 0x3f
 1148 009a 19       		.uleb128 0x19
 1149 009b 03       		.uleb128 0x3
 1150 009c 0E       		.uleb128 0xe
 1151 009d 3A       		.uleb128 0x3a
 1152 009e 0B       		.uleb128 0xb
 1153 009f 3B       		.uleb128 0x3b
 1154 00a0 05       		.uleb128 0x5
 1155 00a1 27       		.uleb128 0x27
 1156 00a2 19       		.uleb128 0x19
 1157 00a3 11       		.uleb128 0x11
 1158 00a4 01       		.uleb128 0x1
 1159 00a5 12       		.uleb128 0x12
 1160 00a6 06       		.uleb128 0x6
 1161 00a7 40       		.uleb128 0x40
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 37


 1162 00a8 18       		.uleb128 0x18
 1163 00a9 9742     		.uleb128 0x2117
 1164 00ab 19       		.uleb128 0x19
 1165 00ac 01       		.uleb128 0x1
 1166 00ad 13       		.uleb128 0x13
 1167 00ae 00       		.byte	0
 1168 00af 00       		.byte	0
 1169 00b0 0B       		.uleb128 0xb
 1170 00b1 05       		.uleb128 0x5
 1171 00b2 00       		.byte	0
 1172 00b3 03       		.uleb128 0x3
 1173 00b4 0E       		.uleb128 0xe
 1174 00b5 3A       		.uleb128 0x3a
 1175 00b6 0B       		.uleb128 0xb
 1176 00b7 3B       		.uleb128 0x3b
 1177 00b8 05       		.uleb128 0x5
 1178 00b9 49       		.uleb128 0x49
 1179 00ba 13       		.uleb128 0x13
 1180 00bb 02       		.uleb128 0x2
 1181 00bc 18       		.uleb128 0x18
 1182 00bd 00       		.byte	0
 1183 00be 00       		.byte	0
 1184 00bf 0C       		.uleb128 0xc
 1185 00c0 34       		.uleb128 0x34
 1186 00c1 00       		.byte	0
 1187 00c2 03       		.uleb128 0x3
 1188 00c3 0E       		.uleb128 0xe
 1189 00c4 3A       		.uleb128 0x3a
 1190 00c5 0B       		.uleb128 0xb
 1191 00c6 3B       		.uleb128 0x3b
 1192 00c7 05       		.uleb128 0x5
 1193 00c8 49       		.uleb128 0x49
 1194 00c9 13       		.uleb128 0x13
 1195 00ca 02       		.uleb128 0x2
 1196 00cb 18       		.uleb128 0x18
 1197 00cc 00       		.byte	0
 1198 00cd 00       		.byte	0
 1199 00ce 0D       		.uleb128 0xd
 1200 00cf 2E       		.uleb128 0x2e
 1201 00d0 00       		.byte	0
 1202 00d1 3F       		.uleb128 0x3f
 1203 00d2 19       		.uleb128 0x19
 1204 00d3 03       		.uleb128 0x3
 1205 00d4 0E       		.uleb128 0xe
 1206 00d5 3A       		.uleb128 0x3a
 1207 00d6 0B       		.uleb128 0xb
 1208 00d7 3B       		.uleb128 0x3b
 1209 00d8 05       		.uleb128 0x5
 1210 00d9 27       		.uleb128 0x27
 1211 00da 19       		.uleb128 0x19
 1212 00db 49       		.uleb128 0x49
 1213 00dc 13       		.uleb128 0x13
 1214 00dd 11       		.uleb128 0x11
 1215 00de 01       		.uleb128 0x1
 1216 00df 12       		.uleb128 0x12
 1217 00e0 06       		.uleb128 0x6
 1218 00e1 40       		.uleb128 0x40
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 38


 1219 00e2 18       		.uleb128 0x18
 1220 00e3 9742     		.uleb128 0x2117
 1221 00e5 19       		.uleb128 0x19
 1222 00e6 00       		.byte	0
 1223 00e7 00       		.byte	0
 1224 00e8 0E       		.uleb128 0xe
 1225 00e9 2E       		.uleb128 0x2e
 1226 00ea 01       		.byte	0x1
 1227 00eb 3F       		.uleb128 0x3f
 1228 00ec 19       		.uleb128 0x19
 1229 00ed 03       		.uleb128 0x3
 1230 00ee 0E       		.uleb128 0xe
 1231 00ef 3A       		.uleb128 0x3a
 1232 00f0 0B       		.uleb128 0xb
 1233 00f1 3B       		.uleb128 0x3b
 1234 00f2 05       		.uleb128 0x5
 1235 00f3 27       		.uleb128 0x27
 1236 00f4 19       		.uleb128 0x19
 1237 00f5 49       		.uleb128 0x49
 1238 00f6 13       		.uleb128 0x13
 1239 00f7 11       		.uleb128 0x11
 1240 00f8 01       		.uleb128 0x1
 1241 00f9 12       		.uleb128 0x12
 1242 00fa 06       		.uleb128 0x6
 1243 00fb 40       		.uleb128 0x40
 1244 00fc 18       		.uleb128 0x18
 1245 00fd 9742     		.uleb128 0x2117
 1246 00ff 19       		.uleb128 0x19
 1247 0100 01       		.uleb128 0x1
 1248 0101 13       		.uleb128 0x13
 1249 0102 00       		.byte	0
 1250 0103 00       		.byte	0
 1251 0104 0F       		.uleb128 0xf
 1252 0105 34       		.uleb128 0x34
 1253 0106 00       		.byte	0
 1254 0107 03       		.uleb128 0x3
 1255 0108 0E       		.uleb128 0xe
 1256 0109 3A       		.uleb128 0x3a
 1257 010a 0B       		.uleb128 0xb
 1258 010b 3B       		.uleb128 0x3b
 1259 010c 0B       		.uleb128 0xb
 1260 010d 49       		.uleb128 0x49
 1261 010e 13       		.uleb128 0x13
 1262 010f 3F       		.uleb128 0x3f
 1263 0110 19       		.uleb128 0x19
 1264 0111 02       		.uleb128 0x2
 1265 0112 18       		.uleb128 0x18
 1266 0113 00       		.byte	0
 1267 0114 00       		.byte	0
 1268 0115 00       		.byte	0
 1269              		.section	.debug_aranges,"",%progbits
 1270 0000 7C000000 		.4byte	0x7c
 1271 0004 0200     		.2byte	0x2
 1272 0006 00000000 		.4byte	.Ldebug_info0
 1273 000a 04       		.byte	0x4
 1274 000b 00       		.byte	0
 1275 000c 0000     		.2byte	0
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 39


 1276 000e 0000     		.2byte	0
 1277 0010 00000000 		.4byte	.LFB0
 1278 0014 24000000 		.4byte	.LFE0-.LFB0
 1279 0018 00000000 		.4byte	.LFB1
 1280 001c C0000000 		.4byte	.LFE1-.LFB1
 1281 0020 00000000 		.4byte	.LFB2
 1282 0024 48000000 		.4byte	.LFE2-.LFB2
 1283 0028 00000000 		.4byte	.LFB3
 1284 002c 48000000 		.4byte	.LFE3-.LFB3
 1285 0030 00000000 		.4byte	.LFB4
 1286 0034 40000000 		.4byte	.LFE4-.LFB4
 1287 0038 00000000 		.4byte	.LFB5
 1288 003c 20000000 		.4byte	.LFE5-.LFB5
 1289 0040 00000000 		.4byte	.LFB6
 1290 0044 20000000 		.4byte	.LFE6-.LFB6
 1291 0048 00000000 		.4byte	.LFB7
 1292 004c 20000000 		.4byte	.LFE7-.LFB7
 1293 0050 00000000 		.4byte	.LFB8
 1294 0054 18000000 		.4byte	.LFE8-.LFB8
 1295 0058 00000000 		.4byte	.LFB9
 1296 005c 1C000000 		.4byte	.LFE9-.LFB9
 1297 0060 00000000 		.4byte	.LFB10
 1298 0064 20000000 		.4byte	.LFE10-.LFB10
 1299 0068 00000000 		.4byte	.LFB11
 1300 006c 18000000 		.4byte	.LFE11-.LFB11
 1301 0070 00000000 		.4byte	.LFB12
 1302 0074 18000000 		.4byte	.LFE12-.LFB12
 1303 0078 00000000 		.4byte	0
 1304 007c 00000000 		.4byte	0
 1305              		.section	.debug_ranges,"",%progbits
 1306              	.Ldebug_ranges0:
 1307 0000 00000000 		.4byte	.LFB0
 1308 0004 24000000 		.4byte	.LFE0
 1309 0008 00000000 		.4byte	.LFB1
 1310 000c C0000000 		.4byte	.LFE1
 1311 0010 00000000 		.4byte	.LFB2
 1312 0014 48000000 		.4byte	.LFE2
 1313 0018 00000000 		.4byte	.LFB3
 1314 001c 48000000 		.4byte	.LFE3
 1315 0020 00000000 		.4byte	.LFB4
 1316 0024 40000000 		.4byte	.LFE4
 1317 0028 00000000 		.4byte	.LFB5
 1318 002c 20000000 		.4byte	.LFE5
 1319 0030 00000000 		.4byte	.LFB6
 1320 0034 20000000 		.4byte	.LFE6
 1321 0038 00000000 		.4byte	.LFB7
 1322 003c 20000000 		.4byte	.LFE7
 1323 0040 00000000 		.4byte	.LFB8
 1324 0044 18000000 		.4byte	.LFE8
 1325 0048 00000000 		.4byte	.LFB9
 1326 004c 1C000000 		.4byte	.LFE9
 1327 0050 00000000 		.4byte	.LFB10
 1328 0054 20000000 		.4byte	.LFE10
 1329 0058 00000000 		.4byte	.LFB11
 1330 005c 18000000 		.4byte	.LFE11
 1331 0060 00000000 		.4byte	.LFB12
 1332 0064 18000000 		.4byte	.LFE12
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 40


 1333 0068 00000000 		.4byte	0
 1334 006c 00000000 		.4byte	0
 1335              		.section	.debug_line,"",%progbits
 1336              	.Ldebug_line0:
 1337 0000 52010000 		.section	.debug_str,"MS",%progbits,1
 1337      02004200 
 1337      00000201 
 1337      FB0E0D00 
 1337      01010101 
 1338              	.LASF6:
 1339 0000 6C6F6E67 		.ascii	"long long int\000"
 1339      206C6F6E 
 1339      6720696E 
 1339      7400
 1340              	.LASF41:
 1341 000e 50574D5F 		.ascii	"PWM_2_ReadControlRegister\000"
 1341      325F5265 
 1341      6164436F 
 1341      6E74726F 
 1341      6C526567 
 1342              	.LASF13:
 1343 0028 63686172 		.ascii	"char\000"
 1343      00
 1344              	.LASF38:
 1345 002d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1345      43313120 
 1345      352E342E 
 1345      31203230 
 1345      31363036 
 1346 0060 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1346      20726576 
 1346      6973696F 
 1346      6E203233 
 1346      37373135 
 1347 0093 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1347      66756E63 
 1347      74696F6E 
 1347      2D736563 
 1347      74696F6E 
 1348              	.LASF32:
 1349 00bb 72657375 		.ascii	"result\000"
 1349      6C7400
 1350              	.LASF27:
 1351 00c2 70657269 		.ascii	"period\000"
 1351      6F6400
 1352              	.LASF3:
 1353 00c9 73686F72 		.ascii	"short unsigned int\000"
 1353      7420756E 
 1353      7369676E 
 1353      65642069 
 1353      6E7400
 1354              	.LASF20:
 1355 00dc 50574D5F 		.ascii	"PWM_2_Stop\000"
 1355      325F5374 
 1355      6F7000
 1356              	.LASF22:
 1357 00e7 50574D5F 		.ascii	"PWM_2_SetCompareMode\000"
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 41


 1357      325F5365 
 1357      74436F6D 
 1357      70617265 
 1357      4D6F6465 
 1358              	.LASF11:
 1359 00fc 666C6F61 		.ascii	"float\000"
 1359      7400
 1360              	.LASF36:
 1361 0102 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 1361      325F5265 
 1361      6164436F 
 1361      6D706172 
 1361      6500
 1362              	.LASF1:
 1363 0114 756E7369 		.ascii	"unsigned char\000"
 1363      676E6564 
 1363      20636861 
 1363      7200
 1364              	.LASF24:
 1365 0122 636F6D70 		.ascii	"comparemodemasked\000"
 1365      6172656D 
 1365      6F64656D 
 1365      61736B65 
 1365      6400
 1366              	.LASF14:
 1367 0134 72656738 		.ascii	"reg8\000"
 1367      00
 1368              	.LASF5:
 1369 0139 6C6F6E67 		.ascii	"long unsigned int\000"
 1369      20756E73 
 1369      69676E65 
 1369      6420696E 
 1369      7400
 1370              	.LASF9:
 1371 014b 75696E74 		.ascii	"uint8\000"
 1371      3800
 1372              	.LASF34:
 1373 0151 636F6E74 		.ascii	"control\000"
 1373      726F6C00 
 1374              	.LASF33:
 1375 0159 50574D5F 		.ascii	"PWM_2_WriteControlRegister\000"
 1375      325F5772 
 1375      69746543 
 1375      6F6E7472 
 1375      6F6C5265 
 1376              	.LASF12:
 1377 0174 646F7562 		.ascii	"double\000"
 1377      6C6500
 1378              	.LASF18:
 1379 017b 50574D5F 		.ascii	"PWM_2_Start\000"
 1379      325F5374 
 1379      61727400 
 1380              	.LASF10:
 1381 0187 75696E74 		.ascii	"uint16\000"
 1381      313600
 1382              	.LASF28:
 1383 018e 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 42


 1383      325F5772 
 1383      69746543 
 1383      6F6D7061 
 1383      726500
 1384              	.LASF8:
 1385 01a1 756E7369 		.ascii	"unsigned int\000"
 1385      676E6564 
 1385      20696E74 
 1385      00
 1386              	.LASF7:
 1387 01ae 6C6F6E67 		.ascii	"long long unsigned int\000"
 1387      206C6F6E 
 1387      6720756E 
 1387      7369676E 
 1387      65642069 
 1388              	.LASF35:
 1389 01c5 50574D5F 		.ascii	"PWM_2_ReadStatusRegister\000"
 1389      325F5265 
 1389      61645374 
 1389      61747573 
 1389      52656769 
 1390              	.LASF23:
 1391 01de 6374726C 		.ascii	"ctrl\000"
 1391      00
 1392              	.LASF17:
 1393 01e3 73697A65 		.ascii	"sizetype\000"
 1393      74797065 
 1393      00
 1394              	.LASF25:
 1395 01ec 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 1395      325F5772 
 1395      69746550 
 1395      6572696F 
 1395      6400
 1396              	.LASF31:
 1397 01fe 696E7465 		.ascii	"interruptMode\000"
 1397      72727570 
 1397      744D6F64 
 1397      6500
 1398              	.LASF30:
 1399 020c 50574D5F 		.ascii	"PWM_2_SetInterruptMode\000"
 1399      325F5365 
 1399      74496E74 
 1399      65727275 
 1399      70744D6F 
 1400              	.LASF2:
 1401 0223 73686F72 		.ascii	"short int\000"
 1401      7420696E 
 1401      7400
 1402              	.LASF15:
 1403 022d 72656731 		.ascii	"reg16\000"
 1403      3600
 1404              	.LASF19:
 1405 0233 50574D5F 		.ascii	"PWM_2_Enable\000"
 1405      325F456E 
 1405      61626C65 
 1405      00
ARM GAS  C:\Users\Doug\AppData\Local\Temp\ccRyIrcW.s 			page 43


 1406              	.LASF26:
 1407 0240 636F6D70 		.ascii	"comparemode\000"
 1407      6172656D 
 1407      6F646500 
 1408              	.LASF4:
 1409 024c 6C6F6E67 		.ascii	"long int\000"
 1409      20696E74 
 1409      00
 1410              	.LASF37:
 1411 0255 50574D5F 		.ascii	"PWM_2_ReadPeriod\000"
 1411      325F5265 
 1411      61645065 
 1411      72696F64 
 1411      00
 1412              	.LASF40:
 1413 0266 433A5C55 		.ascii	"C:\\Users\\Doug\\Documents\\GitHub\\RpiMIB\\RpiMIB."
 1413      73657273 
 1413      5C446F75 
 1413      675C446F 
 1413      63756D65 
 1414 0293 63796473 		.ascii	"cydsn\000"
 1414      6E00
 1415              	.LASF16:
 1416 0299 6C6F6E67 		.ascii	"long double\000"
 1416      20646F75 
 1416      626C6500 
 1417              	.LASF0:
 1418 02a5 7369676E 		.ascii	"signed char\000"
 1418      65642063 
 1418      68617200 
 1419              	.LASF29:
 1420 02b1 636F6D70 		.ascii	"compare\000"
 1420      61726500 
 1421              	.LASF21:
 1422 02b9 50574D5F 		.ascii	"PWM_2_Init\000"
 1422      325F496E 
 1422      697400
 1423              	.LASF39:
 1424 02c4 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_2.c\000"
 1424      72617465 
 1424      645F536F 
 1424      75726365 
 1424      5C50536F 
 1425              	.LASF42:
 1426 02e3 50574D5F 		.ascii	"PWM_2_initVar\000"
 1426      325F696E 
 1426      69745661 
 1426      7200
 1427              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
