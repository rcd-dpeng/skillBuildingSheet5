ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RPi_SPIS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	RPi_SPIS_initVar
  20              		.bss
  21              		.type	RPi_SPIS_initVar, %object
  22              		.size	RPi_SPIS_initVar, 1
  23              	RPi_SPIS_initVar:
  24 0000 00       		.space	1
  25              		.comm	RPi_SPIS_swStatusTx,1,1
  26              		.comm	RPi_SPIS_swStatusRx,1,1
  27              		.section	.text.RPi_SPIS_Init,"ax",%progbits
  28              		.align	2
  29              		.global	RPi_SPIS_Init
  30              		.thumb
  31              		.thumb_func
  32              		.type	RPi_SPIS_Init, %function
  33              	RPi_SPIS_Init:
  34              	.LFB0:
  35              		.file 1 "Generated_Source\\PSoC5\\RPi_SPIS.c"
   1:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RPi_SPIS.c **** * File Name: RPi_SPIS.c
   3:Generated_Source\PSoC5/RPi_SPIS.c **** * Version 2.70
   4:Generated_Source\PSoC5/RPi_SPIS.c **** *
   5:Generated_Source\PSoC5/RPi_SPIS.c **** * Description:
   6:Generated_Source\PSoC5/RPi_SPIS.c **** *  This file provides all API functionality of the SPI Slave component.
   7:Generated_Source\PSoC5/RPi_SPIS.c **** *
   8:Generated_Source\PSoC5/RPi_SPIS.c **** * Note:
   9:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
  10:Generated_Source\PSoC5/RPi_SPIS.c **** *
  11:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
  12:Generated_Source\PSoC5/RPi_SPIS.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/RPi_SPIS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/RPi_SPIS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/RPi_SPIS.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/RPi_SPIS.c **** 
  18:Generated_Source\PSoC5/RPi_SPIS.c **** #include "RPi_SPIS_PVT.h"
  19:Generated_Source\PSoC5/RPi_SPIS.c **** 
  20:Generated_Source\PSoC5/RPi_SPIS.c **** #if (RPi_SPIS_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/RPi_SPIS.c **** 
  22:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_txBuffer[RPi_SPIS_TX_BUFFER_SIZE];
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 2


  23:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_txBufferRead;
  24:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_txBufferWrite;
  25:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_txBufferFull;
  26:Generated_Source\PSoC5/RPi_SPIS.c **** 
  27:Generated_Source\PSoC5/RPi_SPIS.c **** #endif /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED*/
  28:Generated_Source\PSoC5/RPi_SPIS.c **** 
  29:Generated_Source\PSoC5/RPi_SPIS.c **** #if (RPi_SPIS_RX_SOFTWARE_BUF_ENABLED)
  30:Generated_Source\PSoC5/RPi_SPIS.c **** 
  31:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_rxBuffer[RPi_SPIS_RX_BUFFER_SIZE];
  32:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_rxBufferRead;
  33:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_rxBufferWrite;
  34:Generated_Source\PSoC5/RPi_SPIS.c ****     volatile uint8 RPi_SPIS_rxBufferFull;
  35:Generated_Source\PSoC5/RPi_SPIS.c **** 
  36:Generated_Source\PSoC5/RPi_SPIS.c **** #endif /* RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
  37:Generated_Source\PSoC5/RPi_SPIS.c **** 
  38:Generated_Source\PSoC5/RPi_SPIS.c **** uint8 RPi_SPIS_initVar = 0u;
  39:Generated_Source\PSoC5/RPi_SPIS.c **** 
  40:Generated_Source\PSoC5/RPi_SPIS.c **** volatile uint8 RPi_SPIS_swStatusTx;
  41:Generated_Source\PSoC5/RPi_SPIS.c **** volatile uint8 RPi_SPIS_swStatusRx;
  42:Generated_Source\PSoC5/RPi_SPIS.c **** 
  43:Generated_Source\PSoC5/RPi_SPIS.c **** 
  44:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_Init
  46:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
  47:Generated_Source\PSoC5/RPi_SPIS.c **** *
  48:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
  49:Generated_Source\PSoC5/RPi_SPIS.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:Generated_Source\PSoC5/RPi_SPIS.c **** *
  51:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
  52:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
  53:Generated_Source\PSoC5/RPi_SPIS.c **** *
  54:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
  55:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
  56:Generated_Source\PSoC5/RPi_SPIS.c **** *
  57:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
  58:Generated_Source\PSoC5/RPi_SPIS.c **** *  When this function is called it initializes all of the necessary parameters
  59:Generated_Source\PSoC5/RPi_SPIS.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:Generated_Source\PSoC5/RPi_SPIS.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:Generated_Source\PSoC5/RPi_SPIS.c **** *  clearing the FIFO and Status Register.
  62:Generated_Source\PSoC5/RPi_SPIS.c **** *
  63:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
  64:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
  65:Generated_Source\PSoC5/RPi_SPIS.c **** *
  66:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
  67:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_Init(void) 
  68:Generated_Source\PSoC5/RPi_SPIS.c **** {
  36              		.loc 1 68 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  69:Generated_Source\PSoC5/RPi_SPIS.c ****     /*Initialize the Bit counter */
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 3


  70:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_COUNTER_PERIOD_REG = RPi_SPIS_BITCTR_INIT;
  46              		.loc 1 70 0
  47 0004 0D4B     		ldr	r3, .L2
  48 0006 0722     		movs	r2, #7
  49 0008 1A70     		strb	r2, [r3]
  71:Generated_Source\PSoC5/RPi_SPIS.c **** 
  72:Generated_Source\PSoC5/RPi_SPIS.c ****     /* ISR initialization */
  73:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_TX_INT_ENABLED)
  74:Generated_Source\PSoC5/RPi_SPIS.c **** 
  75:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_TX_ISR_NUMBER);
  76:Generated_Source\PSoC5/RPi_SPIS.c **** 
  77:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Set the ISR to point to the RPi_SPIS_isr Interrupt. */
  78:Generated_Source\PSoC5/RPi_SPIS.c ****         (void)CyIntSetVector(RPi_SPIS_TX_ISR_NUMBER, &RPi_SPIS_TX_ISR);
  79:Generated_Source\PSoC5/RPi_SPIS.c **** 
  80:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Set the priority. */
  81:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntSetPriority(RPi_SPIS_TX_ISR_NUMBER, RPi_SPIS_TX_ISR_PRIORITY);
  82:Generated_Source\PSoC5/RPi_SPIS.c **** 
  83:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_TX_INT_ENABLED */
  84:Generated_Source\PSoC5/RPi_SPIS.c **** 
  85:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_RX_INT_ENABLED)
  86:Generated_Source\PSoC5/RPi_SPIS.c **** 
  87:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_RX_ISR_NUMBER);
  50              		.loc 1 87 0
  51 000a 0D4B     		ldr	r3, .L2+4
  52 000c 0822     		movs	r2, #8
  53 000e 1A60     		str	r2, [r3]
  88:Generated_Source\PSoC5/RPi_SPIS.c **** 
  89:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Set the ISR to point to the RPi_SPIS_isr Interrupt. */
  90:Generated_Source\PSoC5/RPi_SPIS.c ****         (void)CyIntSetVector(RPi_SPIS_RX_ISR_NUMBER, &RPi_SPIS_RX_ISR);
  54              		.loc 1 90 0
  55 0010 0C49     		ldr	r1, .L2+8
  56 0012 0320     		movs	r0, #3
  57 0014 FFF7FEFF 		bl	CyIntSetVector
  91:Generated_Source\PSoC5/RPi_SPIS.c **** 
  92:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Set the priority. */
  93:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntSetPriority(RPi_SPIS_RX_ISR_NUMBER, RPi_SPIS_RX_ISR_PRIORITY);
  58              		.loc 1 93 0
  59 0018 0721     		movs	r1, #7
  60 001a 0320     		movs	r0, #3
  61 001c FFF7FEFF 		bl	CyIntSetPriority
  94:Generated_Source\PSoC5/RPi_SPIS.c **** 
  95:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_RX_INT_ENABLED */
  96:Generated_Source\PSoC5/RPi_SPIS.c **** 
  97:Generated_Source\PSoC5/RPi_SPIS.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_ClearFIFO();
  62              		.loc 1 98 0
  63 0020 FFF7FEFF 		bl	RPi_SPIS_ClearFIFO
  99:Generated_Source\PSoC5/RPi_SPIS.c **** 
 100:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_RX_SOFTWARE_BUF_ENABLED)
 101:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_rxBufferFull = 0u;
 102:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_rxBufferRead = 0u;
 103:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_rxBufferWrite = 0u;
 104:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
 105:Generated_Source\PSoC5/RPi_SPIS.c **** 
 106:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_TX_SOFTWARE_BUF_ENABLED)
 107:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_txBufferFull = 0u;
 108:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_txBufferRead = 0u;
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 4


 109:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_txBufferWrite = 0u;
 110:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 111:Generated_Source\PSoC5/RPi_SPIS.c **** 
 112:Generated_Source\PSoC5/RPi_SPIS.c ****     (void) RPi_SPIS_ReadTxStatus(); /* Clear any pending status bits */
  64              		.loc 1 112 0
  65 0024 FFF7FEFF 		bl	RPi_SPIS_ReadTxStatus
 113:Generated_Source\PSoC5/RPi_SPIS.c ****     (void) RPi_SPIS_ReadRxStatus(); /* Clear any pending status bits */
  66              		.loc 1 113 0
  67 0028 FFF7FEFF 		bl	RPi_SPIS_ReadRxStatus
 114:Generated_Source\PSoC5/RPi_SPIS.c **** 
 115:Generated_Source\PSoC5/RPi_SPIS.c **** 
 116:Generated_Source\PSoC5/RPi_SPIS.c ****     /* Configure the Initial interrupt mask */
 117:Generated_Source\PSoC5/RPi_SPIS.c ****     #if (RPi_SPIS_TX_SOFTWARE_BUF_ENABLED)
 118:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_STATUS_MASK_REG  = (RPi_SPIS_TX_INIT_INTERRUPTS_MASK &
 119:Generated_Source\PSoC5/RPi_SPIS.c ****                                                 (uint8)~RPi_SPIS_STS_TX_FIFO_NOT_FULL);
 120:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 121:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_STATUS_MASK_REG  = RPi_SPIS_TX_INIT_INTERRUPTS_MASK;
  68              		.loc 1 121 0
  69 002c 064B     		ldr	r3, .L2+12
  70 002e 0022     		movs	r2, #0
  71 0030 1A70     		strb	r2, [r3]
 122:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 123:Generated_Source\PSoC5/RPi_SPIS.c **** 
 124:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_RX_STATUS_MASK_REG  = RPi_SPIS_RX_INIT_INTERRUPTS_MASK;
  72              		.loc 1 124 0
  73 0032 064B     		ldr	r3, .L2+16
  74 0034 0022     		movs	r2, #0
  75 0036 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/RPi_SPIS.c **** }
  76              		.loc 1 125 0
  77 0038 00BF     		nop
  78 003a 80BD     		pop	{r7, pc}
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 003c 88650040 		.word	1073767816
  83 0040 80E100E0 		.word	-536813184
  84 0044 00000000 		.word	RPi_SPIS_RX_ISR
  85 0048 84640040 		.word	1073767556
  86 004c 8C640040 		.word	1073767564
  87              		.cfi_endproc
  88              	.LFE0:
  89              		.size	RPi_SPIS_Init, .-RPi_SPIS_Init
  90              		.section	.text.RPi_SPIS_Enable,"ax",%progbits
  91              		.align	2
  92              		.global	RPi_SPIS_Enable
  93              		.thumb
  94              		.thumb_func
  95              		.type	RPi_SPIS_Enable, %function
  96              	RPi_SPIS_Enable:
  97              	.LFB1:
 126:Generated_Source\PSoC5/RPi_SPIS.c **** 
 127:Generated_Source\PSoC5/RPi_SPIS.c **** 
 128:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 129:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_Enable
 130:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 131:Generated_Source\PSoC5/RPi_SPIS.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 5


 132:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 133:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable SPIS component.
 134:Generated_Source\PSoC5/RPi_SPIS.c **** *
 135:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 136:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 137:Generated_Source\PSoC5/RPi_SPIS.c **** *
 138:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 139:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 140:Generated_Source\PSoC5/RPi_SPIS.c **** *
 141:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 142:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_Enable(void) 
 143:Generated_Source\PSoC5/RPi_SPIS.c **** {
  98              		.loc 1 143 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 8
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102 0000 80B5     		push	{r7, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 7, -8
 105              		.cfi_offset 14, -4
 106 0002 82B0     		sub	sp, sp, #8
 107              		.cfi_def_cfa_offset 16
 108 0004 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 144:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 enableInterrupts;
 145:Generated_Source\PSoC5/RPi_SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 110              		.loc 1 145 0
 111 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 112 000a 0346     		mov	r3, r0
 113 000c FB71     		strb	r3, [r7, #7]
 146:Generated_Source\PSoC5/RPi_SPIS.c **** 
 147:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_COUNTER_CONTROL_REG |= RPi_SPIS_CNTR_ENABLE;
 114              		.loc 1 147 0
 115 000e 114A     		ldr	r2, .L5
 116 0010 104B     		ldr	r3, .L5
 117 0012 1B78     		ldrb	r3, [r3]
 118 0014 DBB2     		uxtb	r3, r3
 119 0016 43F02003 		orr	r3, r3, #32
 120 001a DBB2     		uxtb	r3, r3
 121 001c 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_TX_STATUS_ACTL_REG |= RPi_SPIS_INT_ENABLE;
 122              		.loc 1 148 0
 123 001e 0E4A     		ldr	r2, .L5+4
 124 0020 0D4B     		ldr	r3, .L5+4
 125 0022 1B78     		ldrb	r3, [r3]
 126 0024 DBB2     		uxtb	r3, r3
 127 0026 43F01003 		orr	r3, r3, #16
 128 002a DBB2     		uxtb	r3, r3
 129 002c 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_RX_STATUS_ACTL_REG |= RPi_SPIS_INT_ENABLE;
 130              		.loc 1 149 0
 131 002e 0B4A     		ldr	r2, .L5+8
 132 0030 0A4B     		ldr	r3, .L5+8
 133 0032 1B78     		ldrb	r3, [r3]
 134 0034 DBB2     		uxtb	r3, r3
 135 0036 43F01003 		orr	r3, r3, #16
 136 003a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 6


 137 003c 1370     		strb	r3, [r2]
 150:Generated_Source\PSoC5/RPi_SPIS.c **** 
 151:Generated_Source\PSoC5/RPi_SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 138              		.loc 1 151 0
 139 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 140 0040 1846     		mov	r0, r3
 141 0042 FFF7FEFF 		bl	CyExitCriticalSection
 152:Generated_Source\PSoC5/RPi_SPIS.c **** 
 153:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_TX_INT_ENABLED)
 154:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntEnable(RPi_SPIS_TX_ISR_NUMBER);
 155:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_TX_INT_ENABLED */
 156:Generated_Source\PSoC5/RPi_SPIS.c **** 
 157:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_RX_INT_ENABLED)
 158:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntEnable(RPi_SPIS_RX_ISR_NUMBER);
 142              		.loc 1 158 0
 143 0046 064B     		ldr	r3, .L5+12
 144 0048 0822     		movs	r2, #8
 145 004a 1A60     		str	r2, [r3]
 159:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_RX_INT_ENABLED */
 160:Generated_Source\PSoC5/RPi_SPIS.c **** }
 146              		.loc 1 160 0
 147 004c 00BF     		nop
 148 004e 0837     		adds	r7, r7, #8
 149              		.cfi_def_cfa_offset 8
 150 0050 BD46     		mov	sp, r7
 151              		.cfi_def_cfa_register 13
 152              		@ sp needed
 153 0052 80BD     		pop	{r7, pc}
 154              	.L6:
 155              		.align	2
 156              	.L5:
 157 0054 98650040 		.word	1073767832
 158 0058 94640040 		.word	1073767572
 159 005c 9C640040 		.word	1073767580
 160 0060 00E100E0 		.word	-536813312
 161              		.cfi_endproc
 162              	.LFE1:
 163              		.size	RPi_SPIS_Enable, .-RPi_SPIS_Enable
 164              		.section	.text.RPi_SPIS_Start,"ax",%progbits
 165              		.align	2
 166              		.global	RPi_SPIS_Start
 167              		.thumb
 168              		.thumb_func
 169              		.type	RPi_SPIS_Start, %function
 170              	RPi_SPIS_Start:
 171              	.LFB2:
 161:Generated_Source\PSoC5/RPi_SPIS.c **** 
 162:Generated_Source\PSoC5/RPi_SPIS.c **** 
 163:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_Start
 165:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 166:Generated_Source\PSoC5/RPi_SPIS.c **** *
 167:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 168:Generated_Source\PSoC5/RPi_SPIS.c **** *  Initialize and Enable the SPI Slave component.
 169:Generated_Source\PSoC5/RPi_SPIS.c **** *
 170:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 171:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 7


 172:Generated_Source\PSoC5/RPi_SPIS.c **** *
 173:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 174:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 175:Generated_Source\PSoC5/RPi_SPIS.c **** *
 176:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 177:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_initVar - used to check initial configuration, modified on
 178:Generated_Source\PSoC5/RPi_SPIS.c **** *  first function call.
 179:Generated_Source\PSoC5/RPi_SPIS.c **** *
 180:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 181:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable the clock input to enable operation.
 182:Generated_Source\PSoC5/RPi_SPIS.c **** *
 183:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
 184:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
 185:Generated_Source\PSoC5/RPi_SPIS.c **** *
 186:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 187:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_Start(void) 
 188:Generated_Source\PSoC5/RPi_SPIS.c **** {
 172              		.loc 1 188 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 189:Generated_Source\PSoC5/RPi_SPIS.c ****     if(RPi_SPIS_initVar == 0u)
 182              		.loc 1 189 0
 183 0004 064B     		ldr	r3, .L9
 184 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 185 0008 002B     		cmp	r3, #0
 186 000a 04D1     		bne	.L8
 190:Generated_Source\PSoC5/RPi_SPIS.c ****     {
 191:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_Init();
 187              		.loc 1 191 0
 188 000c FFF7FEFF 		bl	RPi_SPIS_Init
 192:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_initVar = 1u;
 189              		.loc 1 192 0
 190 0010 034B     		ldr	r3, .L9
 191 0012 0122     		movs	r2, #1
 192 0014 1A70     		strb	r2, [r3]
 193              	.L8:
 193:Generated_Source\PSoC5/RPi_SPIS.c ****     }
 194:Generated_Source\PSoC5/RPi_SPIS.c **** 
 195:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_Enable();
 194              		.loc 1 195 0
 195 0016 FFF7FEFF 		bl	RPi_SPIS_Enable
 196:Generated_Source\PSoC5/RPi_SPIS.c **** }
 196              		.loc 1 196 0
 197 001a 00BF     		nop
 198 001c 80BD     		pop	{r7, pc}
 199              	.L10:
 200 001e 00BF     		.align	2
 201              	.L9:
 202 0020 00000000 		.word	RPi_SPIS_initVar
 203              		.cfi_endproc
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 8


 204              	.LFE2:
 205              		.size	RPi_SPIS_Start, .-RPi_SPIS_Start
 206              		.section	.text.RPi_SPIS_Stop,"ax",%progbits
 207              		.align	2
 208              		.global	RPi_SPIS_Stop
 209              		.thumb
 210              		.thumb_func
 211              		.type	RPi_SPIS_Stop, %function
 212              	RPi_SPIS_Stop:
 213              	.LFB3:
 197:Generated_Source\PSoC5/RPi_SPIS.c **** 
 198:Generated_Source\PSoC5/RPi_SPIS.c **** 
 199:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 200:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_Stop
 201:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 202:Generated_Source\PSoC5/RPi_SPIS.c **** *
 203:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 204:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable the SPI Slave component.
 205:Generated_Source\PSoC5/RPi_SPIS.c **** *
 206:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 207:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 208:Generated_Source\PSoC5/RPi_SPIS.c **** *
 209:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 210:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 211:Generated_Source\PSoC5/RPi_SPIS.c **** *
 212:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 213:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable the internal interrupt if one is used.
 214:Generated_Source\PSoC5/RPi_SPIS.c **** *
 215:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_Stop(void) 
 217:Generated_Source\PSoC5/RPi_SPIS.c **** {
 214              		.loc 1 217 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 enableInterrupts;
 219:Generated_Source\PSoC5/RPi_SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 226              		.loc 1 219 0
 227 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 228 000a 0346     		mov	r3, r0
 229 000c FB71     		strb	r3, [r7, #7]
 220:Generated_Source\PSoC5/RPi_SPIS.c **** 
 221:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_TX_STATUS_ACTL_REG &= (uint8)~RPi_SPIS_INT_ENABLE;
 230              		.loc 1 221 0
 231 000e 0D4A     		ldr	r2, .L12
 232 0010 0C4B     		ldr	r3, .L12
 233 0012 1B78     		ldrb	r3, [r3]
 234 0014 DBB2     		uxtb	r3, r3
 235 0016 23F01003 		bic	r3, r3, #16
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 9


 236 001a DBB2     		uxtb	r3, r3
 237 001c 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_RX_STATUS_ACTL_REG &= (uint8)~RPi_SPIS_INT_ENABLE;
 238              		.loc 1 222 0
 239 001e 0A4A     		ldr	r2, .L12+4
 240 0020 094B     		ldr	r3, .L12+4
 241 0022 1B78     		ldrb	r3, [r3]
 242 0024 DBB2     		uxtb	r3, r3
 243 0026 23F01003 		bic	r3, r3, #16
 244 002a DBB2     		uxtb	r3, r3
 245 002c 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/RPi_SPIS.c **** 
 224:Generated_Source\PSoC5/RPi_SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 246              		.loc 1 224 0
 247 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 248 0030 1846     		mov	r0, r3
 249 0032 FFF7FEFF 		bl	CyExitCriticalSection
 225:Generated_Source\PSoC5/RPi_SPIS.c **** 
 226:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_TX_INT_ENABLED)
 227:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_TX_ISR_NUMBER);
 228:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_TX_INT_ENABLED */
 229:Generated_Source\PSoC5/RPi_SPIS.c **** 
 230:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_RX_INT_ENABLED)
 231:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_RX_ISR_NUMBER);
 250              		.loc 1 231 0
 251 0036 054B     		ldr	r3, .L12+8
 252 0038 0822     		movs	r2, #8
 253 003a 1A60     		str	r2, [r3]
 232:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_RX_INT_ENABLED */
 233:Generated_Source\PSoC5/RPi_SPIS.c **** }
 254              		.loc 1 233 0
 255 003c 00BF     		nop
 256 003e 0837     		adds	r7, r7, #8
 257              		.cfi_def_cfa_offset 8
 258 0040 BD46     		mov	sp, r7
 259              		.cfi_def_cfa_register 13
 260              		@ sp needed
 261 0042 80BD     		pop	{r7, pc}
 262              	.L13:
 263              		.align	2
 264              	.L12:
 265 0044 94640040 		.word	1073767572
 266 0048 9C640040 		.word	1073767580
 267 004c 80E100E0 		.word	-536813184
 268              		.cfi_endproc
 269              	.LFE3:
 270              		.size	RPi_SPIS_Stop, .-RPi_SPIS_Stop
 271              		.section	.text.RPi_SPIS_EnableTxInt,"ax",%progbits
 272              		.align	2
 273              		.global	RPi_SPIS_EnableTxInt
 274              		.thumb
 275              		.thumb_func
 276              		.type	RPi_SPIS_EnableTxInt, %function
 277              	RPi_SPIS_EnableTxInt:
 278              	.LFB4:
 234:Generated_Source\PSoC5/RPi_SPIS.c **** 
 235:Generated_Source\PSoC5/RPi_SPIS.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 10


 236:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 237:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_EnableTxInt
 238:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 239:Generated_Source\PSoC5/RPi_SPIS.c **** *
 240:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 241:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable internal Tx interrupt generation.
 242:Generated_Source\PSoC5/RPi_SPIS.c **** *
 243:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 244:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 245:Generated_Source\PSoC5/RPi_SPIS.c **** *
 246:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 247:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 248:Generated_Source\PSoC5/RPi_SPIS.c **** *
 249:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 250:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:Generated_Source\PSoC5/RPi_SPIS.c **** *
 252:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 253:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_EnableTxInt(void) 
 254:Generated_Source\PSoC5/RPi_SPIS.c **** {
 279              		.loc 1 254 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 255:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_TX_INT_ENABLED)
 256:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntEnable(RPi_SPIS_TX_ISR_NUMBER);
 257:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_TX_INT_ENABLED */
 258:Generated_Source\PSoC5/RPi_SPIS.c **** }
 289              		.loc 1 258 0
 290 0004 00BF     		nop
 291 0006 BD46     		mov	sp, r7
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 0008 80BC     		pop	{r7}
 295              		.cfi_restore 7
 296              		.cfi_def_cfa_offset 0
 297 000a 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE4:
 300              		.size	RPi_SPIS_EnableTxInt, .-RPi_SPIS_EnableTxInt
 301              		.section	.text.RPi_SPIS_EnableRxInt,"ax",%progbits
 302              		.align	2
 303              		.global	RPi_SPIS_EnableRxInt
 304              		.thumb
 305              		.thumb_func
 306              		.type	RPi_SPIS_EnableRxInt, %function
 307              	RPi_SPIS_EnableRxInt:
 308              	.LFB5:
 259:Generated_Source\PSoC5/RPi_SPIS.c **** 
 260:Generated_Source\PSoC5/RPi_SPIS.c **** 
 261:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 262:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_EnableRxInt
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 11


 263:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 264:Generated_Source\PSoC5/RPi_SPIS.c **** *
 265:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 266:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable internal Rx interrupt generation.
 267:Generated_Source\PSoC5/RPi_SPIS.c **** *
 268:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 269:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 270:Generated_Source\PSoC5/RPi_SPIS.c **** *
 271:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 272:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 273:Generated_Source\PSoC5/RPi_SPIS.c **** *
 274:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 275:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:Generated_Source\PSoC5/RPi_SPIS.c **** *
 277:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 278:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_EnableRxInt(void) 
 279:Generated_Source\PSoC5/RPi_SPIS.c **** {
 309              		.loc 1 279 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 280:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_RX_INT_ENABLED)
 281:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntEnable(RPi_SPIS_RX_ISR_NUMBER);
 319              		.loc 1 281 0
 320 0004 034B     		ldr	r3, .L16
 321 0006 0822     		movs	r2, #8
 322 0008 1A60     		str	r2, [r3]
 282:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_RX_INT_ENABLED */
 283:Generated_Source\PSoC5/RPi_SPIS.c **** }
 323              		.loc 1 283 0
 324 000a 00BF     		nop
 325 000c BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 000e 80BC     		pop	{r7}
 329              		.cfi_restore 7
 330              		.cfi_def_cfa_offset 0
 331 0010 7047     		bx	lr
 332              	.L17:
 333 0012 00BF     		.align	2
 334              	.L16:
 335 0014 00E100E0 		.word	-536813312
 336              		.cfi_endproc
 337              	.LFE5:
 338              		.size	RPi_SPIS_EnableRxInt, .-RPi_SPIS_EnableRxInt
 339              		.section	.text.RPi_SPIS_DisableTxInt,"ax",%progbits
 340              		.align	2
 341              		.global	RPi_SPIS_DisableTxInt
 342              		.thumb
 343              		.thumb_func
 344              		.type	RPi_SPIS_DisableTxInt, %function
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 12


 345              	RPi_SPIS_DisableTxInt:
 346              	.LFB6:
 284:Generated_Source\PSoC5/RPi_SPIS.c **** 
 285:Generated_Source\PSoC5/RPi_SPIS.c **** 
 286:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 287:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_DisableTxInt
 288:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 289:Generated_Source\PSoC5/RPi_SPIS.c **** *
 290:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 291:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable internal Tx interrupt generation.
 292:Generated_Source\PSoC5/RPi_SPIS.c **** *
 293:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 294:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 295:Generated_Source\PSoC5/RPi_SPIS.c **** *
 296:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 297:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 298:Generated_Source\PSoC5/RPi_SPIS.c **** *
 299:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 300:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:Generated_Source\PSoC5/RPi_SPIS.c **** *
 302:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 303:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_DisableTxInt(void) 
 304:Generated_Source\PSoC5/RPi_SPIS.c **** {
 347              		.loc 1 304 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352 0000 80B4     		push	{r7}
 353              		.cfi_def_cfa_offset 4
 354              		.cfi_offset 7, -4
 355 0002 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 305:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_TX_INT_ENABLED)
 306:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_TX_ISR_NUMBER);
 307:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_TX_INT_ENABLED */
 308:Generated_Source\PSoC5/RPi_SPIS.c **** }
 357              		.loc 1 308 0
 358 0004 00BF     		nop
 359 0006 BD46     		mov	sp, r7
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 0008 80BC     		pop	{r7}
 363              		.cfi_restore 7
 364              		.cfi_def_cfa_offset 0
 365 000a 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE6:
 368              		.size	RPi_SPIS_DisableTxInt, .-RPi_SPIS_DisableTxInt
 369              		.section	.text.RPi_SPIS_DisableRxInt,"ax",%progbits
 370              		.align	2
 371              		.global	RPi_SPIS_DisableRxInt
 372              		.thumb
 373              		.thumb_func
 374              		.type	RPi_SPIS_DisableRxInt, %function
 375              	RPi_SPIS_DisableRxInt:
 376              	.LFB7:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 13


 309:Generated_Source\PSoC5/RPi_SPIS.c **** 
 310:Generated_Source\PSoC5/RPi_SPIS.c **** 
 311:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_DisableRxInt
 313:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 314:Generated_Source\PSoC5/RPi_SPIS.c **** *
 315:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 316:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable internal Rx interrupt generation.
 317:Generated_Source\PSoC5/RPi_SPIS.c **** *
 318:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 319:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 320:Generated_Source\PSoC5/RPi_SPIS.c **** *
 321:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 322:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 323:Generated_Source\PSoC5/RPi_SPIS.c **** *
 324:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 325:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:Generated_Source\PSoC5/RPi_SPIS.c **** *
 327:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_DisableRxInt(void) 
 329:Generated_Source\PSoC5/RPi_SPIS.c **** {
 377              		.loc 1 329 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382 0000 80B4     		push	{r7}
 383              		.cfi_def_cfa_offset 4
 384              		.cfi_offset 7, -4
 385 0002 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 330:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_RX_INT_ENABLED)
 331:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_RX_ISR_NUMBER);
 387              		.loc 1 331 0
 388 0004 034B     		ldr	r3, .L20
 389 0006 0822     		movs	r2, #8
 390 0008 1A60     		str	r2, [r3]
 332:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_RX_INT_ENABLED */
 333:Generated_Source\PSoC5/RPi_SPIS.c **** }
 391              		.loc 1 333 0
 392 000a 00BF     		nop
 393 000c BD46     		mov	sp, r7
 394              		.cfi_def_cfa_register 13
 395              		@ sp needed
 396 000e 80BC     		pop	{r7}
 397              		.cfi_restore 7
 398              		.cfi_def_cfa_offset 0
 399 0010 7047     		bx	lr
 400              	.L21:
 401 0012 00BF     		.align	2
 402              	.L20:
 403 0014 80E100E0 		.word	-536813184
 404              		.cfi_endproc
 405              	.LFE7:
 406              		.size	RPi_SPIS_DisableRxInt, .-RPi_SPIS_DisableRxInt
 407              		.section	.text.RPi_SPIS_SetTxInterruptMode,"ax",%progbits
 408              		.align	2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 14


 409              		.global	RPi_SPIS_SetTxInterruptMode
 410              		.thumb
 411              		.thumb_func
 412              		.type	RPi_SPIS_SetTxInterruptMode, %function
 413              	RPi_SPIS_SetTxInterruptMode:
 414              	.LFB8:
 334:Generated_Source\PSoC5/RPi_SPIS.c **** 
 335:Generated_Source\PSoC5/RPi_SPIS.c **** 
 336:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 337:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_SetTxInterruptMode
 338:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 339:Generated_Source\PSoC5/RPi_SPIS.c **** *
 340:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 341:Generated_Source\PSoC5/RPi_SPIS.c **** *  Configure which status bits trigger an interrupt event.
 342:Generated_Source\PSoC5/RPi_SPIS.c **** *
 343:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 344:Generated_Source\PSoC5/RPi_SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:Generated_Source\PSoC5/RPi_SPIS.c **** *  header file).
 346:Generated_Source\PSoC5/RPi_SPIS.c **** *
 347:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 348:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 349:Generated_Source\PSoC5/RPi_SPIS.c **** *
 350:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 351:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:Generated_Source\PSoC5/RPi_SPIS.c **** *
 353:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 354:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_SetTxInterruptMode(uint8 intSrc) 
 355:Generated_Source\PSoC5/RPi_SPIS.c **** {
 415              		.loc 1 355 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 8
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420 0000 80B4     		push	{r7}
 421              		.cfi_def_cfa_offset 4
 422              		.cfi_offset 7, -4
 423 0002 83B0     		sub	sp, sp, #12
 424              		.cfi_def_cfa_offset 16
 425 0004 00AF     		add	r7, sp, #0
 426              		.cfi_def_cfa_register 7
 427 0006 0346     		mov	r3, r0
 428 0008 FB71     		strb	r3, [r7, #7]
 356:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_TX_STATUS_MASK_REG  = intSrc;
 429              		.loc 1 356 0
 430 000a 044A     		ldr	r2, .L23
 431 000c FB79     		ldrb	r3, [r7, #7]
 432 000e 1370     		strb	r3, [r2]
 357:Generated_Source\PSoC5/RPi_SPIS.c **** }
 433              		.loc 1 357 0
 434 0010 00BF     		nop
 435 0012 0C37     		adds	r7, r7, #12
 436              		.cfi_def_cfa_offset 4
 437 0014 BD46     		mov	sp, r7
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 0016 80BC     		pop	{r7}
 441              		.cfi_restore 7
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 15


 442              		.cfi_def_cfa_offset 0
 443 0018 7047     		bx	lr
 444              	.L24:
 445 001a 00BF     		.align	2
 446              	.L23:
 447 001c 84640040 		.word	1073767556
 448              		.cfi_endproc
 449              	.LFE8:
 450              		.size	RPi_SPIS_SetTxInterruptMode, .-RPi_SPIS_SetTxInterruptMode
 451              		.section	.text.RPi_SPIS_SetRxInterruptMode,"ax",%progbits
 452              		.align	2
 453              		.global	RPi_SPIS_SetRxInterruptMode
 454              		.thumb
 455              		.thumb_func
 456              		.type	RPi_SPIS_SetRxInterruptMode, %function
 457              	RPi_SPIS_SetRxInterruptMode:
 458              	.LFB9:
 358:Generated_Source\PSoC5/RPi_SPIS.c **** 
 359:Generated_Source\PSoC5/RPi_SPIS.c **** 
 360:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 361:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_SetRxInterruptMode
 362:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 363:Generated_Source\PSoC5/RPi_SPIS.c **** *
 364:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 365:Generated_Source\PSoC5/RPi_SPIS.c **** *  Configure which status bits trigger an interrupt event.
 366:Generated_Source\PSoC5/RPi_SPIS.c **** *
 367:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 368:Generated_Source\PSoC5/RPi_SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:Generated_Source\PSoC5/RPi_SPIS.c **** *  header file).
 370:Generated_Source\PSoC5/RPi_SPIS.c **** *
 371:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 372:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 373:Generated_Source\PSoC5/RPi_SPIS.c **** *
 374:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 375:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:Generated_Source\PSoC5/RPi_SPIS.c **** *
 377:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 378:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_SetRxInterruptMode(uint8 intSrc) 
 379:Generated_Source\PSoC5/RPi_SPIS.c **** {
 459              		.loc 1 379 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 8
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 464 0000 80B4     		push	{r7}
 465              		.cfi_def_cfa_offset 4
 466              		.cfi_offset 7, -4
 467 0002 83B0     		sub	sp, sp, #12
 468              		.cfi_def_cfa_offset 16
 469 0004 00AF     		add	r7, sp, #0
 470              		.cfi_def_cfa_register 7
 471 0006 0346     		mov	r3, r0
 472 0008 FB71     		strb	r3, [r7, #7]
 380:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_RX_STATUS_MASK_REG  = intSrc;
 473              		.loc 1 380 0
 474 000a 044A     		ldr	r2, .L26
 475 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 16


 476 000e 1370     		strb	r3, [r2]
 381:Generated_Source\PSoC5/RPi_SPIS.c **** }
 477              		.loc 1 381 0
 478 0010 00BF     		nop
 479 0012 0C37     		adds	r7, r7, #12
 480              		.cfi_def_cfa_offset 4
 481 0014 BD46     		mov	sp, r7
 482              		.cfi_def_cfa_register 13
 483              		@ sp needed
 484 0016 80BC     		pop	{r7}
 485              		.cfi_restore 7
 486              		.cfi_def_cfa_offset 0
 487 0018 7047     		bx	lr
 488              	.L27:
 489 001a 00BF     		.align	2
 490              	.L26:
 491 001c 8C640040 		.word	1073767564
 492              		.cfi_endproc
 493              	.LFE9:
 494              		.size	RPi_SPIS_SetRxInterruptMode, .-RPi_SPIS_SetRxInterruptMode
 495              		.section	.text.RPi_SPIS_ReadTxStatus,"ax",%progbits
 496              		.align	2
 497              		.global	RPi_SPIS_ReadTxStatus
 498              		.thumb
 499              		.thumb_func
 500              		.type	RPi_SPIS_ReadTxStatus, %function
 501              	RPi_SPIS_ReadTxStatus:
 502              	.LFB10:
 382:Generated_Source\PSoC5/RPi_SPIS.c **** 
 383:Generated_Source\PSoC5/RPi_SPIS.c **** 
 384:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 385:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_ReadTxStatus
 386:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 387:Generated_Source\PSoC5/RPi_SPIS.c **** *
 388:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 389:Generated_Source\PSoC5/RPi_SPIS.c **** *  Read the Tx status register for the component.
 390:Generated_Source\PSoC5/RPi_SPIS.c **** *
 391:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 392:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 393:Generated_Source\PSoC5/RPi_SPIS.c **** *
 394:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 395:Generated_Source\PSoC5/RPi_SPIS.c **** *  Contents of the Tx status register.
 396:Generated_Source\PSoC5/RPi_SPIS.c **** *
 397:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 398:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_swStatusTx - used to store in software status register,
 399:Generated_Source\PSoC5/RPi_SPIS.c **** *  modified every function call - resets to zero.
 400:Generated_Source\PSoC5/RPi_SPIS.c **** *
 401:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 402:Generated_Source\PSoC5/RPi_SPIS.c **** *  Allows the user and the API to read the Tx status register for error
 403:Generated_Source\PSoC5/RPi_SPIS.c **** *  detection and flow control.
 404:Generated_Source\PSoC5/RPi_SPIS.c **** *
 405:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
 406:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear Tx status register of the component.
 407:Generated_Source\PSoC5/RPi_SPIS.c **** *
 408:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
 409:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
 410:Generated_Source\PSoC5/RPi_SPIS.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 17


 411:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 412:Generated_Source\PSoC5/RPi_SPIS.c **** uint8 RPi_SPIS_ReadTxStatus(void) 
 413:Generated_Source\PSoC5/RPi_SPIS.c **** {
 503              		.loc 1 413 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
 511 0002 83B0     		sub	sp, sp, #12
 512              		.cfi_def_cfa_offset 16
 513 0004 00AF     		add	r7, sp, #0
 514              		.cfi_def_cfa_register 7
 414:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 tmpStatus;
 415:Generated_Source\PSoC5/RPi_SPIS.c **** 
 416:Generated_Source\PSoC5/RPi_SPIS.c ****     #if (RPi_SPIS_TX_SOFTWARE_BUF_ENABLED)
 417:Generated_Source\PSoC5/RPi_SPIS.c **** 
 418:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableTxInt();
 419:Generated_Source\PSoC5/RPi_SPIS.c **** 
 420:Generated_Source\PSoC5/RPi_SPIS.c ****         tmpStatus = RPi_SPIS_GET_STATUS_TX(RPi_SPIS_swStatusTx);
 421:Generated_Source\PSoC5/RPi_SPIS.c **** 
 422:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_swStatusTx = 0u;
 423:Generated_Source\PSoC5/RPi_SPIS.c **** 
 424:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable Interrupts */
 425:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableTxInt();
 426:Generated_Source\PSoC5/RPi_SPIS.c **** 
 427:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* !RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 428:Generated_Source\PSoC5/RPi_SPIS.c **** 
 429:Generated_Source\PSoC5/RPi_SPIS.c ****         tmpStatus = RPi_SPIS_TX_STATUS_REG;
 515              		.loc 1 429 0
 516 0006 044B     		ldr	r3, .L30
 517 0008 1B78     		ldrb	r3, [r3]
 518 000a FB71     		strb	r3, [r7, #7]
 430:Generated_Source\PSoC5/RPi_SPIS.c **** 
 431:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 432:Generated_Source\PSoC5/RPi_SPIS.c **** 
 433:Generated_Source\PSoC5/RPi_SPIS.c ****     return(tmpStatus);
 519              		.loc 1 433 0
 520 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/RPi_SPIS.c **** }
 521              		.loc 1 434 0
 522 000e 1846     		mov	r0, r3
 523 0010 0C37     		adds	r7, r7, #12
 524              		.cfi_def_cfa_offset 4
 525 0012 BD46     		mov	sp, r7
 526              		.cfi_def_cfa_register 13
 527              		@ sp needed
 528 0014 80BC     		pop	{r7}
 529              		.cfi_restore 7
 530              		.cfi_def_cfa_offset 0
 531 0016 7047     		bx	lr
 532              	.L31:
 533              		.align	2
 534              	.L30:
 535 0018 64640040 		.word	1073767524
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 18


 536              		.cfi_endproc
 537              	.LFE10:
 538              		.size	RPi_SPIS_ReadTxStatus, .-RPi_SPIS_ReadTxStatus
 539              		.section	.text.RPi_SPIS_ReadRxStatus,"ax",%progbits
 540              		.align	2
 541              		.global	RPi_SPIS_ReadRxStatus
 542              		.thumb
 543              		.thumb_func
 544              		.type	RPi_SPIS_ReadRxStatus, %function
 545              	RPi_SPIS_ReadRxStatus:
 546              	.LFB11:
 435:Generated_Source\PSoC5/RPi_SPIS.c **** 
 436:Generated_Source\PSoC5/RPi_SPIS.c **** 
 437:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 438:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_ReadRxStatus
 439:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 440:Generated_Source\PSoC5/RPi_SPIS.c **** *
 441:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 442:Generated_Source\PSoC5/RPi_SPIS.c **** *  Read the Rx status register for the component.
 443:Generated_Source\PSoC5/RPi_SPIS.c **** *
 444:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 445:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 446:Generated_Source\PSoC5/RPi_SPIS.c **** *
 447:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 448:Generated_Source\PSoC5/RPi_SPIS.c **** *  Contents of the Rx status register.
 449:Generated_Source\PSoC5/RPi_SPIS.c **** *
 450:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 451:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_swStatusRx - used to store in software Rx status register,
 452:Generated_Source\PSoC5/RPi_SPIS.c **** *  modified every function call - resets to zero.
 453:Generated_Source\PSoC5/RPi_SPIS.c **** *
 454:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 455:Generated_Source\PSoC5/RPi_SPIS.c **** *  Allows the user and the API to read the Rx status register for error
 456:Generated_Source\PSoC5/RPi_SPIS.c **** *  detection and flow control.
 457:Generated_Source\PSoC5/RPi_SPIS.c **** *
 458:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
 459:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear Rx status register of the component.
 460:Generated_Source\PSoC5/RPi_SPIS.c **** *
 461:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
 462:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
 463:Generated_Source\PSoC5/RPi_SPIS.c **** *
 464:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/RPi_SPIS.c **** uint8 RPi_SPIS_ReadRxStatus(void) 
 466:Generated_Source\PSoC5/RPi_SPIS.c **** {
 547              		.loc 1 466 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552 0000 80B4     		push	{r7}
 553              		.cfi_def_cfa_offset 4
 554              		.cfi_offset 7, -4
 555 0002 83B0     		sub	sp, sp, #12
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 467:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 tmpStatus;
 468:Generated_Source\PSoC5/RPi_SPIS.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 19


 469:Generated_Source\PSoC5/RPi_SPIS.c ****     #if (RPi_SPIS_RX_SOFTWARE_BUF_ENABLED)
 470:Generated_Source\PSoC5/RPi_SPIS.c **** 
 471:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableRxInt();
 472:Generated_Source\PSoC5/RPi_SPIS.c **** 
 473:Generated_Source\PSoC5/RPi_SPIS.c ****         tmpStatus = RPi_SPIS_GET_STATUS_RX(RPi_SPIS_swStatusRx);
 474:Generated_Source\PSoC5/RPi_SPIS.c **** 
 475:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_swStatusRx = 0u;
 476:Generated_Source\PSoC5/RPi_SPIS.c **** 
 477:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable Interrupts */
 478:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableRxInt();
 479:Generated_Source\PSoC5/RPi_SPIS.c **** 
 480:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* !RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
 481:Generated_Source\PSoC5/RPi_SPIS.c **** 
 482:Generated_Source\PSoC5/RPi_SPIS.c ****         tmpStatus = RPi_SPIS_RX_STATUS_REG;
 559              		.loc 1 482 0
 560 0006 044B     		ldr	r3, .L34
 561 0008 1B78     		ldrb	r3, [r3]
 562 000a FB71     		strb	r3, [r7, #7]
 483:Generated_Source\PSoC5/RPi_SPIS.c **** 
 484:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
 485:Generated_Source\PSoC5/RPi_SPIS.c **** 
 486:Generated_Source\PSoC5/RPi_SPIS.c ****     return(tmpStatus);
 563              		.loc 1 486 0
 564 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487:Generated_Source\PSoC5/RPi_SPIS.c **** }
 565              		.loc 1 487 0
 566 000e 1846     		mov	r0, r3
 567 0010 0C37     		adds	r7, r7, #12
 568              		.cfi_def_cfa_offset 4
 569 0012 BD46     		mov	sp, r7
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 0014 80BC     		pop	{r7}
 573              		.cfi_restore 7
 574              		.cfi_def_cfa_offset 0
 575 0016 7047     		bx	lr
 576              	.L35:
 577              		.align	2
 578              	.L34:
 579 0018 6C640040 		.word	1073767532
 580              		.cfi_endproc
 581              	.LFE11:
 582              		.size	RPi_SPIS_ReadRxStatus, .-RPi_SPIS_ReadRxStatus
 583              		.section	.text.RPi_SPIS_WriteTxData,"ax",%progbits
 584              		.align	2
 585              		.global	RPi_SPIS_WriteTxData
 586              		.thumb
 587              		.thumb_func
 588              		.type	RPi_SPIS_WriteTxData, %function
 589              	RPi_SPIS_WriteTxData:
 590              	.LFB12:
 488:Generated_Source\PSoC5/RPi_SPIS.c **** 
 489:Generated_Source\PSoC5/RPi_SPIS.c **** 
 490:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 491:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_WriteTxData
 492:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 493:Generated_Source\PSoC5/RPi_SPIS.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 20


 494:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 495:Generated_Source\PSoC5/RPi_SPIS.c **** *  Write a byte of data to be sent across the SPI.
 496:Generated_Source\PSoC5/RPi_SPIS.c **** *
 497:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 498:Generated_Source\PSoC5/RPi_SPIS.c **** *  txDataByte: The data value to send across the SPI.
 499:Generated_Source\PSoC5/RPi_SPIS.c **** *
 500:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 501:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 502:Generated_Source\PSoC5/RPi_SPIS.c **** *
 503:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 504:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_txBufferWrite - used for the account of the bytes which
 505:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been written down in the TX software buffer, modified every function
 506:Generated_Source\PSoC5/RPi_SPIS.c **** *  call if TX Software Buffer is used.
 507:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_txBufferRead - used for the account of the bytes which
 508:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been read from the TX software buffer.
 509:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_txBuffer[RPi_SPIS_TX_BUFFER_SIZE] - used to store
 510:Generated_Source\PSoC5/RPi_SPIS.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:Generated_Source\PSoC5/RPi_SPIS.c **** *
 512:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 513:Generated_Source\PSoC5/RPi_SPIS.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:Generated_Source\PSoC5/RPi_SPIS.c **** *
 515:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
 516:Generated_Source\PSoC5/RPi_SPIS.c **** *  If this function is called again before the previous byte is finished then
 517:Generated_Source\PSoC5/RPi_SPIS.c **** *  the next byte will be appended to the transfer with no time between
 518:Generated_Source\PSoC5/RPi_SPIS.c **** *  the byte transfers. Clear Tx status register of the component.
 519:Generated_Source\PSoC5/RPi_SPIS.c **** *
 520:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
 521:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
 522:Generated_Source\PSoC5/RPi_SPIS.c **** *
 523:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 524:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_WriteTxData(uint8 txData) 
 525:Generated_Source\PSoC5/RPi_SPIS.c **** {
 591              		.loc 1 525 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 8
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 83B0     		sub	sp, sp, #12
 600              		.cfi_def_cfa_offset 16
 601 0004 00AF     		add	r7, sp, #0
 602              		.cfi_def_cfa_register 7
 603 0006 0346     		mov	r3, r0
 604 0008 FB71     		strb	r3, [r7, #7]
 526:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_TX_SOFTWARE_BUF_ENABLED)
 527:Generated_Source\PSoC5/RPi_SPIS.c **** 
 528:Generated_Source\PSoC5/RPi_SPIS.c ****         uint8 tempStatus;
 529:Generated_Source\PSoC5/RPi_SPIS.c ****         uint8 tmpTxBufferRead;
 530:Generated_Source\PSoC5/RPi_SPIS.c **** 
 531:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:Generated_Source\PSoC5/RPi_SPIS.c ****         do
 533:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 534:Generated_Source\PSoC5/RPi_SPIS.c ****             tmpTxBufferRead = RPi_SPIS_txBufferRead;
 535:Generated_Source\PSoC5/RPi_SPIS.c ****             if (0u == tmpTxBufferRead)
 536:Generated_Source\PSoC5/RPi_SPIS.c ****             {
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 21


 537:Generated_Source\PSoC5/RPi_SPIS.c ****                 tmpTxBufferRead = RPi_SPIS_TX_BUFFER_SIZE - 1u;
 538:Generated_Source\PSoC5/RPi_SPIS.c ****             }
 539:Generated_Source\PSoC5/RPi_SPIS.c ****             else
 540:Generated_Source\PSoC5/RPi_SPIS.c ****             {
 541:Generated_Source\PSoC5/RPi_SPIS.c ****                 tmpTxBufferRead--;
 542:Generated_Source\PSoC5/RPi_SPIS.c ****             }
 543:Generated_Source\PSoC5/RPi_SPIS.c **** 
 544:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 545:Generated_Source\PSoC5/RPi_SPIS.c ****         while(tmpTxBufferRead == RPi_SPIS_txBufferWrite);
 546:Generated_Source\PSoC5/RPi_SPIS.c **** 
 547:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableTxInt();
 549:Generated_Source\PSoC5/RPi_SPIS.c **** 
 550:Generated_Source\PSoC5/RPi_SPIS.c ****         tempStatus = RPi_SPIS_GET_STATUS_TX(RPi_SPIS_swStatusTx);
 551:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_swStatusTx = tempStatus;
 552:Generated_Source\PSoC5/RPi_SPIS.c **** 
 553:Generated_Source\PSoC5/RPi_SPIS.c ****         if((RPi_SPIS_txBufferRead == RPi_SPIS_txBufferWrite) &&
 554:Generated_Source\PSoC5/RPi_SPIS.c ****             (0u != (RPi_SPIS_swStatusTx & RPi_SPIS_STS_TX_FIFO_NOT_FULL)))
 555:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 556:Generated_Source\PSoC5/RPi_SPIS.c ****             /* Put data element into the TX FIFO */
 557:Generated_Source\PSoC5/RPi_SPIS.c ****             CY_SET_REG8(RPi_SPIS_TXDATA_PTR, txData);
 558:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 559:Generated_Source\PSoC5/RPi_SPIS.c ****         else
 560:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 561:Generated_Source\PSoC5/RPi_SPIS.c ****             /* Put data element into the software buffer */
 562:Generated_Source\PSoC5/RPi_SPIS.c ****             RPi_SPIS_txBufferWrite++;
 563:Generated_Source\PSoC5/RPi_SPIS.c ****             if(RPi_SPIS_txBufferWrite >= RPi_SPIS_TX_BUFFER_SIZE)
 564:Generated_Source\PSoC5/RPi_SPIS.c ****             {
 565:Generated_Source\PSoC5/RPi_SPIS.c ****                 RPi_SPIS_txBufferWrite = 0u;
 566:Generated_Source\PSoC5/RPi_SPIS.c ****             }
 567:Generated_Source\PSoC5/RPi_SPIS.c **** 
 568:Generated_Source\PSoC5/RPi_SPIS.c ****             if(RPi_SPIS_txBufferWrite == RPi_SPIS_txBufferRead)
 569:Generated_Source\PSoC5/RPi_SPIS.c ****             {
 570:Generated_Source\PSoC5/RPi_SPIS.c ****                 RPi_SPIS_txBufferRead++;
 571:Generated_Source\PSoC5/RPi_SPIS.c ****                 if(RPi_SPIS_txBufferRead >= RPi_SPIS_RX_BUFFER_SIZE)
 572:Generated_Source\PSoC5/RPi_SPIS.c ****                 {
 573:Generated_Source\PSoC5/RPi_SPIS.c ****                     RPi_SPIS_txBufferRead = 0u;
 574:Generated_Source\PSoC5/RPi_SPIS.c ****                 }
 575:Generated_Source\PSoC5/RPi_SPIS.c ****                 RPi_SPIS_txBufferFull = 1u;
 576:Generated_Source\PSoC5/RPi_SPIS.c ****             }
 577:Generated_Source\PSoC5/RPi_SPIS.c **** 
 578:Generated_Source\PSoC5/RPi_SPIS.c ****             RPi_SPIS_txBuffer[RPi_SPIS_txBufferWrite] = txData;
 579:Generated_Source\PSoC5/RPi_SPIS.c **** 
 580:Generated_Source\PSoC5/RPi_SPIS.c ****             RPi_SPIS_TX_STATUS_MASK_REG |= RPi_SPIS_STS_TX_FIFO_NOT_FULL;
 581:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 582:Generated_Source\PSoC5/RPi_SPIS.c **** 
 583:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable Interrupt. */
 584:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableTxInt();
 585:Generated_Source\PSoC5/RPi_SPIS.c **** 
 586:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* !RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 587:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Wait until TX FIFO has a place */
 588:Generated_Source\PSoC5/RPi_SPIS.c ****         while(0u == (RPi_SPIS_TX_STATUS_REG & RPi_SPIS_STS_TX_FIFO_NOT_FULL))
 605              		.loc 1 588 0
 606 000a 00BF     		nop
 607              	.L37:
 608              		.loc 1 588 0 is_stmt 0 discriminator 1
 609 000c 074B     		ldr	r3, .L38
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 22


 610 000e 1B78     		ldrb	r3, [r3]
 611 0010 DBB2     		uxtb	r3, r3
 612 0012 03F00203 		and	r3, r3, #2
 613 0016 002B     		cmp	r3, #0
 614 0018 F8D0     		beq	.L37
 589:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 590:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 591:Generated_Source\PSoC5/RPi_SPIS.c **** 
 592:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Put data element into the TX FIFO */
 593:Generated_Source\PSoC5/RPi_SPIS.c ****         CY_SET_REG8(RPi_SPIS_TXDATA_PTR, txData);
 615              		.loc 1 593 0 is_stmt 1
 616 001a 054A     		ldr	r2, .L38+4
 617 001c FB79     		ldrb	r3, [r7, #7]
 618 001e 1370     		strb	r3, [r2]
 594:Generated_Source\PSoC5/RPi_SPIS.c ****         
 595:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 596:Generated_Source\PSoC5/RPi_SPIS.c **** }
 619              		.loc 1 596 0
 620 0020 00BF     		nop
 621 0022 0C37     		adds	r7, r7, #12
 622              		.cfi_def_cfa_offset 4
 623 0024 BD46     		mov	sp, r7
 624              		.cfi_def_cfa_register 13
 625              		@ sp needed
 626 0026 80BC     		pop	{r7}
 627              		.cfi_restore 7
 628              		.cfi_def_cfa_offset 0
 629 0028 7047     		bx	lr
 630              	.L39:
 631 002a 00BF     		.align	2
 632              	.L38:
 633 002c 64640040 		.word	1073767524
 634 0030 48650040 		.word	1073767752
 635              		.cfi_endproc
 636              	.LFE12:
 637              		.size	RPi_SPIS_WriteTxData, .-RPi_SPIS_WriteTxData
 638              		.section	.text.RPi_SPIS_WriteTxDataZero,"ax",%progbits
 639              		.align	2
 640              		.global	RPi_SPIS_WriteTxDataZero
 641              		.thumb
 642              		.thumb_func
 643              		.type	RPi_SPIS_WriteTxDataZero, %function
 644              	RPi_SPIS_WriteTxDataZero:
 645              	.LFB13:
 597:Generated_Source\PSoC5/RPi_SPIS.c **** 
 598:Generated_Source\PSoC5/RPi_SPIS.c **** #if(RPi_SPIS_MODE_USE_ZERO != 0u)
 599:Generated_Source\PSoC5/RPi_SPIS.c **** 
 600:Generated_Source\PSoC5/RPi_SPIS.c ****     /*******************************************************************************
 601:Generated_Source\PSoC5/RPi_SPIS.c ****     * Function Name: RPi_SPIS_WriteTxDataZero
 602:Generated_Source\PSoC5/RPi_SPIS.c ****     ********************************************************************************
 603:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 604:Generated_Source\PSoC5/RPi_SPIS.c ****     * Summary:
 605:Generated_Source\PSoC5/RPi_SPIS.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:Generated_Source\PSoC5/RPi_SPIS.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 608:Generated_Source\PSoC5/RPi_SPIS.c ****     * Parameters:
 609:Generated_Source\PSoC5/RPi_SPIS.c ****     *  txDataByte: The data value to send across the SPI.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 23


 610:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 611:Generated_Source\PSoC5/RPi_SPIS.c ****     * Return:
 612:Generated_Source\PSoC5/RPi_SPIS.c ****     *  None.
 613:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 614:Generated_Source\PSoC5/RPi_SPIS.c ****     * Theory:
 615:Generated_Source\PSoC5/RPi_SPIS.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:Generated_Source\PSoC5/RPi_SPIS.c ****     *  status register of the component.
 617:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 618:Generated_Source\PSoC5/RPi_SPIS.c ****     *******************************************************************************/
 619:Generated_Source\PSoC5/RPi_SPIS.c ****     void RPi_SPIS_WriteTxDataZero(uint8 txDataByte)
 620:Generated_Source\PSoC5/RPi_SPIS.c ****                                         
 621:Generated_Source\PSoC5/RPi_SPIS.c ****     {
 646              		.loc 1 621 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 8
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651 0000 80B4     		push	{r7}
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 7, -4
 654 0002 83B0     		sub	sp, sp, #12
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 658 0006 0346     		mov	r3, r0
 659 0008 FB71     		strb	r3, [r7, #7]
 622:Generated_Source\PSoC5/RPi_SPIS.c ****         CY_SET_REG8(RPi_SPIS_TXDATA_ZERO_PTR, txDataByte);
 660              		.loc 1 622 0
 661 000a 044A     		ldr	r2, .L41
 662 000c FB79     		ldrb	r3, [r7, #7]
 663 000e 1370     		strb	r3, [r2]
 623:Generated_Source\PSoC5/RPi_SPIS.c ****     }
 664              		.loc 1 623 0
 665 0010 00BF     		nop
 666 0012 0C37     		adds	r7, r7, #12
 667              		.cfi_def_cfa_offset 4
 668 0014 BD46     		mov	sp, r7
 669              		.cfi_def_cfa_register 13
 670              		@ sp needed
 671 0016 80BC     		pop	{r7}
 672              		.cfi_restore 7
 673              		.cfi_def_cfa_offset 0
 674 0018 7047     		bx	lr
 675              	.L42:
 676 001a 00BF     		.align	2
 677              	.L41:
 678 001c 08650040 		.word	1073767688
 679              		.cfi_endproc
 680              	.LFE13:
 681              		.size	RPi_SPIS_WriteTxDataZero, .-RPi_SPIS_WriteTxDataZero
 682              		.section	.text.RPi_SPIS_ReadRxData,"ax",%progbits
 683              		.align	2
 684              		.global	RPi_SPIS_ReadRxData
 685              		.thumb
 686              		.thumb_func
 687              		.type	RPi_SPIS_ReadRxData, %function
 688              	RPi_SPIS_ReadRxData:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 24


 689              	.LFB14:
 624:Generated_Source\PSoC5/RPi_SPIS.c **** 
 625:Generated_Source\PSoC5/RPi_SPIS.c **** #endif /* (RPi_SPIS_MODE_USE_ZERO != 0u) */
 626:Generated_Source\PSoC5/RPi_SPIS.c **** 
 627:Generated_Source\PSoC5/RPi_SPIS.c **** 
 628:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 629:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_ReadRxData
 630:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 631:Generated_Source\PSoC5/RPi_SPIS.c **** *
 632:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 633:Generated_Source\PSoC5/RPi_SPIS.c **** *  Read the next byte of data received across the SPI.
 634:Generated_Source\PSoC5/RPi_SPIS.c **** *
 635:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 636:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 637:Generated_Source\PSoC5/RPi_SPIS.c **** *
 638:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 639:Generated_Source\PSoC5/RPi_SPIS.c **** *  The next byte of data read from the FIFO.
 640:Generated_Source\PSoC5/RPi_SPIS.c **** *
 641:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 642:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_rxBufferWrite - used for the account of the bytes which
 643:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been written down in the RX software buffer.
 644:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_rxBufferRead - used for the account of the bytes which
 645:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been read from the RX software buffer, modified every function
 646:Generated_Source\PSoC5/RPi_SPIS.c **** *  call if RX Software Buffer is used.
 647:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_rxBuffer[RPi_SPIS_RX_BUFFER_SIZE] - used to store
 648:Generated_Source\PSoC5/RPi_SPIS.c **** *  received data.
 649:Generated_Source\PSoC5/RPi_SPIS.c **** *
 650:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 651:Generated_Source\PSoC5/RPi_SPIS.c **** *  Allows the user to read a byte of data received.
 652:Generated_Source\PSoC5/RPi_SPIS.c **** *
 653:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
 654:Generated_Source\PSoC5/RPi_SPIS.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 655:Generated_Source\PSoC5/RPi_SPIS.c **** *  empty status before calling Read function.
 656:Generated_Source\PSoC5/RPi_SPIS.c **** *
 657:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
 658:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
 659:Generated_Source\PSoC5/RPi_SPIS.c **** *
 660:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 661:Generated_Source\PSoC5/RPi_SPIS.c **** uint8 RPi_SPIS_ReadRxData(void) 
 662:Generated_Source\PSoC5/RPi_SPIS.c **** {
 690              		.loc 1 662 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 8
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695 0000 80B4     		push	{r7}
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 7, -4
 698 0002 83B0     		sub	sp, sp, #12
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 663:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 rxData;
 664:Generated_Source\PSoC5/RPi_SPIS.c **** 
 665:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_RX_SOFTWARE_BUF_ENABLED)
 666:Generated_Source\PSoC5/RPi_SPIS.c **** 
 667:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 25


 668:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableRxInt();
 669:Generated_Source\PSoC5/RPi_SPIS.c **** 
 670:Generated_Source\PSoC5/RPi_SPIS.c ****         if(RPi_SPIS_rxBufferRead != RPi_SPIS_rxBufferWrite)
 671:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 672:Generated_Source\PSoC5/RPi_SPIS.c ****             if(RPi_SPIS_rxBufferFull == 0u)
 673:Generated_Source\PSoC5/RPi_SPIS.c ****             {
 674:Generated_Source\PSoC5/RPi_SPIS.c ****                 RPi_SPIS_rxBufferRead++;
 675:Generated_Source\PSoC5/RPi_SPIS.c ****                 if(RPi_SPIS_rxBufferRead >= RPi_SPIS_RX_BUFFER_SIZE)
 676:Generated_Source\PSoC5/RPi_SPIS.c ****                 {
 677:Generated_Source\PSoC5/RPi_SPIS.c ****                     RPi_SPIS_rxBufferRead = 0u;
 678:Generated_Source\PSoC5/RPi_SPIS.c ****                 }
 679:Generated_Source\PSoC5/RPi_SPIS.c ****             }
 680:Generated_Source\PSoC5/RPi_SPIS.c ****             else
 681:Generated_Source\PSoC5/RPi_SPIS.c ****             {
 682:Generated_Source\PSoC5/RPi_SPIS.c ****                 RPi_SPIS_rxBufferFull = 0u;
 683:Generated_Source\PSoC5/RPi_SPIS.c ****             }
 684:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 685:Generated_Source\PSoC5/RPi_SPIS.c **** 
 686:Generated_Source\PSoC5/RPi_SPIS.c ****         rxData = RPi_SPIS_rxBuffer[RPi_SPIS_rxBufferRead];
 687:Generated_Source\PSoC5/RPi_SPIS.c **** 
 688:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable Interrupt. */
 689:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableRxInt();
 690:Generated_Source\PSoC5/RPi_SPIS.c **** 
 691:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* !RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
 692:Generated_Source\PSoC5/RPi_SPIS.c **** 
 693:Generated_Source\PSoC5/RPi_SPIS.c ****         rxData = CY_GET_REG8(RPi_SPIS_RXDATA_PTR);
 702              		.loc 1 693 0
 703 0006 044B     		ldr	r3, .L45
 704 0008 1B78     		ldrb	r3, [r3]
 705 000a FB71     		strb	r3, [r7, #7]
 694:Generated_Source\PSoC5/RPi_SPIS.c **** 
 695:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
 696:Generated_Source\PSoC5/RPi_SPIS.c **** 
 697:Generated_Source\PSoC5/RPi_SPIS.c ****     return (rxData);
 706              		.loc 1 697 0
 707 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/RPi_SPIS.c **** 
 699:Generated_Source\PSoC5/RPi_SPIS.c **** }
 708              		.loc 1 699 0
 709 000e 1846     		mov	r0, r3
 710 0010 0C37     		adds	r7, r7, #12
 711              		.cfi_def_cfa_offset 4
 712 0012 BD46     		mov	sp, r7
 713              		.cfi_def_cfa_register 13
 714              		@ sp needed
 715 0014 80BC     		pop	{r7}
 716              		.cfi_restore 7
 717              		.cfi_def_cfa_offset 0
 718 0016 7047     		bx	lr
 719              	.L46:
 720              		.align	2
 721              	.L45:
 722 0018 58650040 		.word	1073767768
 723              		.cfi_endproc
 724              	.LFE14:
 725              		.size	RPi_SPIS_ReadRxData, .-RPi_SPIS_ReadRxData
 726              		.section	.text.RPi_SPIS_GetRxBufferSize,"ax",%progbits
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 26


 727              		.align	2
 728              		.global	RPi_SPIS_GetRxBufferSize
 729              		.thumb
 730              		.thumb_func
 731              		.type	RPi_SPIS_GetRxBufferSize, %function
 732              	RPi_SPIS_GetRxBufferSize:
 733              	.LFB15:
 700:Generated_Source\PSoC5/RPi_SPIS.c **** 
 701:Generated_Source\PSoC5/RPi_SPIS.c **** 
 702:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 703:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_GetRxBufferSize
 704:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 705:Generated_Source\PSoC5/RPi_SPIS.c **** *
 706:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 707:Generated_Source\PSoC5/RPi_SPIS.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:Generated_Source\PSoC5/RPi_SPIS.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:Generated_Source\PSoC5/RPi_SPIS.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:Generated_Source\PSoC5/RPi_SPIS.c **** *
 711:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 712:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 713:Generated_Source\PSoC5/RPi_SPIS.c **** *
 714:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 715:Generated_Source\PSoC5/RPi_SPIS.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:Generated_Source\PSoC5/RPi_SPIS.c **** *
 717:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 718:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_rxBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been written down in the RX software buffer.
 720:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_rxBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been read from the RX software buffer.
 722:Generated_Source\PSoC5/RPi_SPIS.c **** *
 723:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 724:Generated_Source\PSoC5/RPi_SPIS.c **** *  Allows the user to find out how full the RX Buffer is.
 725:Generated_Source\PSoC5/RPi_SPIS.c **** *
 726:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/RPi_SPIS.c **** uint8 RPi_SPIS_GetRxBufferSize(void) 
 728:Generated_Source\PSoC5/RPi_SPIS.c **** {
 734              		.loc 1 728 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 8
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              		.cfi_def_cfa_offset 4
 741              		.cfi_offset 7, -4
 742 0002 83B0     		sub	sp, sp, #12
 743              		.cfi_def_cfa_offset 16
 744 0004 00AF     		add	r7, sp, #0
 745              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 size;
 730:Generated_Source\PSoC5/RPi_SPIS.c **** 
 731:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_RX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/RPi_SPIS.c **** 
 733:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 734:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableRxInt();
 735:Generated_Source\PSoC5/RPi_SPIS.c **** 
 736:Generated_Source\PSoC5/RPi_SPIS.c ****         if(RPi_SPIS_rxBufferRead == RPi_SPIS_rxBufferWrite)
 737:Generated_Source\PSoC5/RPi_SPIS.c ****         {
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 27


 738:Generated_Source\PSoC5/RPi_SPIS.c ****             size = 0u; /* No data in RX buffer */
 739:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 740:Generated_Source\PSoC5/RPi_SPIS.c ****         else if(RPi_SPIS_rxBufferRead < RPi_SPIS_rxBufferWrite)
 741:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 742:Generated_Source\PSoC5/RPi_SPIS.c ****             size = (RPi_SPIS_rxBufferWrite - RPi_SPIS_rxBufferRead);
 743:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 744:Generated_Source\PSoC5/RPi_SPIS.c ****         else
 745:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 746:Generated_Source\PSoC5/RPi_SPIS.c ****             size = (RPi_SPIS_RX_BUFFER_SIZE - RPi_SPIS_rxBufferRead) + RPi_SPIS_rxBufferWrite;
 747:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 748:Generated_Source\PSoC5/RPi_SPIS.c **** 
 749:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable interrupt. */
 750:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableRxInt();
 751:Generated_Source\PSoC5/RPi_SPIS.c **** 
 752:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* !RPi_SPIS_RX_SOFTWARE_BUF_ENABLED*/
 753:Generated_Source\PSoC5/RPi_SPIS.c **** 
 754:Generated_Source\PSoC5/RPi_SPIS.c ****         /* We can only know if there is data in the fifo. */
 755:Generated_Source\PSoC5/RPi_SPIS.c ****         size = ((RPi_SPIS_RX_STATUS_REG & RPi_SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 746              		.loc 1 755 0
 747 0006 084B     		ldr	r3, .L51
 748 0008 1B78     		ldrb	r3, [r3]
 749 000a DBB2     		uxtb	r3, r3
 750 000c 03F00803 		and	r3, r3, #8
 751 0010 002B     		cmp	r3, #0
 752 0012 01D0     		beq	.L48
 753              		.loc 1 755 0 is_stmt 0 discriminator 1
 754 0014 0123     		movs	r3, #1
 755 0016 00E0     		b	.L49
 756              	.L48:
 757              		.loc 1 755 0 discriminator 2
 758 0018 0023     		movs	r3, #0
 759              	.L49:
 760              		.loc 1 755 0 discriminator 4
 761 001a FB71     		strb	r3, [r7, #7]
 756:Generated_Source\PSoC5/RPi_SPIS.c **** 
 757:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
 758:Generated_Source\PSoC5/RPi_SPIS.c **** 
 759:Generated_Source\PSoC5/RPi_SPIS.c ****     return (size);
 762              		.loc 1 759 0 is_stmt 1 discriminator 4
 763 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 760:Generated_Source\PSoC5/RPi_SPIS.c **** }
 764              		.loc 1 760 0 discriminator 4
 765 001e 1846     		mov	r0, r3
 766 0020 0C37     		adds	r7, r7, #12
 767              		.cfi_def_cfa_offset 4
 768 0022 BD46     		mov	sp, r7
 769              		.cfi_def_cfa_register 13
 770              		@ sp needed
 771 0024 80BC     		pop	{r7}
 772              		.cfi_restore 7
 773              		.cfi_def_cfa_offset 0
 774 0026 7047     		bx	lr
 775              	.L52:
 776              		.align	2
 777              	.L51:
 778 0028 6C640040 		.word	1073767532
 779              		.cfi_endproc
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 28


 780              	.LFE15:
 781              		.size	RPi_SPIS_GetRxBufferSize, .-RPi_SPIS_GetRxBufferSize
 782              		.section	.text.RPi_SPIS_GetTxBufferSize,"ax",%progbits
 783              		.align	2
 784              		.global	RPi_SPIS_GetTxBufferSize
 785              		.thumb
 786              		.thumb_func
 787              		.type	RPi_SPIS_GetTxBufferSize, %function
 788              	RPi_SPIS_GetTxBufferSize:
 789              	.LFB16:
 761:Generated_Source\PSoC5/RPi_SPIS.c **** 
 762:Generated_Source\PSoC5/RPi_SPIS.c **** 
 763:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 764:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_GetTxBufferSize
 765:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 766:Generated_Source\PSoC5/RPi_SPIS.c **** *
 767:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 768:Generated_Source\PSoC5/RPi_SPIS.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:Generated_Source\PSoC5/RPi_SPIS.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:Generated_Source\PSoC5/RPi_SPIS.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:Generated_Source\PSoC5/RPi_SPIS.c **** *  Software Buffer.
 772:Generated_Source\PSoC5/RPi_SPIS.c **** *
 773:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 774:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 775:Generated_Source\PSoC5/RPi_SPIS.c **** *
 776:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 777:Generated_Source\PSoC5/RPi_SPIS.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:Generated_Source\PSoC5/RPi_SPIS.c **** *
 779:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 780:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_txBufferWrite - used for the account of the bytes which
 781:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been written down in the TX software buffer.
 782:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_txBufferRead - used for the account of the bytes which
 783:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been read from the TX software buffer.
 784:Generated_Source\PSoC5/RPi_SPIS.c **** *
 785:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 786:Generated_Source\PSoC5/RPi_SPIS.c **** *  Allows the user to find out how full the TX Buffer is.
 787:Generated_Source\PSoC5/RPi_SPIS.c **** *
 788:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
 789:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear status register of the component.
 790:Generated_Source\PSoC5/RPi_SPIS.c **** *
 791:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 792:Generated_Source\PSoC5/RPi_SPIS.c **** uint8  RPi_SPIS_GetTxBufferSize(void) 
 793:Generated_Source\PSoC5/RPi_SPIS.c **** {
 790              		.loc 1 793 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 8
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795 0000 80B4     		push	{r7}
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 83B0     		sub	sp, sp, #12
 799              		.cfi_def_cfa_offset 16
 800 0004 00AF     		add	r7, sp, #0
 801              		.cfi_def_cfa_register 7
 794:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 size;
 795:Generated_Source\PSoC5/RPi_SPIS.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 29


 796:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_TX_SOFTWARE_BUF_ENABLED)
 797:Generated_Source\PSoC5/RPi_SPIS.c **** 
 798:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableTxInt();
 800:Generated_Source\PSoC5/RPi_SPIS.c **** 
 801:Generated_Source\PSoC5/RPi_SPIS.c ****         if(RPi_SPIS_txBufferRead == RPi_SPIS_txBufferWrite)
 802:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 803:Generated_Source\PSoC5/RPi_SPIS.c ****             size = 0u;
 804:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 805:Generated_Source\PSoC5/RPi_SPIS.c ****         else if(RPi_SPIS_txBufferRead < RPi_SPIS_txBufferWrite)
 806:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 807:Generated_Source\PSoC5/RPi_SPIS.c ****             size = (RPi_SPIS_txBufferWrite - RPi_SPIS_txBufferRead);
 808:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 809:Generated_Source\PSoC5/RPi_SPIS.c ****         else
 810:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 811:Generated_Source\PSoC5/RPi_SPIS.c ****             size = (RPi_SPIS_TX_BUFFER_SIZE - RPi_SPIS_txBufferRead) + RPi_SPIS_txBufferWrite;
 812:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 813:Generated_Source\PSoC5/RPi_SPIS.c **** 
 814:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable Interrupt. */
 815:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableTxInt();
 816:Generated_Source\PSoC5/RPi_SPIS.c **** 
 817:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* !RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 818:Generated_Source\PSoC5/RPi_SPIS.c **** 
 819:Generated_Source\PSoC5/RPi_SPIS.c ****         size = RPi_SPIS_TX_STATUS_REG;
 802              		.loc 1 819 0
 803 0006 0D4B     		ldr	r3, .L58
 804 0008 1B78     		ldrb	r3, [r3]
 805 000a FB71     		strb	r3, [r7, #7]
 820:Generated_Source\PSoC5/RPi_SPIS.c **** 
 821:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Is the fifo is full. */
 822:Generated_Source\PSoC5/RPi_SPIS.c ****         if((size & RPi_SPIS_STS_TX_FIFO_EMPTY) != 0u)
 806              		.loc 1 822 0
 807 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 808 000e 03F00403 		and	r3, r3, #4
 809 0012 002B     		cmp	r3, #0
 810 0014 02D0     		beq	.L54
 823:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 824:Generated_Source\PSoC5/RPi_SPIS.c ****             size = 0u;
 811              		.loc 1 824 0
 812 0016 0023     		movs	r3, #0
 813 0018 FB71     		strb	r3, [r7, #7]
 814 001a 09E0     		b	.L55
 815              	.L54:
 825:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 826:Generated_Source\PSoC5/RPi_SPIS.c ****         else if((size & RPi_SPIS_STS_TX_FIFO_NOT_FULL) != 0u)
 816              		.loc 1 826 0
 817 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 818 001e 03F00203 		and	r3, r3, #2
 819 0022 002B     		cmp	r3, #0
 820 0024 02D0     		beq	.L56
 827:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 828:Generated_Source\PSoC5/RPi_SPIS.c ****             size = 1u;
 821              		.loc 1 828 0
 822 0026 0123     		movs	r3, #1
 823 0028 FB71     		strb	r3, [r7, #7]
 824 002a 01E0     		b	.L55
 825              	.L56:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 30


 829:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 830:Generated_Source\PSoC5/RPi_SPIS.c ****         else
 831:Generated_Source\PSoC5/RPi_SPIS.c ****         {
 832:Generated_Source\PSoC5/RPi_SPIS.c ****             size = 4u;
 826              		.loc 1 832 0
 827 002c 0423     		movs	r3, #4
 828 002e FB71     		strb	r3, [r7, #7]
 829              	.L55:
 833:Generated_Source\PSoC5/RPi_SPIS.c ****         }
 834:Generated_Source\PSoC5/RPi_SPIS.c **** 
 835:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 836:Generated_Source\PSoC5/RPi_SPIS.c **** 
 837:Generated_Source\PSoC5/RPi_SPIS.c ****     return (size);
 830              		.loc 1 837 0
 831 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838:Generated_Source\PSoC5/RPi_SPIS.c **** }
 832              		.loc 1 838 0
 833 0032 1846     		mov	r0, r3
 834 0034 0C37     		adds	r7, r7, #12
 835              		.cfi_def_cfa_offset 4
 836 0036 BD46     		mov	sp, r7
 837              		.cfi_def_cfa_register 13
 838              		@ sp needed
 839 0038 80BC     		pop	{r7}
 840              		.cfi_restore 7
 841              		.cfi_def_cfa_offset 0
 842 003a 7047     		bx	lr
 843              	.L59:
 844              		.align	2
 845              	.L58:
 846 003c 64640040 		.word	1073767524
 847              		.cfi_endproc
 848              	.LFE16:
 849              		.size	RPi_SPIS_GetTxBufferSize, .-RPi_SPIS_GetTxBufferSize
 850              		.section	.text.RPi_SPIS_ClearRxBuffer,"ax",%progbits
 851              		.align	2
 852              		.global	RPi_SPIS_ClearRxBuffer
 853              		.thumb
 854              		.thumb_func
 855              		.type	RPi_SPIS_ClearRxBuffer, %function
 856              	RPi_SPIS_ClearRxBuffer:
 857              	.LFB17:
 839:Generated_Source\PSoC5/RPi_SPIS.c **** 
 840:Generated_Source\PSoC5/RPi_SPIS.c **** 
 841:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 842:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_ClearRxBuffer
 843:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 844:Generated_Source\PSoC5/RPi_SPIS.c **** *
 845:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 846:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:Generated_Source\PSoC5/RPi_SPIS.c **** *
 848:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 849:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 850:Generated_Source\PSoC5/RPi_SPIS.c **** *
 851:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 852:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 853:Generated_Source\PSoC5/RPi_SPIS.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 31


 854:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 855:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_rxBufferWrite - used for the account of the bytes which
 856:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been written down in the RX software buffer, modified every function
 857:Generated_Source\PSoC5/RPi_SPIS.c **** *  call - resets to zero.
 858:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_rxBufferRead - used for the account of the bytes which
 859:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been read from the RX software buffer, modified every function call -
 860:Generated_Source\PSoC5/RPi_SPIS.c **** *  resets to zero.
 861:Generated_Source\PSoC5/RPi_SPIS.c **** *
 862:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 863:Generated_Source\PSoC5/RPi_SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:Generated_Source\PSoC5/RPi_SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:Generated_Source\PSoC5/RPi_SPIS.c **** *  remained in the RAM.
 866:Generated_Source\PSoC5/RPi_SPIS.c **** *
 867:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
 868:Generated_Source\PSoC5/RPi_SPIS.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:Generated_Source\PSoC5/RPi_SPIS.c **** *
 870:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
 871:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
 872:Generated_Source\PSoC5/RPi_SPIS.c **** *
 873:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 874:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_ClearRxBuffer(void) 
 875:Generated_Source\PSoC5/RPi_SPIS.c **** {
 858              		.loc 1 875 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 863 0000 80B4     		push	{r7}
 864              		.cfi_def_cfa_offset 4
 865              		.cfi_offset 7, -4
 866 0002 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 876:Generated_Source\PSoC5/RPi_SPIS.c ****     /* Clear Hardware RX FIFO */
 877:Generated_Source\PSoC5/RPi_SPIS.c ****     while((RPi_SPIS_RX_STATUS_REG & RPi_SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 868              		.loc 1 877 0
 869 0004 01E0     		b	.L61
 870              	.L62:
 878:Generated_Source\PSoC5/RPi_SPIS.c ****     {
 879:Generated_Source\PSoC5/RPi_SPIS.c ****         CY_GET_REG8(RPi_SPIS_RXDATA_PTR);
 871              		.loc 1 879 0
 872 0006 064B     		ldr	r3, .L63
 873 0008 1B78     		ldrb	r3, [r3]
 874              	.L61:
 877:Generated_Source\PSoC5/RPi_SPIS.c ****     {
 875              		.loc 1 877 0
 876 000a 064B     		ldr	r3, .L63+4
 877 000c 1B78     		ldrb	r3, [r3]
 878 000e DBB2     		uxtb	r3, r3
 879 0010 03F00803 		and	r3, r3, #8
 880 0014 002B     		cmp	r3, #0
 881 0016 F6D1     		bne	.L62
 880:Generated_Source\PSoC5/RPi_SPIS.c ****     }
 881:Generated_Source\PSoC5/RPi_SPIS.c **** 
 882:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_RX_SOFTWARE_BUF_ENABLED)
 883:Generated_Source\PSoC5/RPi_SPIS.c **** 
 884:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableRxInt();
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 32


 886:Generated_Source\PSoC5/RPi_SPIS.c **** 
 887:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_rxBufferRead  = 0u;
 888:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_rxBufferWrite = 0u;
 889:Generated_Source\PSoC5/RPi_SPIS.c **** 		RPi_SPIS_rxBufferFull  = 0u;
 890:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable interrupt. */
 891:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableRxInt();
 892:Generated_Source\PSoC5/RPi_SPIS.c **** 
 893:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_RX_SOFTWARE_BUF_ENABLED */
 894:Generated_Source\PSoC5/RPi_SPIS.c **** }
 882              		.loc 1 894 0
 883 0018 00BF     		nop
 884 001a BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 001c 80BC     		pop	{r7}
 888              		.cfi_restore 7
 889              		.cfi_def_cfa_offset 0
 890 001e 7047     		bx	lr
 891              	.L64:
 892              		.align	2
 893              	.L63:
 894 0020 58650040 		.word	1073767768
 895 0024 6C640040 		.word	1073767532
 896              		.cfi_endproc
 897              	.LFE17:
 898              		.size	RPi_SPIS_ClearRxBuffer, .-RPi_SPIS_ClearRxBuffer
 899              		.section	.text.RPi_SPIS_ClearTxBuffer,"ax",%progbits
 900              		.align	2
 901              		.global	RPi_SPIS_ClearTxBuffer
 902              		.thumb
 903              		.thumb_func
 904              		.type	RPi_SPIS_ClearTxBuffer, %function
 905              	RPi_SPIS_ClearTxBuffer:
 906              	.LFB18:
 895:Generated_Source\PSoC5/RPi_SPIS.c **** 
 896:Generated_Source\PSoC5/RPi_SPIS.c **** 
 897:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
 898:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_ClearTxBuffer
 899:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
 900:Generated_Source\PSoC5/RPi_SPIS.c **** *
 901:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
 902:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:Generated_Source\PSoC5/RPi_SPIS.c **** *
 904:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
 905:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 906:Generated_Source\PSoC5/RPi_SPIS.c **** *
 907:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
 908:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
 909:Generated_Source\PSoC5/RPi_SPIS.c **** *
 910:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
 911:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_txBufferWrite - used for the account of the bytes which
 912:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been written down in the TX software buffer, modified every function
 913:Generated_Source\PSoC5/RPi_SPIS.c **** *  call - resets to zero.
 914:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_txBufferRead - used for the account of the bytes which
 915:Generated_Source\PSoC5/RPi_SPIS.c **** *  have been read from the TX software buffer, modified every function call -
 916:Generated_Source\PSoC5/RPi_SPIS.c **** *  resets to zero.
 917:Generated_Source\PSoC5/RPi_SPIS.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 33


 918:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
 919:Generated_Source\PSoC5/RPi_SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:Generated_Source\PSoC5/RPi_SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:Generated_Source\PSoC5/RPi_SPIS.c **** *  remained in the RAM.
 922:Generated_Source\PSoC5/RPi_SPIS.c **** *
 923:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
 924:Generated_Source\PSoC5/RPi_SPIS.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:Generated_Source\PSoC5/RPi_SPIS.c **** *  overwritten.
 926:Generated_Source\PSoC5/RPi_SPIS.c **** *
 927:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
 928:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
 929:Generated_Source\PSoC5/RPi_SPIS.c **** *
 930:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
 931:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_ClearTxBuffer(void) 
 932:Generated_Source\PSoC5/RPi_SPIS.c **** {
 907              		.loc 1 932 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 8
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 82B0     		sub	sp, sp, #8
 916              		.cfi_def_cfa_offset 16
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 933:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 enableInterrupts;
 934:Generated_Source\PSoC5/RPi_SPIS.c **** 
 935:Generated_Source\PSoC5/RPi_SPIS.c ****     /* Clear Hardware TX FIFO */
 936:Generated_Source\PSoC5/RPi_SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 919              		.loc 1 936 0
 920 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 921 000a 0346     		mov	r3, r0
 922 000c FB71     		strb	r3, [r7, #7]
 937:Generated_Source\PSoC5/RPi_SPIS.c **** 
 938:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_DATA_WIDTH <= 8u)
 939:Generated_Source\PSoC5/RPi_SPIS.c **** 
 940:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Clear TX FIFO */
 941:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)RPi_SPIS_FIFO_CLR;
 923              		.loc 1 941 0
 924 000e 0C4A     		ldr	r2, .L66
 925 0010 0B4B     		ldr	r3, .L66
 926 0012 1B78     		ldrb	r3, [r3]
 927 0014 DBB2     		uxtb	r3, r3
 928 0016 43F00303 		orr	r3, r3, #3
 929 001a DBB2     		uxtb	r3, r3
 930 001c 1370     		strb	r3, [r2]
 942:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~RPi_SPIS_FIFO_CLR;
 931              		.loc 1 942 0
 932 001e 084A     		ldr	r2, .L66
 933 0020 074B     		ldr	r3, .L66
 934 0022 1B78     		ldrb	r3, [r3]
 935 0024 DBB2     		uxtb	r3, r3
 936 0026 23F00303 		bic	r3, r3, #3
 937 002a DBB2     		uxtb	r3, r3
 938 002c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 34


 943:Generated_Source\PSoC5/RPi_SPIS.c **** 
 944:Generated_Source\PSoC5/RPi_SPIS.c ****     #else
 945:Generated_Source\PSoC5/RPi_SPIS.c **** 
 946:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Clear TX FIFO */
 947:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)RPi_SPIS_FIFO_CLR;
 948:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~RPi_SPIS_FIFO_CLR;
 949:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)RPi_SPIS_FIFO_CLR;
 950:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~RPi_SPIS_FIFO_CLR;
 951:Generated_Source\PSoC5/RPi_SPIS.c **** 
 952:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_DATA_WIDTH > 8u */
 953:Generated_Source\PSoC5/RPi_SPIS.c **** 
 954:Generated_Source\PSoC5/RPi_SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 939              		.loc 1 954 0
 940 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 941 0030 1846     		mov	r0, r3
 942 0032 FFF7FEFF 		bl	CyExitCriticalSection
 955:Generated_Source\PSoC5/RPi_SPIS.c **** 
 956:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_TX_SOFTWARE_BUF_ENABLED)
 957:Generated_Source\PSoC5/RPi_SPIS.c **** 
 958:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableTxInt();
 960:Generated_Source\PSoC5/RPi_SPIS.c **** 
 961:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_txBufferRead  = 0u;
 962:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/RPi_SPIS.c **** 		RPi_SPIS_txBufferFull  = 0u;
 964:Generated_Source\PSoC5/RPi_SPIS.c **** 		
 965:Generated_Source\PSoC5/RPi_SPIS.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_STATUS_MASK_REG &= (uint8)~RPi_SPIS_STS_TX_FIFO_NOT_FULL;
 967:Generated_Source\PSoC5/RPi_SPIS.c **** 
 968:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable Interrupt. */
 969:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableTxInt();
 970:Generated_Source\PSoC5/RPi_SPIS.c **** 
 971:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_TX_SOFTWARE_BUF_ENABLED */
 972:Generated_Source\PSoC5/RPi_SPIS.c **** }
 943              		.loc 1 972 0
 944 0036 00BF     		nop
 945 0038 0837     		adds	r7, r7, #8
 946              		.cfi_def_cfa_offset 8
 947 003a BD46     		mov	sp, r7
 948              		.cfi_def_cfa_register 13
 949              		@ sp needed
 950 003c 80BD     		pop	{r7, pc}
 951              	.L67:
 952 003e 00BF     		.align	2
 953              	.L66:
 954 0040 98650040 		.word	1073767832
 955              		.cfi_endproc
 956              	.LFE18:
 957              		.size	RPi_SPIS_ClearTxBuffer, .-RPi_SPIS_ClearTxBuffer
 958              		.section	.text.RPi_SPIS_PutArray,"ax",%progbits
 959              		.align	2
 960              		.global	RPi_SPIS_PutArray
 961              		.thumb
 962              		.thumb_func
 963              		.type	RPi_SPIS_PutArray, %function
 964              	RPi_SPIS_PutArray:
 965              	.LFB19:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 35


 973:Generated_Source\PSoC5/RPi_SPIS.c **** 
 974:Generated_Source\PSoC5/RPi_SPIS.c **** 
 975:Generated_Source\PSoC5/RPi_SPIS.c **** #if (RPi_SPIS_BIDIRECTIONAL_MODE != 0u)
 976:Generated_Source\PSoC5/RPi_SPIS.c **** 
 977:Generated_Source\PSoC5/RPi_SPIS.c ****     /*******************************************************************************
 978:Generated_Source\PSoC5/RPi_SPIS.c ****     * Function Name: RPi_SPIS_TxEnable
 979:Generated_Source\PSoC5/RPi_SPIS.c ****     ********************************************************************************
 980:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 981:Generated_Source\PSoC5/RPi_SPIS.c ****     * Summary:
 982:Generated_Source\PSoC5/RPi_SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:Generated_Source\PSoC5/RPi_SPIS.c ****     *  will set the bi-directional pin to transmit.
 984:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 985:Generated_Source\PSoC5/RPi_SPIS.c ****     * Parameters:
 986:Generated_Source\PSoC5/RPi_SPIS.c ****     *  None.
 987:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 988:Generated_Source\PSoC5/RPi_SPIS.c ****     * Return:
 989:Generated_Source\PSoC5/RPi_SPIS.c ****     *  None.
 990:Generated_Source\PSoC5/RPi_SPIS.c ****     *
 991:Generated_Source\PSoC5/RPi_SPIS.c ****     *******************************************************************************/
 992:Generated_Source\PSoC5/RPi_SPIS.c ****     void RPi_SPIS_TxEnable(void) 
 993:Generated_Source\PSoC5/RPi_SPIS.c ****     {
 994:Generated_Source\PSoC5/RPi_SPIS.c ****             RPi_SPIS_CONTROL_REG |= RPi_SPIS_CTRL_TX_SIGNAL_EN;
 995:Generated_Source\PSoC5/RPi_SPIS.c ****     }
 996:Generated_Source\PSoC5/RPi_SPIS.c **** 
 997:Generated_Source\PSoC5/RPi_SPIS.c **** 
 998:Generated_Source\PSoC5/RPi_SPIS.c ****     /*******************************************************************************
 999:Generated_Source\PSoC5/RPi_SPIS.c ****     * Function Name: RPi_SPIS_TxDisable
1000:Generated_Source\PSoC5/RPi_SPIS.c ****     ********************************************************************************
1001:Generated_Source\PSoC5/RPi_SPIS.c ****     *
1002:Generated_Source\PSoC5/RPi_SPIS.c ****     * Summary:
1003:Generated_Source\PSoC5/RPi_SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:Generated_Source\PSoC5/RPi_SPIS.c ****     *  will set the bi-directional pin to receive.
1005:Generated_Source\PSoC5/RPi_SPIS.c ****     *
1006:Generated_Source\PSoC5/RPi_SPIS.c ****     * Parameters:
1007:Generated_Source\PSoC5/RPi_SPIS.c ****     *  None.
1008:Generated_Source\PSoC5/RPi_SPIS.c ****     *
1009:Generated_Source\PSoC5/RPi_SPIS.c ****     * Return:
1010:Generated_Source\PSoC5/RPi_SPIS.c ****     *  None.
1011:Generated_Source\PSoC5/RPi_SPIS.c ****     *
1012:Generated_Source\PSoC5/RPi_SPIS.c ****     *******************************************************************************/
1013:Generated_Source\PSoC5/RPi_SPIS.c ****     void RPi_SPIS_TxDisable(void) 
1014:Generated_Source\PSoC5/RPi_SPIS.c ****     {
1015:Generated_Source\PSoC5/RPi_SPIS.c ****             RPi_SPIS_CONTROL_REG &= (uint8)~RPi_SPIS_CTRL_TX_SIGNAL_EN;
1016:Generated_Source\PSoC5/RPi_SPIS.c ****     }
1017:Generated_Source\PSoC5/RPi_SPIS.c **** 
1018:Generated_Source\PSoC5/RPi_SPIS.c **** #endif /* RPi_SPIS_BIDIRECTIONAL_MODE != 0u */
1019:Generated_Source\PSoC5/RPi_SPIS.c **** 
1020:Generated_Source\PSoC5/RPi_SPIS.c **** 
1021:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
1022:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_PutArray
1023:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
1024:Generated_Source\PSoC5/RPi_SPIS.c **** *
1025:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
1026:Generated_Source\PSoC5/RPi_SPIS.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:Generated_Source\PSoC5/RPi_SPIS.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1028:Generated_Source\PSoC5/RPi_SPIS.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:Generated_Source\PSoC5/RPi_SPIS.c **** *  WriteTxDataZero() function.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 36


1030:Generated_Source\PSoC5/RPi_SPIS.c **** *
1031:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
1032:Generated_Source\PSoC5/RPi_SPIS.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:Generated_Source\PSoC5/RPi_SPIS.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:Generated_Source\PSoC5/RPi_SPIS.c **** *
1035:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
1036:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1037:Generated_Source\PSoC5/RPi_SPIS.c **** *
1038:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
1039:Generated_Source\PSoC5/RPi_SPIS.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:Generated_Source\PSoC5/RPi_SPIS.c **** *  this loop if data is not being initiated by the master if there is not
1041:Generated_Source\PSoC5/RPi_SPIS.c **** *  enough room in the TX FIFO.
1042:Generated_Source\PSoC5/RPi_SPIS.c **** *
1043:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
1044:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
1045:Generated_Source\PSoC5/RPi_SPIS.c **** *
1046:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
1047:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_PutArray(const uint8 buffer[], uint8 byteCount)
1048:Generated_Source\PSoC5/RPi_SPIS.c ****                                                                     
1049:Generated_Source\PSoC5/RPi_SPIS.c **** {
 966              		.loc 1 1049 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 16
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970 0000 80B5     		push	{r7, lr}
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 84B0     		sub	sp, sp, #16
 975              		.cfi_def_cfa_offset 24
 976 0004 00AF     		add	r7, sp, #0
 977              		.cfi_def_cfa_register 7
 978 0006 7860     		str	r0, [r7, #4]
 979 0008 0B46     		mov	r3, r1
 980 000a FB70     		strb	r3, [r7, #3]
1050:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 bufIndex;
1051:Generated_Source\PSoC5/RPi_SPIS.c ****     bufIndex = 0u;
 981              		.loc 1 1051 0
 982 000c 0023     		movs	r3, #0
 983 000e FB73     		strb	r3, [r7, #15]
1052:Generated_Source\PSoC5/RPi_SPIS.c **** 
1053:Generated_Source\PSoC5/RPi_SPIS.c ****     while(byteCount > 0u)
 984              		.loc 1 1053 0
 985 0010 0CE0     		b	.L69
 986              	.L70:
1054:Generated_Source\PSoC5/RPi_SPIS.c ****     {
1055:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_WriteTxData(buffer[bufIndex]);
 987              		.loc 1 1055 0
 988 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 989 0014 7A68     		ldr	r2, [r7, #4]
 990 0016 1344     		add	r3, r3, r2
 991 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 001a 1846     		mov	r0, r3
 993 001c FFF7FEFF 		bl	RPi_SPIS_WriteTxData
1056:Generated_Source\PSoC5/RPi_SPIS.c ****         bufIndex++;
 994              		.loc 1 1056 0
 995 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 37


 996 0022 0133     		adds	r3, r3, #1
 997 0024 FB73     		strb	r3, [r7, #15]
1057:Generated_Source\PSoC5/RPi_SPIS.c ****         byteCount--;
 998              		.loc 1 1057 0
 999 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1000 0028 013B     		subs	r3, r3, #1
 1001 002a FB70     		strb	r3, [r7, #3]
 1002              	.L69:
1053:Generated_Source\PSoC5/RPi_SPIS.c ****     {
 1003              		.loc 1 1053 0
 1004 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1005 002e 002B     		cmp	r3, #0
 1006 0030 EFD1     		bne	.L70
1058:Generated_Source\PSoC5/RPi_SPIS.c ****     }
1059:Generated_Source\PSoC5/RPi_SPIS.c **** }
 1007              		.loc 1 1059 0
 1008 0032 00BF     		nop
 1009 0034 1037     		adds	r7, r7, #16
 1010              		.cfi_def_cfa_offset 8
 1011 0036 BD46     		mov	sp, r7
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 0038 80BD     		pop	{r7, pc}
 1015              		.cfi_endproc
 1016              	.LFE19:
 1017              		.size	RPi_SPIS_PutArray, .-RPi_SPIS_PutArray
 1018 003a 00BF     		.section	.text.RPi_SPIS_ClearFIFO,"ax",%progbits
 1019              		.align	2
 1020              		.global	RPi_SPIS_ClearFIFO
 1021              		.thumb
 1022              		.thumb_func
 1023              		.type	RPi_SPIS_ClearFIFO, %function
 1024              	RPi_SPIS_ClearFIFO:
 1025              	.LFB20:
1060:Generated_Source\PSoC5/RPi_SPIS.c **** 
1061:Generated_Source\PSoC5/RPi_SPIS.c **** 
1062:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
1063:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_ClearFIFO
1064:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
1065:Generated_Source\PSoC5/RPi_SPIS.c **** *
1066:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
1067:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1068:Generated_Source\PSoC5/RPi_SPIS.c **** *
1069:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
1070:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1071:Generated_Source\PSoC5/RPi_SPIS.c **** *
1072:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
1073:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1074:Generated_Source\PSoC5/RPi_SPIS.c **** *
1075:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
1076:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear status register of the component.
1077:Generated_Source\PSoC5/RPi_SPIS.c **** *
1078:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
1079:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_ClearFIFO(void) 
1080:Generated_Source\PSoC5/RPi_SPIS.c **** {
 1026              		.loc 1 1080 0
 1027              		.cfi_startproc
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 38


 1028              		@ args = 0, pretend = 0, frame = 8
 1029              		@ frame_needed = 1, uses_anonymous_args = 0
 1030 0000 80B5     		push	{r7, lr}
 1031              		.cfi_def_cfa_offset 8
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034 0002 82B0     		sub	sp, sp, #8
 1035              		.cfi_def_cfa_offset 16
 1036 0004 00AF     		add	r7, sp, #0
 1037              		.cfi_def_cfa_register 7
1081:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 enableInterrupts;
1082:Generated_Source\PSoC5/RPi_SPIS.c **** 
1083:Generated_Source\PSoC5/RPi_SPIS.c ****     while((RPi_SPIS_RX_STATUS_REG & RPi_SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1038              		.loc 1 1083 0
 1039 0006 01E0     		b	.L72
 1040              	.L73:
1084:Generated_Source\PSoC5/RPi_SPIS.c ****     {
1085:Generated_Source\PSoC5/RPi_SPIS.c ****         CY_GET_REG8(RPi_SPIS_RXDATA_PTR);
 1041              		.loc 1 1085 0
 1042 0008 124B     		ldr	r3, .L74
 1043 000a 1B78     		ldrb	r3, [r3]
 1044              	.L72:
1083:Generated_Source\PSoC5/RPi_SPIS.c ****     {
 1045              		.loc 1 1083 0
 1046 000c 124B     		ldr	r3, .L74+4
 1047 000e 1B78     		ldrb	r3, [r3]
 1048 0010 DBB2     		uxtb	r3, r3
 1049 0012 03F00803 		and	r3, r3, #8
 1050 0016 002B     		cmp	r3, #0
 1051 0018 F6D1     		bne	.L73
1086:Generated_Source\PSoC5/RPi_SPIS.c ****     }
1087:Generated_Source\PSoC5/RPi_SPIS.c **** 
1088:Generated_Source\PSoC5/RPi_SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 1052              		.loc 1 1088 0
 1053 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1054 001e 0346     		mov	r3, r0
 1055 0020 FB71     		strb	r3, [r7, #7]
1089:Generated_Source\PSoC5/RPi_SPIS.c **** 
1090:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_DATA_WIDTH <= 8u)
1091:Generated_Source\PSoC5/RPi_SPIS.c **** 
1092:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Clear TX FIFO */
1093:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)RPi_SPIS_FIFO_CLR;
 1056              		.loc 1 1093 0
 1057 0022 0E4A     		ldr	r2, .L74+8
 1058 0024 0D4B     		ldr	r3, .L74+8
 1059 0026 1B78     		ldrb	r3, [r3]
 1060 0028 DBB2     		uxtb	r3, r3
 1061 002a 43F00303 		orr	r3, r3, #3
 1062 002e DBB2     		uxtb	r3, r3
 1063 0030 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~RPi_SPIS_FIFO_CLR;
 1064              		.loc 1 1094 0
 1065 0032 0A4A     		ldr	r2, .L74+8
 1066 0034 094B     		ldr	r3, .L74+8
 1067 0036 1B78     		ldrb	r3, [r3]
 1068 0038 DBB2     		uxtb	r3, r3
 1069 003a 23F00303 		bic	r3, r3, #3
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 39


 1070 003e DBB2     		uxtb	r3, r3
 1071 0040 1370     		strb	r3, [r2]
1095:Generated_Source\PSoC5/RPi_SPIS.c **** 
1096:Generated_Source\PSoC5/RPi_SPIS.c ****     #else
1097:Generated_Source\PSoC5/RPi_SPIS.c **** 
1098:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Clear TX FIFO */
1099:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)RPi_SPIS_FIFO_CLR;
1100:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~RPi_SPIS_FIFO_CLR;
1101:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)RPi_SPIS_FIFO_CLR;
1102:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~RPi_SPIS_FIFO_CLR;
1103:Generated_Source\PSoC5/RPi_SPIS.c **** 
1104:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_DATA_WIDTH <= 8u */
1105:Generated_Source\PSoC5/RPi_SPIS.c **** 
1106:Generated_Source\PSoC5/RPi_SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 1072              		.loc 1 1106 0
 1073 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1074 0044 1846     		mov	r0, r3
 1075 0046 FFF7FEFF 		bl	CyExitCriticalSection
1107:Generated_Source\PSoC5/RPi_SPIS.c **** }
 1076              		.loc 1 1107 0
 1077 004a 00BF     		nop
 1078 004c 0837     		adds	r7, r7, #8
 1079              		.cfi_def_cfa_offset 8
 1080 004e BD46     		mov	sp, r7
 1081              		.cfi_def_cfa_register 13
 1082              		@ sp needed
 1083 0050 80BD     		pop	{r7, pc}
 1084              	.L75:
 1085 0052 00BF     		.align	2
 1086              	.L74:
 1087 0054 58650040 		.word	1073767768
 1088 0058 6C640040 		.word	1073767532
 1089 005c 98650040 		.word	1073767832
 1090              		.cfi_endproc
 1091              	.LFE20:
 1092              		.size	RPi_SPIS_ClearFIFO, .-RPi_SPIS_ClearFIFO
 1093              		.section	.text.RPi_SPIS_EnableInt,"ax",%progbits
 1094              		.align	2
 1095              		.global	RPi_SPIS_EnableInt
 1096              		.thumb
 1097              		.thumb_func
 1098              		.type	RPi_SPIS_EnableInt, %function
 1099              	RPi_SPIS_EnableInt:
 1100              	.LFB21:
1108:Generated_Source\PSoC5/RPi_SPIS.c **** 
1109:Generated_Source\PSoC5/RPi_SPIS.c **** 
1110:Generated_Source\PSoC5/RPi_SPIS.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:Generated_Source\PSoC5/RPi_SPIS.c **** *  Please do not use it in new projects.
1112:Generated_Source\PSoC5/RPi_SPIS.c **** */
1113:Generated_Source\PSoC5/RPi_SPIS.c **** 
1114:Generated_Source\PSoC5/RPi_SPIS.c **** 
1115:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
1116:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_EnableInt
1117:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
1118:Generated_Source\PSoC5/RPi_SPIS.c **** *
1119:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
1120:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable internal interrupt generation.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 40


1121:Generated_Source\PSoC5/RPi_SPIS.c **** *
1122:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
1123:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1124:Generated_Source\PSoC5/RPi_SPIS.c **** *
1125:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
1126:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1127:Generated_Source\PSoC5/RPi_SPIS.c **** *
1128:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
1129:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:Generated_Source\PSoC5/RPi_SPIS.c **** *
1131:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
1132:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_EnableInt(void) 
1133:Generated_Source\PSoC5/RPi_SPIS.c **** {
 1101              		.loc 1 1133 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106 0000 80B4     		push	{r7}
 1107              		.cfi_def_cfa_offset 4
 1108              		.cfi_offset 7, -4
 1109 0002 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
1134:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_TX_INT_ENABLED)
1135:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntEnable(RPi_SPIS_TX_ISR_NUMBER);
1136:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_TX_INT_ENABLED */
1137:Generated_Source\PSoC5/RPi_SPIS.c **** 
1138:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_RX_INT_ENABLED)
1139:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntEnable(RPi_SPIS_RX_ISR_NUMBER);
 1111              		.loc 1 1139 0
 1112 0004 034B     		ldr	r3, .L77
 1113 0006 0822     		movs	r2, #8
 1114 0008 1A60     		str	r2, [r3]
1140:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_RX_INT_ENABLED */
1141:Generated_Source\PSoC5/RPi_SPIS.c **** }
 1115              		.loc 1 1141 0
 1116 000a 00BF     		nop
 1117 000c BD46     		mov	sp, r7
 1118              		.cfi_def_cfa_register 13
 1119              		@ sp needed
 1120 000e 80BC     		pop	{r7}
 1121              		.cfi_restore 7
 1122              		.cfi_def_cfa_offset 0
 1123 0010 7047     		bx	lr
 1124              	.L78:
 1125 0012 00BF     		.align	2
 1126              	.L77:
 1127 0014 00E100E0 		.word	-536813312
 1128              		.cfi_endproc
 1129              	.LFE21:
 1130              		.size	RPi_SPIS_EnableInt, .-RPi_SPIS_EnableInt
 1131              		.section	.text.RPi_SPIS_DisableInt,"ax",%progbits
 1132              		.align	2
 1133              		.global	RPi_SPIS_DisableInt
 1134              		.thumb
 1135              		.thumb_func
 1136              		.type	RPi_SPIS_DisableInt, %function
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 41


 1137              	RPi_SPIS_DisableInt:
 1138              	.LFB22:
1142:Generated_Source\PSoC5/RPi_SPIS.c **** 
1143:Generated_Source\PSoC5/RPi_SPIS.c **** 
1144:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
1145:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_DisableInt
1146:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
1147:Generated_Source\PSoC5/RPi_SPIS.c **** *
1148:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
1149:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable internal interrupt generation.
1150:Generated_Source\PSoC5/RPi_SPIS.c **** *
1151:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
1152:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1153:Generated_Source\PSoC5/RPi_SPIS.c **** *
1154:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
1155:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1156:Generated_Source\PSoC5/RPi_SPIS.c **** *
1157:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
1158:Generated_Source\PSoC5/RPi_SPIS.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:Generated_Source\PSoC5/RPi_SPIS.c **** *
1160:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
1161:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_DisableInt(void) 
1162:Generated_Source\PSoC5/RPi_SPIS.c **** {
 1139              		.loc 1 1162 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143              		@ link register save eliminated.
 1144 0000 80B4     		push	{r7}
 1145              		.cfi_def_cfa_offset 4
 1146              		.cfi_offset 7, -4
 1147 0002 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
1163:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_TX_INT_ENABLED)
1164:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_TX_ISR_NUMBER);
1165:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_TX_INT_ENABLED */
1166:Generated_Source\PSoC5/RPi_SPIS.c **** 
1167:Generated_Source\PSoC5/RPi_SPIS.c ****     #if(RPi_SPIS_INTERNAL_RX_INT_ENABLED)
1168:Generated_Source\PSoC5/RPi_SPIS.c ****         CyIntDisable(RPi_SPIS_RX_ISR_NUMBER);
 1149              		.loc 1 1168 0
 1150 0004 034B     		ldr	r3, .L80
 1151 0006 0822     		movs	r2, #8
 1152 0008 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* RPi_SPIS_INTERNAL_RX_INT_ENABLED */
1170:Generated_Source\PSoC5/RPi_SPIS.c **** }
 1153              		.loc 1 1170 0
 1154 000a 00BF     		nop
 1155 000c BD46     		mov	sp, r7
 1156              		.cfi_def_cfa_register 13
 1157              		@ sp needed
 1158 000e 80BC     		pop	{r7}
 1159              		.cfi_restore 7
 1160              		.cfi_def_cfa_offset 0
 1161 0010 7047     		bx	lr
 1162              	.L81:
 1163 0012 00BF     		.align	2
 1164              	.L80:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 42


 1165 0014 80E100E0 		.word	-536813184
 1166              		.cfi_endproc
 1167              	.LFE22:
 1168              		.size	RPi_SPIS_DisableInt, .-RPi_SPIS_DisableInt
 1169              		.section	.text.RPi_SPIS_SetInterruptMode,"ax",%progbits
 1170              		.align	2
 1171              		.global	RPi_SPIS_SetInterruptMode
 1172              		.thumb
 1173              		.thumb_func
 1174              		.type	RPi_SPIS_SetInterruptMode, %function
 1175              	RPi_SPIS_SetInterruptMode:
 1176              	.LFB23:
1171:Generated_Source\PSoC5/RPi_SPIS.c **** 
1172:Generated_Source\PSoC5/RPi_SPIS.c **** 
1173:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
1174:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_SetInterruptMode
1175:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
1176:Generated_Source\PSoC5/RPi_SPIS.c **** *
1177:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
1178:Generated_Source\PSoC5/RPi_SPIS.c **** *  Configure which status bits trigger an interrupt event.
1179:Generated_Source\PSoC5/RPi_SPIS.c **** *
1180:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
1181:Generated_Source\PSoC5/RPi_SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:Generated_Source\PSoC5/RPi_SPIS.c **** *  header file).
1183:Generated_Source\PSoC5/RPi_SPIS.c **** *
1184:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
1185:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1186:Generated_Source\PSoC5/RPi_SPIS.c **** *
1187:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
1188:Generated_Source\PSoC5/RPi_SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:Generated_Source\PSoC5/RPi_SPIS.c **** *
1190:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
1191:Generated_Source\PSoC5/RPi_SPIS.c **** void RPi_SPIS_SetInterruptMode(uint8 intSrc) 
1192:Generated_Source\PSoC5/RPi_SPIS.c **** {
 1177              		.loc 1 1192 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 8
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182 0000 80B4     		push	{r7}
 1183              		.cfi_def_cfa_offset 4
 1184              		.cfi_offset 7, -4
 1185 0002 83B0     		sub	sp, sp, #12
 1186              		.cfi_def_cfa_offset 16
 1187 0004 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 1189 0006 0346     		mov	r3, r0
 1190 0008 FB71     		strb	r3, [r7, #7]
1193:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_TX_STATUS_MASK_REG  = intSrc;
 1191              		.loc 1 1193 0
 1192 000a 054A     		ldr	r2, .L83
 1193 000c FB79     		ldrb	r3, [r7, #7]
 1194 000e 1370     		strb	r3, [r2]
1194:Generated_Source\PSoC5/RPi_SPIS.c ****     RPi_SPIS_RX_STATUS_MASK_REG  = intSrc;
 1195              		.loc 1 1194 0
 1196 0010 044A     		ldr	r2, .L83+4
 1197 0012 FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 43


 1198 0014 1370     		strb	r3, [r2]
1195:Generated_Source\PSoC5/RPi_SPIS.c **** }
 1199              		.loc 1 1195 0
 1200 0016 00BF     		nop
 1201 0018 0C37     		adds	r7, r7, #12
 1202              		.cfi_def_cfa_offset 4
 1203 001a BD46     		mov	sp, r7
 1204              		.cfi_def_cfa_register 13
 1205              		@ sp needed
 1206 001c 80BC     		pop	{r7}
 1207              		.cfi_restore 7
 1208              		.cfi_def_cfa_offset 0
 1209 001e 7047     		bx	lr
 1210              	.L84:
 1211              		.align	2
 1212              	.L83:
 1213 0020 84640040 		.word	1073767556
 1214 0024 8C640040 		.word	1073767564
 1215              		.cfi_endproc
 1216              	.LFE23:
 1217              		.size	RPi_SPIS_SetInterruptMode, .-RPi_SPIS_SetInterruptMode
 1218              		.section	.text.RPi_SPIS_ReadStatus,"ax",%progbits
 1219              		.align	2
 1220              		.global	RPi_SPIS_ReadStatus
 1221              		.thumb
 1222              		.thumb_func
 1223              		.type	RPi_SPIS_ReadStatus, %function
 1224              	RPi_SPIS_ReadStatus:
 1225              	.LFB24:
1196:Generated_Source\PSoC5/RPi_SPIS.c **** 
1197:Generated_Source\PSoC5/RPi_SPIS.c **** 
1198:Generated_Source\PSoC5/RPi_SPIS.c **** /*******************************************************************************
1199:Generated_Source\PSoC5/RPi_SPIS.c **** * Function Name: RPi_SPIS_ReadStatus
1200:Generated_Source\PSoC5/RPi_SPIS.c **** ********************************************************************************
1201:Generated_Source\PSoC5/RPi_SPIS.c **** *
1202:Generated_Source\PSoC5/RPi_SPIS.c **** * Summary:
1203:Generated_Source\PSoC5/RPi_SPIS.c **** *  Read the status register for the component.
1204:Generated_Source\PSoC5/RPi_SPIS.c **** *
1205:Generated_Source\PSoC5/RPi_SPIS.c **** * Parameters:
1206:Generated_Source\PSoC5/RPi_SPIS.c **** *  None.
1207:Generated_Source\PSoC5/RPi_SPIS.c **** *
1208:Generated_Source\PSoC5/RPi_SPIS.c **** * Return:
1209:Generated_Source\PSoC5/RPi_SPIS.c **** *  Contents of the status register.
1210:Generated_Source\PSoC5/RPi_SPIS.c **** *
1211:Generated_Source\PSoC5/RPi_SPIS.c **** * Global variables:
1212:Generated_Source\PSoC5/RPi_SPIS.c **** *  RPi_SPIS_swStatus - used to store in software status register,
1213:Generated_Source\PSoC5/RPi_SPIS.c **** *  modified every function call - resets to zero.
1214:Generated_Source\PSoC5/RPi_SPIS.c **** *
1215:Generated_Source\PSoC5/RPi_SPIS.c **** * Theory:
1216:Generated_Source\PSoC5/RPi_SPIS.c **** *  Allows the user and the API to read the status register for error detection
1217:Generated_Source\PSoC5/RPi_SPIS.c **** *  and flow control.
1218:Generated_Source\PSoC5/RPi_SPIS.c **** *
1219:Generated_Source\PSoC5/RPi_SPIS.c **** * Side Effects:
1220:Generated_Source\PSoC5/RPi_SPIS.c **** *  Clear status register of the component.
1221:Generated_Source\PSoC5/RPi_SPIS.c **** *
1222:Generated_Source\PSoC5/RPi_SPIS.c **** * Reentrant:
1223:Generated_Source\PSoC5/RPi_SPIS.c **** *  No.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 44


1224:Generated_Source\PSoC5/RPi_SPIS.c **** *
1225:Generated_Source\PSoC5/RPi_SPIS.c **** *******************************************************************************/
1226:Generated_Source\PSoC5/RPi_SPIS.c **** uint8 RPi_SPIS_ReadStatus(void) 
1227:Generated_Source\PSoC5/RPi_SPIS.c **** {
 1226              		.loc 1 1227 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 8
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231 0000 80B4     		push	{r7}
 1232              		.cfi_def_cfa_offset 4
 1233              		.cfi_offset 7, -4
 1234 0002 83B0     		sub	sp, sp, #12
 1235              		.cfi_def_cfa_offset 16
 1236 0004 00AF     		add	r7, sp, #0
 1237              		.cfi_def_cfa_register 7
1228:Generated_Source\PSoC5/RPi_SPIS.c ****     uint8 tmpStatus;
1229:Generated_Source\PSoC5/RPi_SPIS.c **** 
1230:Generated_Source\PSoC5/RPi_SPIS.c ****     #if ((RPi_SPIS_TX_SOFTWARE_BUF_ENABLED) || (RPi_SPIS_RX_SOFTWARE_BUF_ENABLED))
1231:Generated_Source\PSoC5/RPi_SPIS.c **** 
1232:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_DisableInt();
1233:Generated_Source\PSoC5/RPi_SPIS.c **** 
1234:Generated_Source\PSoC5/RPi_SPIS.c ****         tmpStatus = RPi_SPIS_GET_STATUS_TX(RPi_SPIS_swStatusTx) |
1235:Generated_Source\PSoC5/RPi_SPIS.c ****               (RPi_SPIS_GET_STATUS_RX(RPi_SPIS_swStatusRx) & (uint8)~RPi_SPIS_STS_RX_FIFO_FULL);
1236:Generated_Source\PSoC5/RPi_SPIS.c **** 
1237:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_swStatusTx = 0u;
1238:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_swStatusRx = 0u;
1239:Generated_Source\PSoC5/RPi_SPIS.c **** 
1240:Generated_Source\PSoC5/RPi_SPIS.c ****         /* Enable Interrupts */
1241:Generated_Source\PSoC5/RPi_SPIS.c ****         RPi_SPIS_EnableInt();
1242:Generated_Source\PSoC5/RPi_SPIS.c **** 
1243:Generated_Source\PSoC5/RPi_SPIS.c ****     #else /* !((RPi_SPIS_TX_SOFTWARE_BUF_ENABLED) || (RPi_SPIS_RX_SOFTWARE_BUF_ENABLED)) */
1244:Generated_Source\PSoC5/RPi_SPIS.c **** 
1245:Generated_Source\PSoC5/RPi_SPIS.c ****         tmpStatus = RPi_SPIS_TX_STATUS_REG | (RPi_SPIS_RX_STATUS_REG &
 1238              		.loc 1 1245 0
 1239 0006 0A4B     		ldr	r3, .L87
 1240 0008 1B78     		ldrb	r3, [r3]
 1241 000a DBB2     		uxtb	r3, r3
 1242 000c 5AB2     		sxtb	r2, r3
 1243 000e 094B     		ldr	r3, .L87+4
 1244 0010 1B78     		ldrb	r3, [r3]
 1245 0012 DBB2     		uxtb	r3, r3
 1246 0014 5BB2     		sxtb	r3, r3
 1247 0016 23F04003 		bic	r3, r3, #64
 1248 001a 5BB2     		sxtb	r3, r3
 1249 001c 1343     		orrs	r3, r3, r2
 1250 001e 5BB2     		sxtb	r3, r3
 1251 0020 FB71     		strb	r3, [r7, #7]
1246:Generated_Source\PSoC5/RPi_SPIS.c ****                                                       (uint8)~RPi_SPIS_STS_RX_FIFO_FULL);
1247:Generated_Source\PSoC5/RPi_SPIS.c **** 
1248:Generated_Source\PSoC5/RPi_SPIS.c ****     #endif /* (RPi_SPIS_TX_SOFTWARE_BUF_ENABLED) || (RPi_SPIS_RX_SOFTWARE_BUF_ENABLED) */
1249:Generated_Source\PSoC5/RPi_SPIS.c **** 
1250:Generated_Source\PSoC5/RPi_SPIS.c ****     return(tmpStatus);
 1252              		.loc 1 1250 0
 1253 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1251:Generated_Source\PSoC5/RPi_SPIS.c **** }
 1254              		.loc 1 1251 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 45


 1255 0024 1846     		mov	r0, r3
 1256 0026 0C37     		adds	r7, r7, #12
 1257              		.cfi_def_cfa_offset 4
 1258 0028 BD46     		mov	sp, r7
 1259              		.cfi_def_cfa_register 13
 1260              		@ sp needed
 1261 002a 80BC     		pop	{r7}
 1262              		.cfi_restore 7
 1263              		.cfi_def_cfa_offset 0
 1264 002c 7047     		bx	lr
 1265              	.L88:
 1266 002e 00BF     		.align	2
 1267              	.L87:
 1268 0030 64640040 		.word	1073767524
 1269 0034 6C640040 		.word	1073767532
 1270              		.cfi_endproc
 1271              	.LFE24:
 1272              		.size	RPi_SPIS_ReadStatus, .-RPi_SPIS_ReadStatus
 1273              		.text
 1274              	.Letext0:
 1275              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1276              		.section	.debug_info,"",%progbits
 1277              	.Ldebug_info0:
 1278 0000 32040000 		.4byte	0x432
 1279 0004 0400     		.2byte	0x4
 1280 0006 00000000 		.4byte	.Ldebug_abbrev0
 1281 000a 04       		.byte	0x4
 1282 000b 01       		.uleb128 0x1
 1283 000c 40000000 		.4byte	.LASF56
 1284 0010 0C       		.byte	0xc
 1285 0011 6F010000 		.4byte	.LASF57
 1286 0015 8D030000 		.4byte	.LASF58
 1287 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1288 001d 00000000 		.4byte	0
 1289 0021 00000000 		.4byte	.Ldebug_line0
 1290 0025 02       		.uleb128 0x2
 1291 0026 01       		.byte	0x1
 1292 0027 06       		.byte	0x6
 1293 0028 DB030000 		.4byte	.LASF0
 1294 002c 02       		.uleb128 0x2
 1295 002d 01       		.byte	0x1
 1296 002e 08       		.byte	0x8
 1297 002f 2B020000 		.4byte	.LASF1
 1298 0033 02       		.uleb128 0x2
 1299 0034 02       		.byte	0x2
 1300 0035 05       		.byte	0x5
 1301 0036 2C010000 		.4byte	.LASF2
 1302 003a 02       		.uleb128 0x2
 1303 003b 02       		.byte	0x2
 1304 003c 07       		.byte	0x7
 1305 003d 14010000 		.4byte	.LASF3
 1306 0041 02       		.uleb128 0x2
 1307 0042 04       		.byte	0x4
 1308 0043 05       		.byte	0x5
 1309 0044 BC030000 		.4byte	.LASF4
 1310 0048 02       		.uleb128 0x2
 1311 0049 04       		.byte	0x4
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 46


 1312 004a 07       		.byte	0x7
 1313 004b E8010000 		.4byte	.LASF5
 1314 004f 02       		.uleb128 0x2
 1315 0050 08       		.byte	0x8
 1316 0051 05       		.byte	0x5
 1317 0052 00000000 		.4byte	.LASF6
 1318 0056 02       		.uleb128 0x2
 1319 0057 08       		.byte	0x8
 1320 0058 07       		.byte	0x7
 1321 0059 99020000 		.4byte	.LASF7
 1322 005d 03       		.uleb128 0x3
 1323 005e 04       		.byte	0x4
 1324 005f 05       		.byte	0x5
 1325 0060 696E7400 		.ascii	"int\000"
 1326 0064 02       		.uleb128 0x2
 1327 0065 04       		.byte	0x4
 1328 0066 07       		.byte	0x7
 1329 0067 7A020000 		.4byte	.LASF8
 1330 006b 04       		.uleb128 0x4
 1331 006c FA010000 		.4byte	.LASF9
 1332 0070 02       		.byte	0x2
 1333 0071 A1       		.byte	0xa1
 1334 0072 2C000000 		.4byte	0x2c
 1335 0076 04       		.uleb128 0x4
 1336 0077 73020000 		.4byte	.LASF10
 1337 007b 02       		.byte	0x2
 1338 007c A3       		.byte	0xa3
 1339 007d 48000000 		.4byte	0x48
 1340 0081 02       		.uleb128 0x2
 1341 0082 04       		.byte	0x4
 1342 0083 04       		.byte	0x4
 1343 0084 69010000 		.4byte	.LASF11
 1344 0088 02       		.uleb128 0x2
 1345 0089 08       		.byte	0x8
 1346 008a 04       		.byte	0x4
 1347 008b 50020000 		.4byte	.LASF12
 1348 008f 02       		.uleb128 0x2
 1349 0090 01       		.byte	0x1
 1350 0091 08       		.byte	0x8
 1351 0092 27010000 		.4byte	.LASF13
 1352 0096 05       		.uleb128 0x5
 1353 0097 D2010000 		.4byte	.LASF14
 1354 009b 02       		.byte	0x2
 1355 009c 4B01     		.2byte	0x14b
 1356 009e A2000000 		.4byte	0xa2
 1357 00a2 06       		.uleb128 0x6
 1358 00a3 6B000000 		.4byte	0x6b
 1359 00a7 05       		.uleb128 0x5
 1360 00a8 3A000000 		.4byte	.LASF15
 1361 00ac 02       		.byte	0x2
 1362 00ad 4D01     		.2byte	0x14d
 1363 00af B3000000 		.4byte	0xb3
 1364 00b3 06       		.uleb128 0x6
 1365 00b4 76000000 		.4byte	0x76
 1366 00b8 02       		.uleb128 0x2
 1367 00b9 08       		.byte	0x8
 1368 00ba 04       		.byte	0x4
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 47


 1369 00bb CF030000 		.4byte	.LASF16
 1370 00bf 02       		.uleb128 0x2
 1371 00c0 04       		.byte	0x4
 1372 00c1 07       		.byte	0x7
 1373 00c2 C8020000 		.4byte	.LASF17
 1374 00c6 07       		.uleb128 0x7
 1375 00c7 38040000 		.4byte	.LASF18
 1376 00cb 01       		.byte	0x1
 1377 00cc 43       		.byte	0x43
 1378 00cd 00000000 		.4byte	.LFB0
 1379 00d1 50000000 		.4byte	.LFE0-.LFB0
 1380 00d5 01       		.uleb128 0x1
 1381 00d6 9C       		.byte	0x9c
 1382 00d7 08       		.uleb128 0x8
 1383 00d8 00020000 		.4byte	.LASF20
 1384 00dc 01       		.byte	0x1
 1385 00dd 8E       		.byte	0x8e
 1386 00de 00000000 		.4byte	.LFB1
 1387 00e2 64000000 		.4byte	.LFE1-.LFB1
 1388 00e6 01       		.uleb128 0x1
 1389 00e7 9C       		.byte	0x9c
 1390 00e8 FB000000 		.4byte	0xfb
 1391 00ec 09       		.uleb128 0x9
 1392 00ed 1A020000 		.4byte	.LASF22
 1393 00f1 01       		.byte	0x1
 1394 00f2 90       		.byte	0x90
 1395 00f3 6B000000 		.4byte	0x6b
 1396 00f7 02       		.uleb128 0x2
 1397 00f8 91       		.byte	0x91
 1398 00f9 77       		.sleb128 -9
 1399 00fa 00       		.byte	0
 1400 00fb 07       		.uleb128 0x7
 1401 00fc B0020000 		.4byte	.LASF19
 1402 0100 01       		.byte	0x1
 1403 0101 BB       		.byte	0xbb
 1404 0102 00000000 		.4byte	.LFB2
 1405 0106 24000000 		.4byte	.LFE2-.LFB2
 1406 010a 01       		.uleb128 0x1
 1407 010b 9C       		.byte	0x9c
 1408 010c 08       		.uleb128 0x8
 1409 010d AF010000 		.4byte	.LASF21
 1410 0111 01       		.byte	0x1
 1411 0112 D8       		.byte	0xd8
 1412 0113 00000000 		.4byte	.LFB3
 1413 0117 50000000 		.4byte	.LFE3-.LFB3
 1414 011b 01       		.uleb128 0x1
 1415 011c 9C       		.byte	0x9c
 1416 011d 30010000 		.4byte	0x130
 1417 0121 09       		.uleb128 0x9
 1418 0122 1A020000 		.4byte	.LASF22
 1419 0126 01       		.byte	0x1
 1420 0127 DA       		.byte	0xda
 1421 0128 6B000000 		.4byte	0x6b
 1422 012c 02       		.uleb128 0x2
 1423 012d 91       		.byte	0x91
 1424 012e 77       		.sleb128 -9
 1425 012f 00       		.byte	0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 48


 1426 0130 0A       		.uleb128 0xa
 1427 0131 71030000 		.4byte	.LASF23
 1428 0135 01       		.byte	0x1
 1429 0136 FD       		.byte	0xfd
 1430 0137 00000000 		.4byte	.LFB4
 1431 013b 0C000000 		.4byte	.LFE4-.LFB4
 1432 013f 01       		.uleb128 0x1
 1433 0140 9C       		.byte	0x9c
 1434 0141 0B       		.uleb128 0xb
 1435 0142 BD010000 		.4byte	.LASF24
 1436 0146 01       		.byte	0x1
 1437 0147 1601     		.2byte	0x116
 1438 0149 00000000 		.4byte	.LFB5
 1439 014d 18000000 		.4byte	.LFE5-.LFB5
 1440 0151 01       		.uleb128 0x1
 1441 0152 9C       		.byte	0x9c
 1442 0153 0B       		.uleb128 0xb
 1443 0154 36010000 		.4byte	.LASF25
 1444 0158 01       		.byte	0x1
 1445 0159 2F01     		.2byte	0x12f
 1446 015b 00000000 		.4byte	.LFB6
 1447 015f 0C000000 		.4byte	.LFE6-.LFB6
 1448 0163 01       		.uleb128 0x1
 1449 0164 9C       		.byte	0x9c
 1450 0165 0B       		.uleb128 0xb
 1451 0166 D1020000 		.4byte	.LASF26
 1452 016a 01       		.byte	0x1
 1453 016b 4801     		.2byte	0x148
 1454 016d 00000000 		.4byte	.LFB7
 1455 0171 18000000 		.4byte	.LFE7-.LFB7
 1456 0175 01       		.uleb128 0x1
 1457 0176 9C       		.byte	0x9c
 1458 0177 0C       		.uleb128 0xc
 1459 0178 00040000 		.4byte	.LASF27
 1460 017c 01       		.byte	0x1
 1461 017d 6201     		.2byte	0x162
 1462 017f 00000000 		.4byte	.LFB8
 1463 0183 20000000 		.4byte	.LFE8-.LFB8
 1464 0187 01       		.uleb128 0x1
 1465 0188 9C       		.byte	0x9c
 1466 0189 9D010000 		.4byte	0x19d
 1467 018d 0D       		.uleb128 0xd
 1468 018e 57020000 		.4byte	.LASF29
 1469 0192 01       		.byte	0x1
 1470 0193 6201     		.2byte	0x162
 1471 0195 6B000000 		.4byte	0x6b
 1472 0199 02       		.uleb128 0x2
 1473 019a 91       		.byte	0x91
 1474 019b 77       		.sleb128 -9
 1475 019c 00       		.byte	0
 1476 019d 0C       		.uleb128 0xc
 1477 019e 1C040000 		.4byte	.LASF28
 1478 01a2 01       		.byte	0x1
 1479 01a3 7A01     		.2byte	0x17a
 1480 01a5 00000000 		.4byte	.LFB9
 1481 01a9 20000000 		.4byte	.LFE9-.LFB9
 1482 01ad 01       		.uleb128 0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 49


 1483 01ae 9C       		.byte	0x9c
 1484 01af C3010000 		.4byte	0x1c3
 1485 01b3 0D       		.uleb128 0xd
 1486 01b4 57020000 		.4byte	.LASF29
 1487 01b8 01       		.byte	0x1
 1488 01b9 7A01     		.2byte	0x17a
 1489 01bb 6B000000 		.4byte	0x6b
 1490 01bf 02       		.uleb128 0x2
 1491 01c0 91       		.byte	0x91
 1492 01c1 77       		.sleb128 -9
 1493 01c2 00       		.byte	0
 1494 01c3 0E       		.uleb128 0xe
 1495 01c4 48030000 		.4byte	.LASF31
 1496 01c8 01       		.byte	0x1
 1497 01c9 9C01     		.2byte	0x19c
 1498 01cb 6B000000 		.4byte	0x6b
 1499 01cf 00000000 		.4byte	.LFB10
 1500 01d3 1C000000 		.4byte	.LFE10-.LFB10
 1501 01d7 01       		.uleb128 0x1
 1502 01d8 9C       		.byte	0x9c
 1503 01d9 ED010000 		.4byte	0x1ed
 1504 01dd 0F       		.uleb128 0xf
 1505 01de C5030000 		.4byte	.LASF30
 1506 01e2 01       		.byte	0x1
 1507 01e3 9E01     		.2byte	0x19e
 1508 01e5 6B000000 		.4byte	0x6b
 1509 01e9 02       		.uleb128 0x2
 1510 01ea 91       		.byte	0x91
 1511 01eb 77       		.sleb128 -9
 1512 01ec 00       		.byte	0
 1513 01ed 0E       		.uleb128 0xe
 1514 01ee 53010000 		.4byte	.LASF32
 1515 01f2 01       		.byte	0x1
 1516 01f3 D101     		.2byte	0x1d1
 1517 01f5 6B000000 		.4byte	0x6b
 1518 01f9 00000000 		.4byte	.LFB11
 1519 01fd 1C000000 		.4byte	.LFE11-.LFB11
 1520 0201 01       		.uleb128 0x1
 1521 0202 9C       		.byte	0x9c
 1522 0203 17020000 		.4byte	0x217
 1523 0207 0F       		.uleb128 0xf
 1524 0208 C5030000 		.4byte	.LASF30
 1525 020c 01       		.byte	0x1
 1526 020d D301     		.2byte	0x1d3
 1527 020f 6B000000 		.4byte	0x6b
 1528 0213 02       		.uleb128 0x2
 1529 0214 91       		.byte	0x91
 1530 0215 77       		.sleb128 -9
 1531 0216 00       		.byte	0
 1532 0217 0C       		.uleb128 0xc
 1533 0218 5E020000 		.4byte	.LASF33
 1534 021c 01       		.byte	0x1
 1535 021d 0C02     		.2byte	0x20c
 1536 021f 00000000 		.4byte	.LFB12
 1537 0223 34000000 		.4byte	.LFE12-.LFB12
 1538 0227 01       		.uleb128 0x1
 1539 0228 9C       		.byte	0x9c
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 50


 1540 0229 3D020000 		.4byte	0x23d
 1541 022d 0D       		.uleb128 0xd
 1542 022e 0D010000 		.4byte	.LASF34
 1543 0232 01       		.byte	0x1
 1544 0233 0C02     		.2byte	0x20c
 1545 0235 6B000000 		.4byte	0x6b
 1546 0239 02       		.uleb128 0x2
 1547 023a 91       		.byte	0x91
 1548 023b 77       		.sleb128 -9
 1549 023c 00       		.byte	0
 1550 023d 0C       		.uleb128 0xc
 1551 023e E7030000 		.4byte	.LASF35
 1552 0242 01       		.byte	0x1
 1553 0243 6B02     		.2byte	0x26b
 1554 0245 00000000 		.4byte	.LFB13
 1555 0249 20000000 		.4byte	.LFE13-.LFB13
 1556 024d 01       		.uleb128 0x1
 1557 024e 9C       		.byte	0x9c
 1558 024f 63020000 		.4byte	0x263
 1559 0253 0D       		.uleb128 0xd
 1560 0254 E7020000 		.4byte	.LASF36
 1561 0258 01       		.byte	0x1
 1562 0259 6B02     		.2byte	0x26b
 1563 025b 6B000000 		.4byte	0x6b
 1564 025f 02       		.uleb128 0x2
 1565 0260 91       		.byte	0x91
 1566 0261 77       		.sleb128 -9
 1567 0262 00       		.byte	0
 1568 0263 0E       		.uleb128 0xe
 1569 0264 E2000000 		.4byte	.LASF37
 1570 0268 01       		.byte	0x1
 1571 0269 9502     		.2byte	0x295
 1572 026b 6B000000 		.4byte	0x6b
 1573 026f 00000000 		.4byte	.LFB14
 1574 0273 1C000000 		.4byte	.LFE14-.LFB14
 1575 0277 01       		.uleb128 0x1
 1576 0278 9C       		.byte	0x9c
 1577 0279 8D020000 		.4byte	0x28d
 1578 027d 0F       		.uleb128 0xf
 1579 027e 4C010000 		.4byte	.LASF38
 1580 0282 01       		.byte	0x1
 1581 0283 9702     		.2byte	0x297
 1582 0285 6B000000 		.4byte	0x6b
 1583 0289 02       		.uleb128 0x2
 1584 028a 91       		.byte	0x91
 1585 028b 77       		.sleb128 -9
 1586 028c 00       		.byte	0
 1587 028d 0E       		.uleb128 0xe
 1588 028e 21000000 		.4byte	.LASF39
 1589 0292 01       		.byte	0x1
 1590 0293 D702     		.2byte	0x2d7
 1591 0295 6B000000 		.4byte	0x6b
 1592 0299 00000000 		.4byte	.LFB15
 1593 029d 2C000000 		.4byte	.LFE15-.LFB15
 1594 02a1 01       		.uleb128 0x1
 1595 02a2 9C       		.byte	0x9c
 1596 02a3 B7020000 		.4byte	0x2b7
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 51


 1597 02a7 0F       		.uleb128 0xf
 1598 02a8 AA010000 		.4byte	.LASF40
 1599 02ac 01       		.byte	0x1
 1600 02ad D902     		.2byte	0x2d9
 1601 02af 6B000000 		.4byte	0x6b
 1602 02b3 02       		.uleb128 0x2
 1603 02b4 91       		.byte	0x91
 1604 02b5 77       		.sleb128 -9
 1605 02b6 00       		.byte	0
 1606 02b7 0E       		.uleb128 0xe
 1607 02b8 91010000 		.4byte	.LASF41
 1608 02bc 01       		.byte	0x1
 1609 02bd 1803     		.2byte	0x318
 1610 02bf 6B000000 		.4byte	0x6b
 1611 02c3 00000000 		.4byte	.LFB16
 1612 02c7 40000000 		.4byte	.LFE16-.LFB16
 1613 02cb 01       		.uleb128 0x1
 1614 02cc 9C       		.byte	0x9c
 1615 02cd E1020000 		.4byte	0x2e1
 1616 02d1 0F       		.uleb128 0xf
 1617 02d2 AA010000 		.4byte	.LASF40
 1618 02d6 01       		.byte	0x1
 1619 02d7 1A03     		.2byte	0x31a
 1620 02d9 6B000000 		.4byte	0x6b
 1621 02dd 02       		.uleb128 0x2
 1622 02de 91       		.byte	0x91
 1623 02df 77       		.sleb128 -9
 1624 02e0 00       		.byte	0
 1625 02e1 0B       		.uleb128 0xb
 1626 02e2 39020000 		.4byte	.LASF42
 1627 02e6 01       		.byte	0x1
 1628 02e7 6A03     		.2byte	0x36a
 1629 02e9 00000000 		.4byte	.LFB17
 1630 02ed 28000000 		.4byte	.LFE17-.LFB17
 1631 02f1 01       		.uleb128 0x1
 1632 02f2 9C       		.byte	0x9c
 1633 02f3 10       		.uleb128 0x10
 1634 02f4 F6000000 		.4byte	.LASF43
 1635 02f8 01       		.byte	0x1
 1636 02f9 A303     		.2byte	0x3a3
 1637 02fb 00000000 		.4byte	.LFB18
 1638 02ff 44000000 		.4byte	.LFE18-.LFB18
 1639 0303 01       		.uleb128 0x1
 1640 0304 9C       		.byte	0x9c
 1641 0305 19030000 		.4byte	0x319
 1642 0309 0F       		.uleb128 0xf
 1643 030a 1A020000 		.4byte	.LASF22
 1644 030e 01       		.byte	0x1
 1645 030f A503     		.2byte	0x3a5
 1646 0311 6B000000 		.4byte	0x6b
 1647 0315 02       		.uleb128 0x2
 1648 0316 91       		.byte	0x91
 1649 0317 77       		.sleb128 -9
 1650 0318 00       		.byte	0
 1651 0319 10       		.uleb128 0x10
 1652 031a 87020000 		.4byte	.LASF44
 1653 031e 01       		.byte	0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 52


 1654 031f 1704     		.2byte	0x417
 1655 0321 00000000 		.4byte	.LFB19
 1656 0325 3A000000 		.4byte	.LFE19-.LFB19
 1657 0329 01       		.uleb128 0x1
 1658 032a 9C       		.byte	0x9c
 1659 032b 5D030000 		.4byte	0x35d
 1660 032f 0D       		.uleb128 0xd
 1661 0330 86030000 		.4byte	.LASF45
 1662 0334 01       		.byte	0x1
 1663 0335 1704     		.2byte	0x417
 1664 0337 5D030000 		.4byte	0x35d
 1665 033b 02       		.uleb128 0x2
 1666 033c 91       		.byte	0x91
 1667 033d 6C       		.sleb128 -20
 1668 033e 0D       		.uleb128 0xd
 1669 033f 10020000 		.4byte	.LASF46
 1670 0343 01       		.byte	0x1
 1671 0344 1704     		.2byte	0x417
 1672 0346 6B000000 		.4byte	0x6b
 1673 034a 02       		.uleb128 0x2
 1674 034b 91       		.byte	0x91
 1675 034c 6B       		.sleb128 -21
 1676 034d 0F       		.uleb128 0xf
 1677 034e BF020000 		.4byte	.LASF47
 1678 0352 01       		.byte	0x1
 1679 0353 1A04     		.2byte	0x41a
 1680 0355 6B000000 		.4byte	0x6b
 1681 0359 02       		.uleb128 0x2
 1682 035a 91       		.byte	0x91
 1683 035b 77       		.sleb128 -9
 1684 035c 00       		.byte	0
 1685 035d 11       		.uleb128 0x11
 1686 035e 04       		.byte	0x4
 1687 035f 63030000 		.4byte	0x363
 1688 0363 12       		.uleb128 0x12
 1689 0364 6B000000 		.4byte	0x6b
 1690 0368 10       		.uleb128 0x10
 1691 0369 0E000000 		.4byte	.LASF48
 1692 036d 01       		.byte	0x1
 1693 036e 3704     		.2byte	0x437
 1694 0370 00000000 		.4byte	.LFB20
 1695 0374 60000000 		.4byte	.LFE20-.LFB20
 1696 0378 01       		.uleb128 0x1
 1697 0379 9C       		.byte	0x9c
 1698 037a 8E030000 		.4byte	0x38e
 1699 037e 0F       		.uleb128 0xf
 1700 037f 1A020000 		.4byte	.LASF22
 1701 0383 01       		.byte	0x1
 1702 0384 3904     		.2byte	0x439
 1703 0386 6B000000 		.4byte	0x6b
 1704 038a 02       		.uleb128 0x2
 1705 038b 91       		.byte	0x91
 1706 038c 77       		.sleb128 -9
 1707 038d 00       		.byte	0
 1708 038e 0B       		.uleb128 0xb
 1709 038f 5E030000 		.4byte	.LASF49
 1710 0393 01       		.byte	0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 53


 1711 0394 6C04     		.2byte	0x46c
 1712 0396 00000000 		.4byte	.LFB21
 1713 039a 18000000 		.4byte	.LFE21-.LFB21
 1714 039e 01       		.uleb128 0x1
 1715 039f 9C       		.byte	0x9c
 1716 03a0 0B       		.uleb128 0xb
 1717 03a1 F2020000 		.4byte	.LASF50
 1718 03a5 01       		.byte	0x1
 1719 03a6 8904     		.2byte	0x489
 1720 03a8 00000000 		.4byte	.LFB22
 1721 03ac 18000000 		.4byte	.LFE22-.LFB22
 1722 03b0 01       		.uleb128 0x1
 1723 03b1 9C       		.byte	0x9c
 1724 03b2 0C       		.uleb128 0xc
 1725 03b3 1A030000 		.4byte	.LASF51
 1726 03b7 01       		.byte	0x1
 1727 03b8 A704     		.2byte	0x4a7
 1728 03ba 00000000 		.4byte	.LFB23
 1729 03be 28000000 		.4byte	.LFE23-.LFB23
 1730 03c2 01       		.uleb128 0x1
 1731 03c3 9C       		.byte	0x9c
 1732 03c4 D8030000 		.4byte	0x3d8
 1733 03c8 0D       		.uleb128 0xd
 1734 03c9 57020000 		.4byte	.LASF29
 1735 03cd 01       		.byte	0x1
 1736 03ce A704     		.2byte	0x4a7
 1737 03d0 6B000000 		.4byte	0x6b
 1738 03d4 02       		.uleb128 0x2
 1739 03d5 91       		.byte	0x91
 1740 03d6 77       		.sleb128 -9
 1741 03d7 00       		.byte	0
 1742 03d8 0E       		.uleb128 0xe
 1743 03d9 06030000 		.4byte	.LASF52
 1744 03dd 01       		.byte	0x1
 1745 03de CA04     		.2byte	0x4ca
 1746 03e0 6B000000 		.4byte	0x6b
 1747 03e4 00000000 		.4byte	.LFB24
 1748 03e8 38000000 		.4byte	.LFE24-.LFB24
 1749 03ec 01       		.uleb128 0x1
 1750 03ed 9C       		.byte	0x9c
 1751 03ee 02040000 		.4byte	0x402
 1752 03f2 0F       		.uleb128 0xf
 1753 03f3 C5030000 		.4byte	.LASF30
 1754 03f7 01       		.byte	0x1
 1755 03f8 CC04     		.2byte	0x4cc
 1756 03fa 6B000000 		.4byte	0x6b
 1757 03fe 02       		.uleb128 0x2
 1758 03ff 91       		.byte	0x91
 1759 0400 77       		.sleb128 -9
 1760 0401 00       		.byte	0
 1761 0402 13       		.uleb128 0x13
 1762 0403 D7010000 		.4byte	.LASF53
 1763 0407 01       		.byte	0x1
 1764 0408 26       		.byte	0x26
 1765 0409 6B000000 		.4byte	0x6b
 1766 040d 05       		.uleb128 0x5
 1767 040e 03       		.byte	0x3
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 54


 1768 040f 00000000 		.4byte	RPi_SPIS_initVar
 1769 0413 13       		.uleb128 0x13
 1770 0414 CE000000 		.4byte	.LASF54
 1771 0418 01       		.byte	0x1
 1772 0419 28       		.byte	0x28
 1773 041a A2000000 		.4byte	0xa2
 1774 041e 05       		.uleb128 0x5
 1775 041f 03       		.byte	0x3
 1776 0420 00000000 		.4byte	RPi_SPIS_swStatusTx
 1777 0424 13       		.uleb128 0x13
 1778 0425 34030000 		.4byte	.LASF55
 1779 0429 01       		.byte	0x1
 1780 042a 29       		.byte	0x29
 1781 042b A2000000 		.4byte	0xa2
 1782 042f 05       		.uleb128 0x5
 1783 0430 03       		.byte	0x3
 1784 0431 00000000 		.4byte	RPi_SPIS_swStatusRx
 1785 0435 00       		.byte	0
 1786              		.section	.debug_abbrev,"",%progbits
 1787              	.Ldebug_abbrev0:
 1788 0000 01       		.uleb128 0x1
 1789 0001 11       		.uleb128 0x11
 1790 0002 01       		.byte	0x1
 1791 0003 25       		.uleb128 0x25
 1792 0004 0E       		.uleb128 0xe
 1793 0005 13       		.uleb128 0x13
 1794 0006 0B       		.uleb128 0xb
 1795 0007 03       		.uleb128 0x3
 1796 0008 0E       		.uleb128 0xe
 1797 0009 1B       		.uleb128 0x1b
 1798 000a 0E       		.uleb128 0xe
 1799 000b 55       		.uleb128 0x55
 1800 000c 17       		.uleb128 0x17
 1801 000d 11       		.uleb128 0x11
 1802 000e 01       		.uleb128 0x1
 1803 000f 10       		.uleb128 0x10
 1804 0010 17       		.uleb128 0x17
 1805 0011 00       		.byte	0
 1806 0012 00       		.byte	0
 1807 0013 02       		.uleb128 0x2
 1808 0014 24       		.uleb128 0x24
 1809 0015 00       		.byte	0
 1810 0016 0B       		.uleb128 0xb
 1811 0017 0B       		.uleb128 0xb
 1812 0018 3E       		.uleb128 0x3e
 1813 0019 0B       		.uleb128 0xb
 1814 001a 03       		.uleb128 0x3
 1815 001b 0E       		.uleb128 0xe
 1816 001c 00       		.byte	0
 1817 001d 00       		.byte	0
 1818 001e 03       		.uleb128 0x3
 1819 001f 24       		.uleb128 0x24
 1820 0020 00       		.byte	0
 1821 0021 0B       		.uleb128 0xb
 1822 0022 0B       		.uleb128 0xb
 1823 0023 3E       		.uleb128 0x3e
 1824 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 55


 1825 0025 03       		.uleb128 0x3
 1826 0026 08       		.uleb128 0x8
 1827 0027 00       		.byte	0
 1828 0028 00       		.byte	0
 1829 0029 04       		.uleb128 0x4
 1830 002a 16       		.uleb128 0x16
 1831 002b 00       		.byte	0
 1832 002c 03       		.uleb128 0x3
 1833 002d 0E       		.uleb128 0xe
 1834 002e 3A       		.uleb128 0x3a
 1835 002f 0B       		.uleb128 0xb
 1836 0030 3B       		.uleb128 0x3b
 1837 0031 0B       		.uleb128 0xb
 1838 0032 49       		.uleb128 0x49
 1839 0033 13       		.uleb128 0x13
 1840 0034 00       		.byte	0
 1841 0035 00       		.byte	0
 1842 0036 05       		.uleb128 0x5
 1843 0037 16       		.uleb128 0x16
 1844 0038 00       		.byte	0
 1845 0039 03       		.uleb128 0x3
 1846 003a 0E       		.uleb128 0xe
 1847 003b 3A       		.uleb128 0x3a
 1848 003c 0B       		.uleb128 0xb
 1849 003d 3B       		.uleb128 0x3b
 1850 003e 05       		.uleb128 0x5
 1851 003f 49       		.uleb128 0x49
 1852 0040 13       		.uleb128 0x13
 1853 0041 00       		.byte	0
 1854 0042 00       		.byte	0
 1855 0043 06       		.uleb128 0x6
 1856 0044 35       		.uleb128 0x35
 1857 0045 00       		.byte	0
 1858 0046 49       		.uleb128 0x49
 1859 0047 13       		.uleb128 0x13
 1860 0048 00       		.byte	0
 1861 0049 00       		.byte	0
 1862 004a 07       		.uleb128 0x7
 1863 004b 2E       		.uleb128 0x2e
 1864 004c 00       		.byte	0
 1865 004d 3F       		.uleb128 0x3f
 1866 004e 19       		.uleb128 0x19
 1867 004f 03       		.uleb128 0x3
 1868 0050 0E       		.uleb128 0xe
 1869 0051 3A       		.uleb128 0x3a
 1870 0052 0B       		.uleb128 0xb
 1871 0053 3B       		.uleb128 0x3b
 1872 0054 0B       		.uleb128 0xb
 1873 0055 27       		.uleb128 0x27
 1874 0056 19       		.uleb128 0x19
 1875 0057 11       		.uleb128 0x11
 1876 0058 01       		.uleb128 0x1
 1877 0059 12       		.uleb128 0x12
 1878 005a 06       		.uleb128 0x6
 1879 005b 40       		.uleb128 0x40
 1880 005c 18       		.uleb128 0x18
 1881 005d 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 56


 1882 005f 19       		.uleb128 0x19
 1883 0060 00       		.byte	0
 1884 0061 00       		.byte	0
 1885 0062 08       		.uleb128 0x8
 1886 0063 2E       		.uleb128 0x2e
 1887 0064 01       		.byte	0x1
 1888 0065 3F       		.uleb128 0x3f
 1889 0066 19       		.uleb128 0x19
 1890 0067 03       		.uleb128 0x3
 1891 0068 0E       		.uleb128 0xe
 1892 0069 3A       		.uleb128 0x3a
 1893 006a 0B       		.uleb128 0xb
 1894 006b 3B       		.uleb128 0x3b
 1895 006c 0B       		.uleb128 0xb
 1896 006d 27       		.uleb128 0x27
 1897 006e 19       		.uleb128 0x19
 1898 006f 11       		.uleb128 0x11
 1899 0070 01       		.uleb128 0x1
 1900 0071 12       		.uleb128 0x12
 1901 0072 06       		.uleb128 0x6
 1902 0073 40       		.uleb128 0x40
 1903 0074 18       		.uleb128 0x18
 1904 0075 9642     		.uleb128 0x2116
 1905 0077 19       		.uleb128 0x19
 1906 0078 01       		.uleb128 0x1
 1907 0079 13       		.uleb128 0x13
 1908 007a 00       		.byte	0
 1909 007b 00       		.byte	0
 1910 007c 09       		.uleb128 0x9
 1911 007d 34       		.uleb128 0x34
 1912 007e 00       		.byte	0
 1913 007f 03       		.uleb128 0x3
 1914 0080 0E       		.uleb128 0xe
 1915 0081 3A       		.uleb128 0x3a
 1916 0082 0B       		.uleb128 0xb
 1917 0083 3B       		.uleb128 0x3b
 1918 0084 0B       		.uleb128 0xb
 1919 0085 49       		.uleb128 0x49
 1920 0086 13       		.uleb128 0x13
 1921 0087 02       		.uleb128 0x2
 1922 0088 18       		.uleb128 0x18
 1923 0089 00       		.byte	0
 1924 008a 00       		.byte	0
 1925 008b 0A       		.uleb128 0xa
 1926 008c 2E       		.uleb128 0x2e
 1927 008d 00       		.byte	0
 1928 008e 3F       		.uleb128 0x3f
 1929 008f 19       		.uleb128 0x19
 1930 0090 03       		.uleb128 0x3
 1931 0091 0E       		.uleb128 0xe
 1932 0092 3A       		.uleb128 0x3a
 1933 0093 0B       		.uleb128 0xb
 1934 0094 3B       		.uleb128 0x3b
 1935 0095 0B       		.uleb128 0xb
 1936 0096 27       		.uleb128 0x27
 1937 0097 19       		.uleb128 0x19
 1938 0098 11       		.uleb128 0x11
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 57


 1939 0099 01       		.uleb128 0x1
 1940 009a 12       		.uleb128 0x12
 1941 009b 06       		.uleb128 0x6
 1942 009c 40       		.uleb128 0x40
 1943 009d 18       		.uleb128 0x18
 1944 009e 9742     		.uleb128 0x2117
 1945 00a0 19       		.uleb128 0x19
 1946 00a1 00       		.byte	0
 1947 00a2 00       		.byte	0
 1948 00a3 0B       		.uleb128 0xb
 1949 00a4 2E       		.uleb128 0x2e
 1950 00a5 00       		.byte	0
 1951 00a6 3F       		.uleb128 0x3f
 1952 00a7 19       		.uleb128 0x19
 1953 00a8 03       		.uleb128 0x3
 1954 00a9 0E       		.uleb128 0xe
 1955 00aa 3A       		.uleb128 0x3a
 1956 00ab 0B       		.uleb128 0xb
 1957 00ac 3B       		.uleb128 0x3b
 1958 00ad 05       		.uleb128 0x5
 1959 00ae 27       		.uleb128 0x27
 1960 00af 19       		.uleb128 0x19
 1961 00b0 11       		.uleb128 0x11
 1962 00b1 01       		.uleb128 0x1
 1963 00b2 12       		.uleb128 0x12
 1964 00b3 06       		.uleb128 0x6
 1965 00b4 40       		.uleb128 0x40
 1966 00b5 18       		.uleb128 0x18
 1967 00b6 9742     		.uleb128 0x2117
 1968 00b8 19       		.uleb128 0x19
 1969 00b9 00       		.byte	0
 1970 00ba 00       		.byte	0
 1971 00bb 0C       		.uleb128 0xc
 1972 00bc 2E       		.uleb128 0x2e
 1973 00bd 01       		.byte	0x1
 1974 00be 3F       		.uleb128 0x3f
 1975 00bf 19       		.uleb128 0x19
 1976 00c0 03       		.uleb128 0x3
 1977 00c1 0E       		.uleb128 0xe
 1978 00c2 3A       		.uleb128 0x3a
 1979 00c3 0B       		.uleb128 0xb
 1980 00c4 3B       		.uleb128 0x3b
 1981 00c5 05       		.uleb128 0x5
 1982 00c6 27       		.uleb128 0x27
 1983 00c7 19       		.uleb128 0x19
 1984 00c8 11       		.uleb128 0x11
 1985 00c9 01       		.uleb128 0x1
 1986 00ca 12       		.uleb128 0x12
 1987 00cb 06       		.uleb128 0x6
 1988 00cc 40       		.uleb128 0x40
 1989 00cd 18       		.uleb128 0x18
 1990 00ce 9742     		.uleb128 0x2117
 1991 00d0 19       		.uleb128 0x19
 1992 00d1 01       		.uleb128 0x1
 1993 00d2 13       		.uleb128 0x13
 1994 00d3 00       		.byte	0
 1995 00d4 00       		.byte	0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 58


 1996 00d5 0D       		.uleb128 0xd
 1997 00d6 05       		.uleb128 0x5
 1998 00d7 00       		.byte	0
 1999 00d8 03       		.uleb128 0x3
 2000 00d9 0E       		.uleb128 0xe
 2001 00da 3A       		.uleb128 0x3a
 2002 00db 0B       		.uleb128 0xb
 2003 00dc 3B       		.uleb128 0x3b
 2004 00dd 05       		.uleb128 0x5
 2005 00de 49       		.uleb128 0x49
 2006 00df 13       		.uleb128 0x13
 2007 00e0 02       		.uleb128 0x2
 2008 00e1 18       		.uleb128 0x18
 2009 00e2 00       		.byte	0
 2010 00e3 00       		.byte	0
 2011 00e4 0E       		.uleb128 0xe
 2012 00e5 2E       		.uleb128 0x2e
 2013 00e6 01       		.byte	0x1
 2014 00e7 3F       		.uleb128 0x3f
 2015 00e8 19       		.uleb128 0x19
 2016 00e9 03       		.uleb128 0x3
 2017 00ea 0E       		.uleb128 0xe
 2018 00eb 3A       		.uleb128 0x3a
 2019 00ec 0B       		.uleb128 0xb
 2020 00ed 3B       		.uleb128 0x3b
 2021 00ee 05       		.uleb128 0x5
 2022 00ef 27       		.uleb128 0x27
 2023 00f0 19       		.uleb128 0x19
 2024 00f1 49       		.uleb128 0x49
 2025 00f2 13       		.uleb128 0x13
 2026 00f3 11       		.uleb128 0x11
 2027 00f4 01       		.uleb128 0x1
 2028 00f5 12       		.uleb128 0x12
 2029 00f6 06       		.uleb128 0x6
 2030 00f7 40       		.uleb128 0x40
 2031 00f8 18       		.uleb128 0x18
 2032 00f9 9742     		.uleb128 0x2117
 2033 00fb 19       		.uleb128 0x19
 2034 00fc 01       		.uleb128 0x1
 2035 00fd 13       		.uleb128 0x13
 2036 00fe 00       		.byte	0
 2037 00ff 00       		.byte	0
 2038 0100 0F       		.uleb128 0xf
 2039 0101 34       		.uleb128 0x34
 2040 0102 00       		.byte	0
 2041 0103 03       		.uleb128 0x3
 2042 0104 0E       		.uleb128 0xe
 2043 0105 3A       		.uleb128 0x3a
 2044 0106 0B       		.uleb128 0xb
 2045 0107 3B       		.uleb128 0x3b
 2046 0108 05       		.uleb128 0x5
 2047 0109 49       		.uleb128 0x49
 2048 010a 13       		.uleb128 0x13
 2049 010b 02       		.uleb128 0x2
 2050 010c 18       		.uleb128 0x18
 2051 010d 00       		.byte	0
 2052 010e 00       		.byte	0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 59


 2053 010f 10       		.uleb128 0x10
 2054 0110 2E       		.uleb128 0x2e
 2055 0111 01       		.byte	0x1
 2056 0112 3F       		.uleb128 0x3f
 2057 0113 19       		.uleb128 0x19
 2058 0114 03       		.uleb128 0x3
 2059 0115 0E       		.uleb128 0xe
 2060 0116 3A       		.uleb128 0x3a
 2061 0117 0B       		.uleb128 0xb
 2062 0118 3B       		.uleb128 0x3b
 2063 0119 05       		.uleb128 0x5
 2064 011a 27       		.uleb128 0x27
 2065 011b 19       		.uleb128 0x19
 2066 011c 11       		.uleb128 0x11
 2067 011d 01       		.uleb128 0x1
 2068 011e 12       		.uleb128 0x12
 2069 011f 06       		.uleb128 0x6
 2070 0120 40       		.uleb128 0x40
 2071 0121 18       		.uleb128 0x18
 2072 0122 9642     		.uleb128 0x2116
 2073 0124 19       		.uleb128 0x19
 2074 0125 01       		.uleb128 0x1
 2075 0126 13       		.uleb128 0x13
 2076 0127 00       		.byte	0
 2077 0128 00       		.byte	0
 2078 0129 11       		.uleb128 0x11
 2079 012a 0F       		.uleb128 0xf
 2080 012b 00       		.byte	0
 2081 012c 0B       		.uleb128 0xb
 2082 012d 0B       		.uleb128 0xb
 2083 012e 49       		.uleb128 0x49
 2084 012f 13       		.uleb128 0x13
 2085 0130 00       		.byte	0
 2086 0131 00       		.byte	0
 2087 0132 12       		.uleb128 0x12
 2088 0133 26       		.uleb128 0x26
 2089 0134 00       		.byte	0
 2090 0135 49       		.uleb128 0x49
 2091 0136 13       		.uleb128 0x13
 2092 0137 00       		.byte	0
 2093 0138 00       		.byte	0
 2094 0139 13       		.uleb128 0x13
 2095 013a 34       		.uleb128 0x34
 2096 013b 00       		.byte	0
 2097 013c 03       		.uleb128 0x3
 2098 013d 0E       		.uleb128 0xe
 2099 013e 3A       		.uleb128 0x3a
 2100 013f 0B       		.uleb128 0xb
 2101 0140 3B       		.uleb128 0x3b
 2102 0141 0B       		.uleb128 0xb
 2103 0142 49       		.uleb128 0x49
 2104 0143 13       		.uleb128 0x13
 2105 0144 3F       		.uleb128 0x3f
 2106 0145 19       		.uleb128 0x19
 2107 0146 02       		.uleb128 0x2
 2108 0147 18       		.uleb128 0x18
 2109 0148 00       		.byte	0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 60


 2110 0149 00       		.byte	0
 2111 014a 00       		.byte	0
 2112              		.section	.debug_aranges,"",%progbits
 2113 0000 DC000000 		.4byte	0xdc
 2114 0004 0200     		.2byte	0x2
 2115 0006 00000000 		.4byte	.Ldebug_info0
 2116 000a 04       		.byte	0x4
 2117 000b 00       		.byte	0
 2118 000c 0000     		.2byte	0
 2119 000e 0000     		.2byte	0
 2120 0010 00000000 		.4byte	.LFB0
 2121 0014 50000000 		.4byte	.LFE0-.LFB0
 2122 0018 00000000 		.4byte	.LFB1
 2123 001c 64000000 		.4byte	.LFE1-.LFB1
 2124 0020 00000000 		.4byte	.LFB2
 2125 0024 24000000 		.4byte	.LFE2-.LFB2
 2126 0028 00000000 		.4byte	.LFB3
 2127 002c 50000000 		.4byte	.LFE3-.LFB3
 2128 0030 00000000 		.4byte	.LFB4
 2129 0034 0C000000 		.4byte	.LFE4-.LFB4
 2130 0038 00000000 		.4byte	.LFB5
 2131 003c 18000000 		.4byte	.LFE5-.LFB5
 2132 0040 00000000 		.4byte	.LFB6
 2133 0044 0C000000 		.4byte	.LFE6-.LFB6
 2134 0048 00000000 		.4byte	.LFB7
 2135 004c 18000000 		.4byte	.LFE7-.LFB7
 2136 0050 00000000 		.4byte	.LFB8
 2137 0054 20000000 		.4byte	.LFE8-.LFB8
 2138 0058 00000000 		.4byte	.LFB9
 2139 005c 20000000 		.4byte	.LFE9-.LFB9
 2140 0060 00000000 		.4byte	.LFB10
 2141 0064 1C000000 		.4byte	.LFE10-.LFB10
 2142 0068 00000000 		.4byte	.LFB11
 2143 006c 1C000000 		.4byte	.LFE11-.LFB11
 2144 0070 00000000 		.4byte	.LFB12
 2145 0074 34000000 		.4byte	.LFE12-.LFB12
 2146 0078 00000000 		.4byte	.LFB13
 2147 007c 20000000 		.4byte	.LFE13-.LFB13
 2148 0080 00000000 		.4byte	.LFB14
 2149 0084 1C000000 		.4byte	.LFE14-.LFB14
 2150 0088 00000000 		.4byte	.LFB15
 2151 008c 2C000000 		.4byte	.LFE15-.LFB15
 2152 0090 00000000 		.4byte	.LFB16
 2153 0094 40000000 		.4byte	.LFE16-.LFB16
 2154 0098 00000000 		.4byte	.LFB17
 2155 009c 28000000 		.4byte	.LFE17-.LFB17
 2156 00a0 00000000 		.4byte	.LFB18
 2157 00a4 44000000 		.4byte	.LFE18-.LFB18
 2158 00a8 00000000 		.4byte	.LFB19
 2159 00ac 3A000000 		.4byte	.LFE19-.LFB19
 2160 00b0 00000000 		.4byte	.LFB20
 2161 00b4 60000000 		.4byte	.LFE20-.LFB20
 2162 00b8 00000000 		.4byte	.LFB21
 2163 00bc 18000000 		.4byte	.LFE21-.LFB21
 2164 00c0 00000000 		.4byte	.LFB22
 2165 00c4 18000000 		.4byte	.LFE22-.LFB22
 2166 00c8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 61


 2167 00cc 28000000 		.4byte	.LFE23-.LFB23
 2168 00d0 00000000 		.4byte	.LFB24
 2169 00d4 38000000 		.4byte	.LFE24-.LFB24
 2170 00d8 00000000 		.4byte	0
 2171 00dc 00000000 		.4byte	0
 2172              		.section	.debug_ranges,"",%progbits
 2173              	.Ldebug_ranges0:
 2174 0000 00000000 		.4byte	.LFB0
 2175 0004 50000000 		.4byte	.LFE0
 2176 0008 00000000 		.4byte	.LFB1
 2177 000c 64000000 		.4byte	.LFE1
 2178 0010 00000000 		.4byte	.LFB2
 2179 0014 24000000 		.4byte	.LFE2
 2180 0018 00000000 		.4byte	.LFB3
 2181 001c 50000000 		.4byte	.LFE3
 2182 0020 00000000 		.4byte	.LFB4
 2183 0024 0C000000 		.4byte	.LFE4
 2184 0028 00000000 		.4byte	.LFB5
 2185 002c 18000000 		.4byte	.LFE5
 2186 0030 00000000 		.4byte	.LFB6
 2187 0034 0C000000 		.4byte	.LFE6
 2188 0038 00000000 		.4byte	.LFB7
 2189 003c 18000000 		.4byte	.LFE7
 2190 0040 00000000 		.4byte	.LFB8
 2191 0044 20000000 		.4byte	.LFE8
 2192 0048 00000000 		.4byte	.LFB9
 2193 004c 20000000 		.4byte	.LFE9
 2194 0050 00000000 		.4byte	.LFB10
 2195 0054 1C000000 		.4byte	.LFE10
 2196 0058 00000000 		.4byte	.LFB11
 2197 005c 1C000000 		.4byte	.LFE11
 2198 0060 00000000 		.4byte	.LFB12
 2199 0064 34000000 		.4byte	.LFE12
 2200 0068 00000000 		.4byte	.LFB13
 2201 006c 20000000 		.4byte	.LFE13
 2202 0070 00000000 		.4byte	.LFB14
 2203 0074 1C000000 		.4byte	.LFE14
 2204 0078 00000000 		.4byte	.LFB15
 2205 007c 2C000000 		.4byte	.LFE15
 2206 0080 00000000 		.4byte	.LFB16
 2207 0084 40000000 		.4byte	.LFE16
 2208 0088 00000000 		.4byte	.LFB17
 2209 008c 28000000 		.4byte	.LFE17
 2210 0090 00000000 		.4byte	.LFB18
 2211 0094 44000000 		.4byte	.LFE18
 2212 0098 00000000 		.4byte	.LFB19
 2213 009c 3A000000 		.4byte	.LFE19
 2214 00a0 00000000 		.4byte	.LFB20
 2215 00a4 60000000 		.4byte	.LFE20
 2216 00a8 00000000 		.4byte	.LFB21
 2217 00ac 18000000 		.4byte	.LFE21
 2218 00b0 00000000 		.4byte	.LFB22
 2219 00b4 18000000 		.4byte	.LFE22
 2220 00b8 00000000 		.4byte	.LFB23
 2221 00bc 28000000 		.4byte	.LFE23
 2222 00c0 00000000 		.4byte	.LFB24
 2223 00c4 38000000 		.4byte	.LFE24
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 62


 2224 00c8 00000000 		.4byte	0
 2225 00cc 00000000 		.4byte	0
 2226              		.section	.debug_line,"",%progbits
 2227              	.Ldebug_line0:
 2228 0000 76020000 		.section	.debug_str,"MS",%progbits,1
 2228      02004500 
 2228      00000201 
 2228      FB0E0D00 
 2228      01010101 
 2229              	.LASF6:
 2230 0000 6C6F6E67 		.ascii	"long long int\000"
 2230      206C6F6E 
 2230      6720696E 
 2230      7400
 2231              	.LASF48:
 2232 000e 5250695F 		.ascii	"RPi_SPIS_ClearFIFO\000"
 2232      53504953 
 2232      5F436C65 
 2232      61724649 
 2232      464F00
 2233              	.LASF39:
 2234 0021 5250695F 		.ascii	"RPi_SPIS_GetRxBufferSize\000"
 2234      53504953 
 2234      5F476574 
 2234      52784275 
 2234      66666572 
 2235              	.LASF15:
 2236 003a 72656733 		.ascii	"reg32\000"
 2236      3200
 2237              	.LASF56:
 2238 0040 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2238      43313120 
 2238      352E342E 
 2238      31203230 
 2238      31363036 
 2239 0073 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2239      20726576 
 2239      6973696F 
 2239      6E203233 
 2239      37373135 
 2240 00a6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2240      66756E63 
 2240      74696F6E 
 2240      2D736563 
 2240      74696F6E 
 2241              	.LASF54:
 2242 00ce 5250695F 		.ascii	"RPi_SPIS_swStatusTx\000"
 2242      53504953 
 2242      5F737753 
 2242      74617475 
 2242      73547800 
 2243              	.LASF37:
 2244 00e2 5250695F 		.ascii	"RPi_SPIS_ReadRxData\000"
 2244      53504953 
 2244      5F526561 
 2244      64527844 
 2244      61746100 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 63


 2245              	.LASF43:
 2246 00f6 5250695F 		.ascii	"RPi_SPIS_ClearTxBuffer\000"
 2246      53504953 
 2246      5F436C65 
 2246      61725478 
 2246      42756666 
 2247              	.LASF34:
 2248 010d 74784461 		.ascii	"txData\000"
 2248      746100
 2249              	.LASF3:
 2250 0114 73686F72 		.ascii	"short unsigned int\000"
 2250      7420756E 
 2250      7369676E 
 2250      65642069 
 2250      6E7400
 2251              	.LASF13:
 2252 0127 63686172 		.ascii	"char\000"
 2252      00
 2253              	.LASF2:
 2254 012c 73686F72 		.ascii	"short int\000"
 2254      7420696E 
 2254      7400
 2255              	.LASF25:
 2256 0136 5250695F 		.ascii	"RPi_SPIS_DisableTxInt\000"
 2256      53504953 
 2256      5F446973 
 2256      61626C65 
 2256      5478496E 
 2257              	.LASF38:
 2258 014c 72784461 		.ascii	"rxData\000"
 2258      746100
 2259              	.LASF32:
 2260 0153 5250695F 		.ascii	"RPi_SPIS_ReadRxStatus\000"
 2260      53504953 
 2260      5F526561 
 2260      64527853 
 2260      74617475 
 2261              	.LASF11:
 2262 0169 666C6F61 		.ascii	"float\000"
 2262      7400
 2263              	.LASF57:
 2264 016f 47656E65 		.ascii	"Generated_Source\\PSoC5\\RPi_SPIS.c\000"
 2264      72617465 
 2264      645F536F 
 2264      75726365 
 2264      5C50536F 
 2265              	.LASF41:
 2266 0191 5250695F 		.ascii	"RPi_SPIS_GetTxBufferSize\000"
 2266      53504953 
 2266      5F476574 
 2266      54784275 
 2266      66666572 
 2267              	.LASF40:
 2268 01aa 73697A65 		.ascii	"size\000"
 2268      00
 2269              	.LASF21:
 2270 01af 5250695F 		.ascii	"RPi_SPIS_Stop\000"
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 64


 2270      53504953 
 2270      5F53746F 
 2270      7000
 2271              	.LASF24:
 2272 01bd 5250695F 		.ascii	"RPi_SPIS_EnableRxInt\000"
 2272      53504953 
 2272      5F456E61 
 2272      626C6552 
 2272      78496E74 
 2273              	.LASF14:
 2274 01d2 72656738 		.ascii	"reg8\000"
 2274      00
 2275              	.LASF53:
 2276 01d7 5250695F 		.ascii	"RPi_SPIS_initVar\000"
 2276      53504953 
 2276      5F696E69 
 2276      74566172 
 2276      00
 2277              	.LASF5:
 2278 01e8 6C6F6E67 		.ascii	"long unsigned int\000"
 2278      20756E73 
 2278      69676E65 
 2278      6420696E 
 2278      7400
 2279              	.LASF9:
 2280 01fa 75696E74 		.ascii	"uint8\000"
 2280      3800
 2281              	.LASF20:
 2282 0200 5250695F 		.ascii	"RPi_SPIS_Enable\000"
 2282      53504953 
 2282      5F456E61 
 2282      626C6500 
 2283              	.LASF46:
 2284 0210 62797465 		.ascii	"byteCount\000"
 2284      436F756E 
 2284      7400
 2285              	.LASF22:
 2286 021a 656E6162 		.ascii	"enableInterrupts\000"
 2286      6C65496E 
 2286      74657272 
 2286      75707473 
 2286      00
 2287              	.LASF1:
 2288 022b 756E7369 		.ascii	"unsigned char\000"
 2288      676E6564 
 2288      20636861 
 2288      7200
 2289              	.LASF42:
 2290 0239 5250695F 		.ascii	"RPi_SPIS_ClearRxBuffer\000"
 2290      53504953 
 2290      5F436C65 
 2290      61725278 
 2290      42756666 
 2291              	.LASF12:
 2292 0250 646F7562 		.ascii	"double\000"
 2292      6C6500
 2293              	.LASF29:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 65


 2294 0257 696E7453 		.ascii	"intSrc\000"
 2294      726300
 2295              	.LASF33:
 2296 025e 5250695F 		.ascii	"RPi_SPIS_WriteTxData\000"
 2296      53504953 
 2296      5F577269 
 2296      74655478 
 2296      44617461 
 2297              	.LASF10:
 2298 0273 75696E74 		.ascii	"uint32\000"
 2298      333200
 2299              	.LASF8:
 2300 027a 756E7369 		.ascii	"unsigned int\000"
 2300      676E6564 
 2300      20696E74 
 2300      00
 2301              	.LASF44:
 2302 0287 5250695F 		.ascii	"RPi_SPIS_PutArray\000"
 2302      53504953 
 2302      5F507574 
 2302      41727261 
 2302      7900
 2303              	.LASF7:
 2304 0299 6C6F6E67 		.ascii	"long long unsigned int\000"
 2304      206C6F6E 
 2304      6720756E 
 2304      7369676E 
 2304      65642069 
 2305              	.LASF19:
 2306 02b0 5250695F 		.ascii	"RPi_SPIS_Start\000"
 2306      53504953 
 2306      5F537461 
 2306      727400
 2307              	.LASF47:
 2308 02bf 62756649 		.ascii	"bufIndex\000"
 2308      6E646578 
 2308      00
 2309              	.LASF17:
 2310 02c8 73697A65 		.ascii	"sizetype\000"
 2310      74797065 
 2310      00
 2311              	.LASF26:
 2312 02d1 5250695F 		.ascii	"RPi_SPIS_DisableRxInt\000"
 2312      53504953 
 2312      5F446973 
 2312      61626C65 
 2312      5278496E 
 2313              	.LASF36:
 2314 02e7 74784461 		.ascii	"txDataByte\000"
 2314      74614279 
 2314      746500
 2315              	.LASF50:
 2316 02f2 5250695F 		.ascii	"RPi_SPIS_DisableInt\000"
 2316      53504953 
 2316      5F446973 
 2316      61626C65 
 2316      496E7400 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 66


 2317              	.LASF52:
 2318 0306 5250695F 		.ascii	"RPi_SPIS_ReadStatus\000"
 2318      53504953 
 2318      5F526561 
 2318      64537461 
 2318      74757300 
 2319              	.LASF51:
 2320 031a 5250695F 		.ascii	"RPi_SPIS_SetInterruptMode\000"
 2320      53504953 
 2320      5F536574 
 2320      496E7465 
 2320      72727570 
 2321              	.LASF55:
 2322 0334 5250695F 		.ascii	"RPi_SPIS_swStatusRx\000"
 2322      53504953 
 2322      5F737753 
 2322      74617475 
 2322      73527800 
 2323              	.LASF31:
 2324 0348 5250695F 		.ascii	"RPi_SPIS_ReadTxStatus\000"
 2324      53504953 
 2324      5F526561 
 2324      64547853 
 2324      74617475 
 2325              	.LASF49:
 2326 035e 5250695F 		.ascii	"RPi_SPIS_EnableInt\000"
 2326      53504953 
 2326      5F456E61 
 2326      626C6549 
 2326      6E7400
 2327              	.LASF23:
 2328 0371 5250695F 		.ascii	"RPi_SPIS_EnableTxInt\000"
 2328      53504953 
 2328      5F456E61 
 2328      626C6554 
 2328      78496E74 
 2329              	.LASF45:
 2330 0386 62756666 		.ascii	"buffer\000"
 2330      657200
 2331              	.LASF58:
 2332 038d 443A5C44 		.ascii	"D:\\Documents\\DPEA_Projects\\RpiMIB\\Start1.cydsn\000"
 2332      6F63756D 
 2332      656E7473 
 2332      5C445045 
 2332      415F5072 
 2333              	.LASF4:
 2334 03bc 6C6F6E67 		.ascii	"long int\000"
 2334      20696E74 
 2334      00
 2335              	.LASF30:
 2336 03c5 746D7053 		.ascii	"tmpStatus\000"
 2336      74617475 
 2336      7300
 2337              	.LASF16:
 2338 03cf 6C6F6E67 		.ascii	"long double\000"
 2338      20646F75 
 2338      626C6500 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccSUHzHD.s 			page 67


 2339              	.LASF0:
 2340 03db 7369676E 		.ascii	"signed char\000"
 2340      65642063 
 2340      68617200 
 2341              	.LASF35:
 2342 03e7 5250695F 		.ascii	"RPi_SPIS_WriteTxDataZero\000"
 2342      53504953 
 2342      5F577269 
 2342      74655478 
 2342      44617461 
 2343              	.LASF27:
 2344 0400 5250695F 		.ascii	"RPi_SPIS_SetTxInterruptMode\000"
 2344      53504953 
 2344      5F536574 
 2344      5478496E 
 2344      74657272 
 2345              	.LASF28:
 2346 041c 5250695F 		.ascii	"RPi_SPIS_SetRxInterruptMode\000"
 2346      53504953 
 2346      5F536574 
 2346      5278496E 
 2346      74657272 
 2347              	.LASF18:
 2348 0438 5250695F 		.ascii	"RPi_SPIS_Init\000"
 2348      53504953 
 2348      5F496E69 
 2348      7400
 2349              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
