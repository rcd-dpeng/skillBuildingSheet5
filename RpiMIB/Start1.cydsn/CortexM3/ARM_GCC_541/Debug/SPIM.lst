ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SPIM_initVar
  20              		.bss
  21              		.type	SPIM_initVar, %object
  22              		.size	SPIM_initVar, 1
  23              	SPIM_initVar:
  24 0000 00       		.space	1
  25              		.comm	SPIM_swStatusTx,1,1
  26              		.comm	SPIM_swStatusRx,1,1
  27              		.section	.text.SPIM_Init,"ax",%progbits
  28              		.align	2
  29              		.global	SPIM_Init
  30              		.thumb
  31              		.thumb_func
  32              		.type	SPIM_Init, %function
  33              	SPIM_Init:
  34              	.LFB0:
  35              		.file 1 "Generated_Source\\PSoC5\\SPIM.c"
   1:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC5/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPIM.c **** *
   5:Generated_Source\PSoC5/SPIM.c **** * Description:
   6:Generated_Source\PSoC5/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPIM.c **** *
   8:Generated_Source\PSoC5/SPIM.c **** * Note:
   9:Generated_Source\PSoC5/SPIM.c **** *  None.
  10:Generated_Source\PSoC5/SPIM.c **** *
  11:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPIM.c **** 
  18:Generated_Source\PSoC5/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC5/SPIM.c **** 
  20:Generated_Source\PSoC5/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 2


  23:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPIM.c **** 
  27:Generated_Source\PSoC5/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPIM.c **** 
  34:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC5/SPIM.c **** 
  36:Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC5/SPIM.c **** 
  39:Generated_Source\PSoC5/SPIM.c **** 
  40:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPIM.c **** *
  44:Generated_Source\PSoC5/SPIM.c **** * Summary:
  45:Generated_Source\PSoC5/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPIM.c **** *
  47:Generated_Source\PSoC5/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC5/SPIM.c **** *  None.
  49:Generated_Source\PSoC5/SPIM.c **** *
  50:Generated_Source\PSoC5/SPIM.c **** * Return:
  51:Generated_Source\PSoC5/SPIM.c **** *  None.
  52:Generated_Source\PSoC5/SPIM.c **** *
  53:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPIM.c **** *
  59:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPIM.c **** *  No.
  61:Generated_Source\PSoC5/SPIM.c **** *
  62:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC5/SPIM.c **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC5/SPIM.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  46              		.loc 1 66 0
  47 0004 084B     		ldr	r3, .L2
  48 0006 0F22     		movs	r2, #15
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 3


  49 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC5/SPIM.c **** 
  68:Generated_Source\PSoC5/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPIM.c **** 
  75:Generated_Source\PSoC5/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPIM.c **** 
  82:Generated_Source\PSoC5/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPIM.c ****     SPIM_ClearFIFO();
  50              		.loc 1 83 0
  51 000a FFF7FEFF 		bl	SPIM_ClearFIFO
  84:Generated_Source\PSoC5/SPIM.c **** 
  85:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  88:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPIM.c **** 
  91:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPIM.c **** 
  97:Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  52              		.loc 1 97 0
  53 000e FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  54              		.loc 1 98 0
  55 0012 FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:Generated_Source\PSoC5/SPIM.c **** 
 100:Generated_Source\PSoC5/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 101 0
  57 0016 054B     		ldr	r3, .L2+4
  58 0018 0422     		movs	r2, #4
  59 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
  60              		.loc 1 102 0
  61 001c 044B     		ldr	r3, .L2+8
  62 001e 2022     		movs	r2, #32
  63 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC5/SPIM.c **** }
  64              		.loc 1 103 0
  65 0022 00BF     		nop
  66 0024 80BD     		pop	{r7, pc}
  67              	.L3:
  68 0026 00BF     		.align	2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 4


  69              	.L2:
  70 0028 82640040 		.word	1073767554
  71 002c 85640040 		.word	1073767557
  72 0030 86640040 		.word	1073767558
  73              		.cfi_endproc
  74              	.LFE0:
  75              		.size	SPIM_Init, .-SPIM_Init
  76              		.section	.text.SPIM_Enable,"ax",%progbits
  77              		.align	2
  78              		.global	SPIM_Enable
  79              		.thumb
  80              		.thumb_func
  81              		.type	SPIM_Enable, %function
  82              	SPIM_Enable:
  83              	.LFB1:
 104:Generated_Source\PSoC5/SPIM.c **** 
 105:Generated_Source\PSoC5/SPIM.c **** 
 106:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPIM.c **** *
 110:Generated_Source\PSoC5/SPIM.c **** * Summary:
 111:Generated_Source\PSoC5/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPIM.c **** *
 113:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC5/SPIM.c **** *  None.
 115:Generated_Source\PSoC5/SPIM.c **** *
 116:Generated_Source\PSoC5/SPIM.c **** * Return:
 117:Generated_Source\PSoC5/SPIM.c **** *  None.
 118:Generated_Source\PSoC5/SPIM.c **** *
 119:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC5/SPIM.c **** {
  84              		.loc 1 121 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 82B0     		sub	sp, sp, #8
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPIM.c **** 
 124:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  96              		.loc 1 124 0
  97 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  98 000a 0346     		mov	r3, r0
  99 000c FB71     		strb	r3, [r7, #7]
 125:Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
 100              		.loc 1 125 0
 101 000e 124A     		ldr	r2, .L5
 102 0010 114B     		ldr	r3, .L5
 103 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 5


 104 0014 DBB2     		uxtb	r3, r3
 105 0016 43F02003 		orr	r3, r3, #32
 106 001a DBB2     		uxtb	r3, r3
 107 001c 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 108              		.loc 1 126 0
 109 001e 0F4A     		ldr	r2, .L5+4
 110 0020 0E4B     		ldr	r3, .L5+4
 111 0022 1B78     		ldrb	r3, [r3]
 112 0024 DBB2     		uxtb	r3, r3
 113 0026 43F01003 		orr	r3, r3, #16
 114 002a DBB2     		uxtb	r3, r3
 115 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 116              		.loc 1 127 0
 117 002e 0C4A     		ldr	r2, .L5+8
 118 0030 0B4B     		ldr	r3, .L5+8
 119 0032 1B78     		ldrb	r3, [r3]
 120 0034 DBB2     		uxtb	r3, r3
 121 0036 43F01003 		orr	r3, r3, #16
 122 003a DBB2     		uxtb	r3, r3
 123 003c 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 124              		.loc 1 128 0
 125 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 126 0040 1846     		mov	r0, r3
 127 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC5/SPIM.c **** 
 130:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Enable();
 132:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPIM.c **** 
 134:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 128              		.loc 1 134 0
 129 0046 FFF7FEFF 		bl	SPIM_EnableTxInt
 135:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 130              		.loc 1 135 0
 131 004a FFF7FEFF 		bl	SPIM_EnableRxInt
 136:Generated_Source\PSoC5/SPIM.c **** }
 132              		.loc 1 136 0
 133 004e 00BF     		nop
 134 0050 0837     		adds	r7, r7, #8
 135              		.cfi_def_cfa_offset 8
 136 0052 BD46     		mov	sp, r7
 137              		.cfi_def_cfa_register 13
 138              		@ sp needed
 139 0054 80BD     		pop	{r7, pc}
 140              	.L6:
 141 0056 00BF     		.align	2
 142              	.L5:
 143 0058 92640040 		.word	1073767570
 144 005c 95640040 		.word	1073767573
 145 0060 96640040 		.word	1073767574
 146              		.cfi_endproc
 147              	.LFE1:
 148              		.size	SPIM_Enable, .-SPIM_Enable
 149              		.section	.text.SPIM_Start,"ax",%progbits
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 6


 150              		.align	2
 151              		.global	SPIM_Start
 152              		.thumb
 153              		.thumb_func
 154              		.type	SPIM_Start, %function
 155              	SPIM_Start:
 156              	.LFB2:
 137:Generated_Source\PSoC5/SPIM.c **** 
 138:Generated_Source\PSoC5/SPIM.c **** 
 139:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPIM.c **** *
 143:Generated_Source\PSoC5/SPIM.c **** * Summary:
 144:Generated_Source\PSoC5/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPIM.c **** *
 146:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC5/SPIM.c **** *  None.
 148:Generated_Source\PSoC5/SPIM.c **** *
 149:Generated_Source\PSoC5/SPIM.c **** * Return:
 150:Generated_Source\PSoC5/SPIM.c **** *  None.
 151:Generated_Source\PSoC5/SPIM.c **** *
 152:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC5/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC5/SPIM.c **** *
 156:Generated_Source\PSoC5/SPIM.c **** * Theory:
 157:Generated_Source\PSoC5/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPIM.c **** *
 159:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPIM.c **** *  No.
 161:Generated_Source\PSoC5/SPIM.c **** *
 162:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC5/SPIM.c **** {
 157              		.loc 1 164 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/SPIM.c ****     if(0u == SPIM_initVar)
 167              		.loc 1 165 0
 168 0004 064B     		ldr	r3, .L9
 169 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 0008 002B     		cmp	r3, #0
 171 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC5/SPIM.c ****     {
 167:Generated_Source\PSoC5/SPIM.c ****         SPIM_Init();
 172              		.loc 1 167 0
 173 000c FFF7FEFF 		bl	SPIM_Init
 168:Generated_Source\PSoC5/SPIM.c ****         SPIM_initVar = 1u;
 174              		.loc 1 168 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 7


 175 0010 034B     		ldr	r3, .L9
 176 0012 0122     		movs	r2, #1
 177 0014 1A70     		strb	r2, [r3]
 178              	.L8:
 169:Generated_Source\PSoC5/SPIM.c ****     }
 170:Generated_Source\PSoC5/SPIM.c **** 
 171:Generated_Source\PSoC5/SPIM.c ****     SPIM_Enable();
 179              		.loc 1 171 0
 180 0016 FFF7FEFF 		bl	SPIM_Enable
 172:Generated_Source\PSoC5/SPIM.c **** }
 181              		.loc 1 172 0
 182 001a 00BF     		nop
 183 001c 80BD     		pop	{r7, pc}
 184              	.L10:
 185 001e 00BF     		.align	2
 186              	.L9:
 187 0020 00000000 		.word	SPIM_initVar
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	SPIM_Start, .-SPIM_Start
 191              		.section	.text.SPIM_Stop,"ax",%progbits
 192              		.align	2
 193              		.global	SPIM_Stop
 194              		.thumb
 195              		.thumb_func
 196              		.type	SPIM_Stop, %function
 197              	SPIM_Stop:
 198              	.LFB3:
 173:Generated_Source\PSoC5/SPIM.c **** 
 174:Generated_Source\PSoC5/SPIM.c **** 
 175:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPIM.c **** *
 179:Generated_Source\PSoC5/SPIM.c **** * Summary:
 180:Generated_Source\PSoC5/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPIM.c **** *
 182:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC5/SPIM.c **** *  None.
 184:Generated_Source\PSoC5/SPIM.c **** *
 185:Generated_Source\PSoC5/SPIM.c **** * Return:
 186:Generated_Source\PSoC5/SPIM.c **** *  None.
 187:Generated_Source\PSoC5/SPIM.c **** *
 188:Generated_Source\PSoC5/SPIM.c **** * Theory:
 189:Generated_Source\PSoC5/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPIM.c **** *
 191:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC5/SPIM.c **** {
 199              		.loc 1 193 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 8


 207 0002 82B0     		sub	sp, sp, #8
 208              		.cfi_def_cfa_offset 16
 209 0004 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPIM.c **** 
 196:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 211              		.loc 1 196 0
 212 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 213 000a 0346     		mov	r3, r0
 214 000c FB71     		strb	r3, [r7, #7]
 197:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 215              		.loc 1 197 0
 216 000e 0E4A     		ldr	r2, .L12
 217 0010 0D4B     		ldr	r3, .L12
 218 0012 1B78     		ldrb	r3, [r3]
 219 0014 DBB2     		uxtb	r3, r3
 220 0016 23F01003 		bic	r3, r3, #16
 221 001a DBB2     		uxtb	r3, r3
 222 001c 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 223              		.loc 1 198 0
 224 001e 0B4A     		ldr	r2, .L12+4
 225 0020 0A4B     		ldr	r3, .L12+4
 226 0022 1B78     		ldrb	r3, [r3]
 227 0024 DBB2     		uxtb	r3, r3
 228 0026 23F01003 		bic	r3, r3, #16
 229 002a DBB2     		uxtb	r3, r3
 230 002c 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 231              		.loc 1 199 0
 232 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 0030 1846     		mov	r0, r3
 234 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC5/SPIM.c **** 
 201:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Disable();
 203:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPIM.c **** 
 205:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 235              		.loc 1 205 0
 236 0036 FFF7FEFF 		bl	SPIM_DisableTxInt
 206:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 237              		.loc 1 206 0
 238 003a FFF7FEFF 		bl	SPIM_DisableRxInt
 207:Generated_Source\PSoC5/SPIM.c **** }
 239              		.loc 1 207 0
 240 003e 00BF     		nop
 241 0040 0837     		adds	r7, r7, #8
 242              		.cfi_def_cfa_offset 8
 243 0042 BD46     		mov	sp, r7
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0044 80BD     		pop	{r7, pc}
 247              	.L13:
 248 0046 00BF     		.align	2
 249              	.L12:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 9


 250 0048 95640040 		.word	1073767573
 251 004c 96640040 		.word	1073767574
 252              		.cfi_endproc
 253              	.LFE3:
 254              		.size	SPIM_Stop, .-SPIM_Stop
 255              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 256              		.align	2
 257              		.global	SPIM_EnableTxInt
 258              		.thumb
 259              		.thumb_func
 260              		.type	SPIM_EnableTxInt, %function
 261              	SPIM_EnableTxInt:
 262              	.LFB4:
 208:Generated_Source\PSoC5/SPIM.c **** 
 209:Generated_Source\PSoC5/SPIM.c **** 
 210:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPIM.c **** *
 214:Generated_Source\PSoC5/SPIM.c **** * Summary:
 215:Generated_Source\PSoC5/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPIM.c **** *
 217:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC5/SPIM.c **** *  None.
 219:Generated_Source\PSoC5/SPIM.c **** *
 220:Generated_Source\PSoC5/SPIM.c **** * Return:
 221:Generated_Source\PSoC5/SPIM.c **** *  None.
 222:Generated_Source\PSoC5/SPIM.c **** *
 223:Generated_Source\PSoC5/SPIM.c **** * Theory:
 224:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPIM.c **** *
 226:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPIM.c **** {
 263              		.loc 1 228 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 231:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPIM.c **** }
 273              		.loc 1 232 0
 274 0004 00BF     		nop
 275 0006 BD46     		mov	sp, r7
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 0008 80BC     		pop	{r7}
 279              		.cfi_restore 7
 280              		.cfi_def_cfa_offset 0
 281 000a 7047     		bx	lr
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 10


 282              		.cfi_endproc
 283              	.LFE4:
 284              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 285              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 286              		.align	2
 287              		.global	SPIM_EnableRxInt
 288              		.thumb
 289              		.thumb_func
 290              		.type	SPIM_EnableRxInt, %function
 291              	SPIM_EnableRxInt:
 292              	.LFB5:
 233:Generated_Source\PSoC5/SPIM.c **** 
 234:Generated_Source\PSoC5/SPIM.c **** 
 235:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPIM.c **** *
 239:Generated_Source\PSoC5/SPIM.c **** * Summary:
 240:Generated_Source\PSoC5/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPIM.c **** *
 242:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC5/SPIM.c **** *  None.
 244:Generated_Source\PSoC5/SPIM.c **** *
 245:Generated_Source\PSoC5/SPIM.c **** * Return:
 246:Generated_Source\PSoC5/SPIM.c **** *  None.
 247:Generated_Source\PSoC5/SPIM.c **** *
 248:Generated_Source\PSoC5/SPIM.c **** * Theory:
 249:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPIM.c **** *
 251:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPIM.c **** {
 293              		.loc 1 253 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298 0000 80B4     		push	{r7}
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 7, -4
 301 0002 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPIM.c **** }
 303              		.loc 1 257 0
 304 0004 00BF     		nop
 305 0006 BD46     		mov	sp, r7
 306              		.cfi_def_cfa_register 13
 307              		@ sp needed
 308 0008 80BC     		pop	{r7}
 309              		.cfi_restore 7
 310              		.cfi_def_cfa_offset 0
 311 000a 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE5:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 11


 314              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 315              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 316              		.align	2
 317              		.global	SPIM_DisableTxInt
 318              		.thumb
 319              		.thumb_func
 320              		.type	SPIM_DisableTxInt, %function
 321              	SPIM_DisableTxInt:
 322              	.LFB6:
 258:Generated_Source\PSoC5/SPIM.c **** 
 259:Generated_Source\PSoC5/SPIM.c **** 
 260:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPIM.c **** *
 264:Generated_Source\PSoC5/SPIM.c **** * Summary:
 265:Generated_Source\PSoC5/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPIM.c **** *
 267:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC5/SPIM.c **** *  None.
 269:Generated_Source\PSoC5/SPIM.c **** *
 270:Generated_Source\PSoC5/SPIM.c **** * Return:
 271:Generated_Source\PSoC5/SPIM.c **** *  None.
 272:Generated_Source\PSoC5/SPIM.c **** *
 273:Generated_Source\PSoC5/SPIM.c **** * Theory:
 274:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPIM.c **** *
 276:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPIM.c **** {
 323              		.loc 1 278 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 281:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPIM.c **** }
 333              		.loc 1 282 0
 334 0004 00BF     		nop
 335 0006 BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 0008 80BC     		pop	{r7}
 339              		.cfi_restore 7
 340              		.cfi_def_cfa_offset 0
 341 000a 7047     		bx	lr
 342              		.cfi_endproc
 343              	.LFE6:
 344              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 345              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 12


 346              		.align	2
 347              		.global	SPIM_DisableRxInt
 348              		.thumb
 349              		.thumb_func
 350              		.type	SPIM_DisableRxInt, %function
 351              	SPIM_DisableRxInt:
 352              	.LFB7:
 283:Generated_Source\PSoC5/SPIM.c **** 
 284:Generated_Source\PSoC5/SPIM.c **** 
 285:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPIM.c **** *
 289:Generated_Source\PSoC5/SPIM.c **** * Summary:
 290:Generated_Source\PSoC5/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPIM.c **** *
 292:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC5/SPIM.c **** *  None.
 294:Generated_Source\PSoC5/SPIM.c **** *
 295:Generated_Source\PSoC5/SPIM.c **** * Return:
 296:Generated_Source\PSoC5/SPIM.c **** *  None.
 297:Generated_Source\PSoC5/SPIM.c **** *
 298:Generated_Source\PSoC5/SPIM.c **** * Theory:
 299:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPIM.c **** *
 301:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPIM.c **** {
 353              		.loc 1 303 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358 0000 80B4     		push	{r7}
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPIM.c **** }
 363              		.loc 1 307 0
 364 0004 00BF     		nop
 365 0006 BD46     		mov	sp, r7
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 0008 80BC     		pop	{r7}
 369              		.cfi_restore 7
 370              		.cfi_def_cfa_offset 0
 371 000a 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE7:
 374              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 375              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 376              		.align	2
 377              		.global	SPIM_SetTxInterruptMode
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 13


 378              		.thumb
 379              		.thumb_func
 380              		.type	SPIM_SetTxInterruptMode, %function
 381              	SPIM_SetTxInterruptMode:
 382              	.LFB8:
 308:Generated_Source\PSoC5/SPIM.c **** 
 309:Generated_Source\PSoC5/SPIM.c **** 
 310:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPIM.c **** *
 314:Generated_Source\PSoC5/SPIM.c **** * Summary:
 315:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPIM.c **** *
 317:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPIM.c **** *  header file).
 320:Generated_Source\PSoC5/SPIM.c **** *
 321:Generated_Source\PSoC5/SPIM.c **** * Return:
 322:Generated_Source\PSoC5/SPIM.c **** *  None.
 323:Generated_Source\PSoC5/SPIM.c **** *
 324:Generated_Source\PSoC5/SPIM.c **** * Theory:
 325:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPIM.c **** *
 327:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPIM.c **** {
 383              		.loc 1 329 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 83B0     		sub	sp, sp, #12
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 0346     		mov	r3, r0
 396 0008 FB71     		strb	r3, [r7, #7]
 330:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 397              		.loc 1 330 0
 398 000a 044A     		ldr	r2, .L19
 399 000c FB79     		ldrb	r3, [r7, #7]
 400 000e 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC5/SPIM.c **** }
 401              		.loc 1 331 0
 402 0010 00BF     		nop
 403 0012 0C37     		adds	r7, r7, #12
 404              		.cfi_def_cfa_offset 4
 405 0014 BD46     		mov	sp, r7
 406              		.cfi_def_cfa_register 13
 407              		@ sp needed
 408 0016 80BC     		pop	{r7}
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 14


 411 0018 7047     		bx	lr
 412              	.L20:
 413 001a 00BF     		.align	2
 414              	.L19:
 415 001c 85640040 		.word	1073767557
 416              		.cfi_endproc
 417              	.LFE8:
 418              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 419              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 420              		.align	2
 421              		.global	SPIM_SetRxInterruptMode
 422              		.thumb
 423              		.thumb_func
 424              		.type	SPIM_SetRxInterruptMode, %function
 425              	SPIM_SetRxInterruptMode:
 426              	.LFB9:
 332:Generated_Source\PSoC5/SPIM.c **** 
 333:Generated_Source\PSoC5/SPIM.c **** 
 334:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPIM.c **** *
 338:Generated_Source\PSoC5/SPIM.c **** * Summary:
 339:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPIM.c **** *
 341:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPIM.c **** *  header file).
 344:Generated_Source\PSoC5/SPIM.c **** *
 345:Generated_Source\PSoC5/SPIM.c **** * Return:
 346:Generated_Source\PSoC5/SPIM.c **** *  None.
 347:Generated_Source\PSoC5/SPIM.c **** *
 348:Generated_Source\PSoC5/SPIM.c **** * Theory:
 349:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPIM.c **** *
 351:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPIM.c **** {
 427              		.loc 1 353 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 8
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432 0000 80B4     		push	{r7}
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 7, -4
 435 0002 83B0     		sub	sp, sp, #12
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 439 0006 0346     		mov	r3, r0
 440 0008 FB71     		strb	r3, [r7, #7]
 354:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 441              		.loc 1 354 0
 442 000a 044A     		ldr	r2, .L22
 443 000c FB79     		ldrb	r3, [r7, #7]
 444 000e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 15


 355:Generated_Source\PSoC5/SPIM.c **** }
 445              		.loc 1 355 0
 446 0010 00BF     		nop
 447 0012 0C37     		adds	r7, r7, #12
 448              		.cfi_def_cfa_offset 4
 449 0014 BD46     		mov	sp, r7
 450              		.cfi_def_cfa_register 13
 451              		@ sp needed
 452 0016 80BC     		pop	{r7}
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 0018 7047     		bx	lr
 456              	.L23:
 457 001a 00BF     		.align	2
 458              	.L22:
 459 001c 86640040 		.word	1073767558
 460              		.cfi_endproc
 461              	.LFE9:
 462              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 463              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 464              		.align	2
 465              		.global	SPIM_ReadTxStatus
 466              		.thumb
 467              		.thumb_func
 468              		.type	SPIM_ReadTxStatus, %function
 469              	SPIM_ReadTxStatus:
 470              	.LFB10:
 356:Generated_Source\PSoC5/SPIM.c **** 
 357:Generated_Source\PSoC5/SPIM.c **** 
 358:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPIM.c **** *
 362:Generated_Source\PSoC5/SPIM.c **** * Summary:
 363:Generated_Source\PSoC5/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPIM.c **** *
 365:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 366:Generated_Source\PSoC5/SPIM.c **** *  None.
 367:Generated_Source\PSoC5/SPIM.c **** *
 368:Generated_Source\PSoC5/SPIM.c **** * Return:
 369:Generated_Source\PSoC5/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPIM.c **** *
 371:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 372:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPIM.c **** *
 375:Generated_Source\PSoC5/SPIM.c **** * Theory:
 376:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPIM.c **** *
 379:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPIM.c **** *
 382:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPIM.c **** *  No.
 384:Generated_Source\PSoC5/SPIM.c **** *
 385:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 16


 386:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPIM.c **** {
 471              		.loc 1 387 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 8
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476 0000 80B4     		push	{r7}
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 83B0     		sub	sp, sp, #12
 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPIM.c **** 
 390:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 393:Generated_Source\PSoC5/SPIM.c **** 
 394:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:Generated_Source\PSoC5/SPIM.c **** 
 397:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 398:Generated_Source\PSoC5/SPIM.c **** 
 399:Generated_Source\PSoC5/SPIM.c ****     #else
 400:Generated_Source\PSoC5/SPIM.c **** 
 401:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 483              		.loc 1 401 0
 484 0006 044B     		ldr	r3, .L26
 485 0008 1B78     		ldrb	r3, [r3]
 486 000a FB71     		strb	r3, [r7, #7]
 402:Generated_Source\PSoC5/SPIM.c **** 
 403:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPIM.c **** 
 405:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 487              		.loc 1 405 0
 488 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:Generated_Source\PSoC5/SPIM.c **** }
 489              		.loc 1 406 0
 490 000e 1846     		mov	r0, r3
 491 0010 0C37     		adds	r7, r7, #12
 492              		.cfi_def_cfa_offset 4
 493 0012 BD46     		mov	sp, r7
 494              		.cfi_def_cfa_register 13
 495              		@ sp needed
 496 0014 80BC     		pop	{r7}
 497              		.cfi_restore 7
 498              		.cfi_def_cfa_offset 0
 499 0016 7047     		bx	lr
 500              	.L27:
 501              		.align	2
 502              	.L26:
 503 0018 65640040 		.word	1073767525
 504              		.cfi_endproc
 505              	.LFE10:
 506              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 17


 507              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 508              		.align	2
 509              		.global	SPIM_ReadRxStatus
 510              		.thumb
 511              		.thumb_func
 512              		.type	SPIM_ReadRxStatus, %function
 513              	SPIM_ReadRxStatus:
 514              	.LFB11:
 407:Generated_Source\PSoC5/SPIM.c **** 
 408:Generated_Source\PSoC5/SPIM.c **** 
 409:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPIM.c **** *
 413:Generated_Source\PSoC5/SPIM.c **** * Summary:
 414:Generated_Source\PSoC5/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPIM.c **** *
 416:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC5/SPIM.c **** *  None.
 418:Generated_Source\PSoC5/SPIM.c **** *
 419:Generated_Source\PSoC5/SPIM.c **** * Return:
 420:Generated_Source\PSoC5/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPIM.c **** *
 422:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPIM.c **** *
 426:Generated_Source\PSoC5/SPIM.c **** * Theory:
 427:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPIM.c **** *
 430:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPIM.c **** *
 433:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPIM.c **** *  No.
 435:Generated_Source\PSoC5/SPIM.c **** *
 436:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPIM.c **** {
 515              		.loc 1 438 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 8
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0000 80B4     		push	{r7}
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 83B0     		sub	sp, sp, #12
 524              		.cfi_def_cfa_offset 16
 525 0004 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPIM.c **** 
 441:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 18


 444:Generated_Source\PSoC5/SPIM.c **** 
 445:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPIM.c **** 
 448:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 449:Generated_Source\PSoC5/SPIM.c **** 
 450:Generated_Source\PSoC5/SPIM.c ****     #else
 451:Generated_Source\PSoC5/SPIM.c **** 
 452:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 527              		.loc 1 452 0
 528 0006 044B     		ldr	r3, .L30
 529 0008 1B78     		ldrb	r3, [r3]
 530 000a FB71     		strb	r3, [r7, #7]
 453:Generated_Source\PSoC5/SPIM.c **** 
 454:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPIM.c **** 
 456:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 531              		.loc 1 456 0
 532 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:Generated_Source\PSoC5/SPIM.c **** }
 533              		.loc 1 457 0
 534 000e 1846     		mov	r0, r3
 535 0010 0C37     		adds	r7, r7, #12
 536              		.cfi_def_cfa_offset 4
 537 0012 BD46     		mov	sp, r7
 538              		.cfi_def_cfa_register 13
 539              		@ sp needed
 540 0014 80BC     		pop	{r7}
 541              		.cfi_restore 7
 542              		.cfi_def_cfa_offset 0
 543 0016 7047     		bx	lr
 544              	.L31:
 545              		.align	2
 546              	.L30:
 547 0018 66640040 		.word	1073767526
 548              		.cfi_endproc
 549              	.LFE11:
 550              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 551              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 552              		.align	2
 553              		.global	SPIM_WriteTxData
 554              		.thumb
 555              		.thumb_func
 556              		.type	SPIM_WriteTxData, %function
 557              	SPIM_WriteTxData:
 558              	.LFB12:
 458:Generated_Source\PSoC5/SPIM.c **** 
 459:Generated_Source\PSoC5/SPIM.c **** 
 460:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPIM.c **** *
 464:Generated_Source\PSoC5/SPIM.c **** * Summary:
 465:Generated_Source\PSoC5/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPIM.c **** *
 467:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC5/SPIM.c **** *  txDataByte: The data value to send across the SPI.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 19


 469:Generated_Source\PSoC5/SPIM.c **** *
 470:Generated_Source\PSoC5/SPIM.c **** * Return:
 471:Generated_Source\PSoC5/SPIM.c **** *  None.
 472:Generated_Source\PSoC5/SPIM.c **** *
 473:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPIM.c **** *
 482:Generated_Source\PSoC5/SPIM.c **** * Theory:
 483:Generated_Source\PSoC5/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPIM.c **** *
 485:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPIM.c **** *
 490:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPIM.c **** *  No.
 492:Generated_Source\PSoC5/SPIM.c **** *
 493:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPIM.c **** {
 559              		.loc 1 495 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564 0000 80B4     		push	{r7}
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 83B0     		sub	sp, sp, #12
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 0346     		mov	r3, r0
 572 0008 FB71     		strb	r3, [r7, #7]
 496:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPIM.c **** 
 498:Generated_Source\PSoC5/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPIM.c **** 
 501:Generated_Source\PSoC5/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPIM.c ****         do
 503:Generated_Source\PSoC5/SPIM.c ****         {
 504:Generated_Source\PSoC5/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 505:Generated_Source\PSoC5/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPIM.c ****             {
 507:Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC5/SPIM.c ****             }
 509:Generated_Source\PSoC5/SPIM.c ****             else
 510:Generated_Source\PSoC5/SPIM.c ****             {
 511:Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead--;
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 20


 512:Generated_Source\PSoC5/SPIM.c ****             }
 513:Generated_Source\PSoC5/SPIM.c **** 
 514:Generated_Source\PSoC5/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:Generated_Source\PSoC5/SPIM.c **** 
 516:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 518:Generated_Source\PSoC5/SPIM.c **** 
 519:Generated_Source\PSoC5/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:Generated_Source\PSoC5/SPIM.c **** 
 522:Generated_Source\PSoC5/SPIM.c **** 
 523:Generated_Source\PSoC5/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:Generated_Source\PSoC5/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC5/SPIM.c ****         {
 526:Generated_Source\PSoC5/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 528:Generated_Source\PSoC5/SPIM.c ****         }
 529:Generated_Source\PSoC5/SPIM.c ****         else
 530:Generated_Source\PSoC5/SPIM.c ****         {
 531:Generated_Source\PSoC5/SPIM.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPIM.c ****             SPIM_txBufferWrite++;
 533:Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC5/SPIM.c ****             {
 535:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:Generated_Source\PSoC5/SPIM.c ****             }
 537:Generated_Source\PSoC5/SPIM.c **** 
 538:Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:Generated_Source\PSoC5/SPIM.c ****             {
 540:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferRead++;
 541:Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC5/SPIM.c ****                 {
 543:Generated_Source\PSoC5/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:Generated_Source\PSoC5/SPIM.c ****                 }
 545:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:Generated_Source\PSoC5/SPIM.c ****             }
 547:Generated_Source\PSoC5/SPIM.c **** 
 548:Generated_Source\PSoC5/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:Generated_Source\PSoC5/SPIM.c **** 
 550:Generated_Source\PSoC5/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC5/SPIM.c ****         }
 552:Generated_Source\PSoC5/SPIM.c **** 
 553:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 554:Generated_Source\PSoC5/SPIM.c **** 
 555:Generated_Source\PSoC5/SPIM.c ****     #else
 556:Generated_Source\PSoC5/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 573              		.loc 1 557 0
 574 000a 00BF     		nop
 575              	.L33:
 576              		.loc 1 557 0 is_stmt 0 discriminator 1
 577 000c 074B     		ldr	r3, .L34
 578 000e 1B78     		ldrb	r3, [r3]
 579 0010 DBB2     		uxtb	r3, r3
 580 0012 03F00403 		and	r3, r3, #4
 581 0016 002B     		cmp	r3, #0
 582 0018 F8D0     		beq	.L33
 558:Generated_Source\PSoC5/SPIM.c ****         {
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 21


 559:Generated_Source\PSoC5/SPIM.c ****         }
 560:Generated_Source\PSoC5/SPIM.c **** 
 561:Generated_Source\PSoC5/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 583              		.loc 1 562 0 is_stmt 1
 584 001a 054A     		ldr	r2, .L34+4
 585 001c FB79     		ldrb	r3, [r7, #7]
 586 001e 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC5/SPIM.c **** 
 564:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPIM.c **** }
 587              		.loc 1 565 0
 588 0020 00BF     		nop
 589 0022 0C37     		adds	r7, r7, #12
 590              		.cfi_def_cfa_offset 4
 591 0024 BD46     		mov	sp, r7
 592              		.cfi_def_cfa_register 13
 593              		@ sp needed
 594 0026 80BC     		pop	{r7}
 595              		.cfi_restore 7
 596              		.cfi_def_cfa_offset 0
 597 0028 7047     		bx	lr
 598              	.L35:
 599 002a 00BF     		.align	2
 600              	.L34:
 601 002c 65640040 		.word	1073767525
 602 0030 45640040 		.word	1073767493
 603              		.cfi_endproc
 604              	.LFE12:
 605              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 606              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 607              		.align	2
 608              		.global	SPIM_ReadRxData
 609              		.thumb
 610              		.thumb_func
 611              		.type	SPIM_ReadRxData, %function
 612              	SPIM_ReadRxData:
 613              	.LFB13:
 566:Generated_Source\PSoC5/SPIM.c **** 
 567:Generated_Source\PSoC5/SPIM.c **** 
 568:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPIM.c **** *
 572:Generated_Source\PSoC5/SPIM.c **** * Summary:
 573:Generated_Source\PSoC5/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPIM.c **** *
 575:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC5/SPIM.c **** *  None.
 577:Generated_Source\PSoC5/SPIM.c **** *
 578:Generated_Source\PSoC5/SPIM.c **** * Return:
 579:Generated_Source\PSoC5/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPIM.c **** *
 581:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 22


 585:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPIM.c **** *  received data.
 589:Generated_Source\PSoC5/SPIM.c **** *
 590:Generated_Source\PSoC5/SPIM.c **** * Theory:
 591:Generated_Source\PSoC5/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPIM.c **** *
 593:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPIM.c **** *
 598:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPIM.c **** *  No.
 600:Generated_Source\PSoC5/SPIM.c **** *
 601:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPIM.c **** {
 614              		.loc 1 603 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 8
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619 0000 80B4     		push	{r7}
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 7, -4
 622 0002 83B0     		sub	sp, sp, #12
 623              		.cfi_def_cfa_offset 16
 624 0004 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC5/SPIM.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPIM.c **** 
 606:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPIM.c **** 
 608:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 610:Generated_Source\PSoC5/SPIM.c **** 
 611:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:Generated_Source\PSoC5/SPIM.c ****         {
 613:Generated_Source\PSoC5/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 614:Generated_Source\PSoC5/SPIM.c ****             {
 615:Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferRead++;
 616:Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPIM.c ****                 {
 618:Generated_Source\PSoC5/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPIM.c ****                 }
 620:Generated_Source\PSoC5/SPIM.c ****             }
 621:Generated_Source\PSoC5/SPIM.c ****             else
 622:Generated_Source\PSoC5/SPIM.c ****             {
 623:Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPIM.c ****             }
 625:Generated_Source\PSoC5/SPIM.c ****         }
 626:Generated_Source\PSoC5/SPIM.c **** 
 627:Generated_Source\PSoC5/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 628:Generated_Source\PSoC5/SPIM.c **** 
 629:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 23


 630:Generated_Source\PSoC5/SPIM.c **** 
 631:Generated_Source\PSoC5/SPIM.c ****     #else
 632:Generated_Source\PSoC5/SPIM.c **** 
 633:Generated_Source\PSoC5/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 626              		.loc 1 633 0
 627 0006 044B     		ldr	r3, .L38
 628 0008 1B78     		ldrb	r3, [r3]
 629 000a FB71     		strb	r3, [r7, #7]
 634:Generated_Source\PSoC5/SPIM.c **** 
 635:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPIM.c **** 
 637:Generated_Source\PSoC5/SPIM.c ****     return(rxData);
 630              		.loc 1 637 0
 631 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:Generated_Source\PSoC5/SPIM.c **** }
 632              		.loc 1 638 0
 633 000e 1846     		mov	r0, r3
 634 0010 0C37     		adds	r7, r7, #12
 635              		.cfi_def_cfa_offset 4
 636 0012 BD46     		mov	sp, r7
 637              		.cfi_def_cfa_register 13
 638              		@ sp needed
 639 0014 80BC     		pop	{r7}
 640              		.cfi_restore 7
 641              		.cfi_def_cfa_offset 0
 642 0016 7047     		bx	lr
 643              	.L39:
 644              		.align	2
 645              	.L38:
 646 0018 55640040 		.word	1073767509
 647              		.cfi_endproc
 648              	.LFE13:
 649              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 650              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 651              		.align	2
 652              		.global	SPIM_GetRxBufferSize
 653              		.thumb
 654              		.thumb_func
 655              		.type	SPIM_GetRxBufferSize, %function
 656              	SPIM_GetRxBufferSize:
 657              	.LFB14:
 639:Generated_Source\PSoC5/SPIM.c **** 
 640:Generated_Source\PSoC5/SPIM.c **** 
 641:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPIM.c **** *
 645:Generated_Source\PSoC5/SPIM.c **** * Summary:
 646:Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPIM.c **** *
 650:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC5/SPIM.c **** *  None.
 652:Generated_Source\PSoC5/SPIM.c **** *
 653:Generated_Source\PSoC5/SPIM.c **** * Return:
 654:Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 24


 655:Generated_Source\PSoC5/SPIM.c **** *
 656:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPIM.c **** *
 662:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPIM.c **** *
 665:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPIM.c **** {
 658              		.loc 1 667 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 83B0     		sub	sp, sp, #12
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPIM.c **** 
 670:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPIM.c **** 
 672:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 674:Generated_Source\PSoC5/SPIM.c **** 
 675:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:Generated_Source\PSoC5/SPIM.c ****         {
 677:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPIM.c ****         }
 679:Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:Generated_Source\PSoC5/SPIM.c ****         {
 681:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:Generated_Source\PSoC5/SPIM.c ****         }
 683:Generated_Source\PSoC5/SPIM.c ****         else
 684:Generated_Source\PSoC5/SPIM.c ****         {
 685:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:Generated_Source\PSoC5/SPIM.c ****         }
 687:Generated_Source\PSoC5/SPIM.c **** 
 688:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 689:Generated_Source\PSoC5/SPIM.c **** 
 690:Generated_Source\PSoC5/SPIM.c ****     #else
 691:Generated_Source\PSoC5/SPIM.c **** 
 692:Generated_Source\PSoC5/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 670              		.loc 1 693 0
 671 0006 084B     		ldr	r3, .L44
 672 0008 1B78     		ldrb	r3, [r3]
 673 000a DBB2     		uxtb	r3, r3
 674 000c 03F02003 		and	r3, r3, #32
 675 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 25


 676 0012 01D0     		beq	.L41
 677              		.loc 1 693 0 is_stmt 0 discriminator 1
 678 0014 0123     		movs	r3, #1
 679 0016 00E0     		b	.L42
 680              	.L41:
 681              		.loc 1 693 0 discriminator 2
 682 0018 0023     		movs	r3, #0
 683              	.L42:
 684              		.loc 1 693 0 discriminator 4
 685 001a FB71     		strb	r3, [r7, #7]
 694:Generated_Source\PSoC5/SPIM.c **** 
 695:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPIM.c **** 
 697:Generated_Source\PSoC5/SPIM.c ****     return(size);
 686              		.loc 1 697 0 is_stmt 1 discriminator 4
 687 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/SPIM.c **** }
 688              		.loc 1 698 0 discriminator 4
 689 001e 1846     		mov	r0, r3
 690 0020 0C37     		adds	r7, r7, #12
 691              		.cfi_def_cfa_offset 4
 692 0022 BD46     		mov	sp, r7
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 0024 80BC     		pop	{r7}
 696              		.cfi_restore 7
 697              		.cfi_def_cfa_offset 0
 698 0026 7047     		bx	lr
 699              	.L45:
 700              		.align	2
 701              	.L44:
 702 0028 66640040 		.word	1073767526
 703              		.cfi_endproc
 704              	.LFE14:
 705              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 706              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 707              		.align	2
 708              		.global	SPIM_GetTxBufferSize
 709              		.thumb
 710              		.thumb_func
 711              		.type	SPIM_GetTxBufferSize, %function
 712              	SPIM_GetTxBufferSize:
 713              	.LFB15:
 699:Generated_Source\PSoC5/SPIM.c **** 
 700:Generated_Source\PSoC5/SPIM.c **** 
 701:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPIM.c **** *
 705:Generated_Source\PSoC5/SPIM.c **** * Summary:
 706:Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPIM.c **** *
 711:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC5/SPIM.c **** *  None.
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 26


 713:Generated_Source\PSoC5/SPIM.c **** *
 714:Generated_Source\PSoC5/SPIM.c **** * Return:
 715:Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPIM.c **** *
 717:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 718:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPIM.c **** *
 723:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPIM.c **** *
 726:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPIM.c **** {
 714              		.loc 1 728 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 8
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 80B4     		push	{r7}
 720              		.cfi_def_cfa_offset 4
 721              		.cfi_offset 7, -4
 722 0002 83B0     		sub	sp, sp, #12
 723              		.cfi_def_cfa_offset 16
 724 0004 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPIM.c **** 
 731:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 734:Generated_Source\PSoC5/SPIM.c **** 
 735:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 736:Generated_Source\PSoC5/SPIM.c ****         {
 737:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPIM.c ****         }
 739:Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 740:Generated_Source\PSoC5/SPIM.c ****         {
 741:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 742:Generated_Source\PSoC5/SPIM.c ****         }
 743:Generated_Source\PSoC5/SPIM.c ****         else
 744:Generated_Source\PSoC5/SPIM.c ****         {
 745:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 746:Generated_Source\PSoC5/SPIM.c ****         }
 747:Generated_Source\PSoC5/SPIM.c **** 
 748:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 749:Generated_Source\PSoC5/SPIM.c **** 
 750:Generated_Source\PSoC5/SPIM.c ****     #else
 751:Generated_Source\PSoC5/SPIM.c **** 
 752:Generated_Source\PSoC5/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 726              		.loc 1 752 0
 727 0006 0D4B     		ldr	r3, .L51
 728 0008 1B78     		ldrb	r3, [r3]
 729 000a FB71     		strb	r3, [r7, #7]
 753:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 27


 754:Generated_Source\PSoC5/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 730              		.loc 1 754 0
 731 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 732 000e 03F00203 		and	r3, r3, #2
 733 0012 002B     		cmp	r3, #0
 734 0014 02D0     		beq	.L47
 755:Generated_Source\PSoC5/SPIM.c ****         {
 756:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 735              		.loc 1 756 0
 736 0016 0023     		movs	r3, #0
 737 0018 FB71     		strb	r3, [r7, #7]
 738 001a 09E0     		b	.L48
 739              	.L47:
 757:Generated_Source\PSoC5/SPIM.c ****         }
 758:Generated_Source\PSoC5/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 740              		.loc 1 758 0
 741 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 742 001e 03F00403 		and	r3, r3, #4
 743 0022 002B     		cmp	r3, #0
 744 0024 02D0     		beq	.L49
 759:Generated_Source\PSoC5/SPIM.c ****         {
 760:Generated_Source\PSoC5/SPIM.c ****             size = 1u;
 745              		.loc 1 760 0
 746 0026 0123     		movs	r3, #1
 747 0028 FB71     		strb	r3, [r7, #7]
 748 002a 01E0     		b	.L48
 749              	.L49:
 761:Generated_Source\PSoC5/SPIM.c ****         }
 762:Generated_Source\PSoC5/SPIM.c ****         else
 763:Generated_Source\PSoC5/SPIM.c ****         {
 764:Generated_Source\PSoC5/SPIM.c ****             size = SPIM_FIFO_SIZE;
 750              		.loc 1 764 0
 751 002c 0423     		movs	r3, #4
 752 002e FB71     		strb	r3, [r7, #7]
 753              	.L48:
 765:Generated_Source\PSoC5/SPIM.c ****         }
 766:Generated_Source\PSoC5/SPIM.c **** 
 767:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPIM.c **** 
 769:Generated_Source\PSoC5/SPIM.c ****     return(size);
 754              		.loc 1 769 0
 755 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:Generated_Source\PSoC5/SPIM.c **** }
 756              		.loc 1 770 0
 757 0032 1846     		mov	r0, r3
 758 0034 0C37     		adds	r7, r7, #12
 759              		.cfi_def_cfa_offset 4
 760 0036 BD46     		mov	sp, r7
 761              		.cfi_def_cfa_register 13
 762              		@ sp needed
 763 0038 80BC     		pop	{r7}
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 003a 7047     		bx	lr
 767              	.L52:
 768              		.align	2
 769              	.L51:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 28


 770 003c 65640040 		.word	1073767525
 771              		.cfi_endproc
 772              	.LFE15:
 773              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 774              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 775              		.align	2
 776              		.global	SPIM_ClearRxBuffer
 777              		.thumb
 778              		.thumb_func
 779              		.type	SPIM_ClearRxBuffer, %function
 780              	SPIM_ClearRxBuffer:
 781              	.LFB16:
 771:Generated_Source\PSoC5/SPIM.c **** 
 772:Generated_Source\PSoC5/SPIM.c **** 
 773:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPIM.c **** *
 777:Generated_Source\PSoC5/SPIM.c **** * Summary:
 778:Generated_Source\PSoC5/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPIM.c **** *
 780:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC5/SPIM.c **** *  None.
 782:Generated_Source\PSoC5/SPIM.c **** *
 783:Generated_Source\PSoC5/SPIM.c **** * Return:
 784:Generated_Source\PSoC5/SPIM.c **** *  None.
 785:Generated_Source\PSoC5/SPIM.c **** *
 786:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPIM.c **** *
 794:Generated_Source\PSoC5/SPIM.c **** * Theory:
 795:Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPIM.c **** *
 799:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPIM.c **** *
 802:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPIM.c **** *  No.
 804:Generated_Source\PSoC5/SPIM.c **** *
 805:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPIM.c **** {
 782              		.loc 1 807 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787 0000 80B4     		push	{r7}
 788              		.cfi_def_cfa_offset 4
 789              		.cfi_offset 7, -4
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 29


 790 0002 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 792              		.loc 1 809 0
 793 0004 01E0     		b	.L54
 794              	.L55:
 810:Generated_Source\PSoC5/SPIM.c ****     {
 811:Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 795              		.loc 1 811 0
 796 0006 064B     		ldr	r3, .L56
 797 0008 1B78     		ldrb	r3, [r3]
 798              	.L54:
 809:Generated_Source\PSoC5/SPIM.c ****     {
 799              		.loc 1 809 0
 800 000a 064B     		ldr	r3, .L56+4
 801 000c 1B78     		ldrb	r3, [r3]
 802 000e DBB2     		uxtb	r3, r3
 803 0010 03F02003 		and	r3, r3, #32
 804 0014 002B     		cmp	r3, #0
 805 0016 F6D1     		bne	.L55
 812:Generated_Source\PSoC5/SPIM.c ****     }
 813:Generated_Source\PSoC5/SPIM.c **** 
 814:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 817:Generated_Source\PSoC5/SPIM.c **** 
 818:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPIM.c **** 
 822:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 823:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPIM.c **** }
 806              		.loc 1 824 0
 807 0018 00BF     		nop
 808 001a BD46     		mov	sp, r7
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 001c 80BC     		pop	{r7}
 812              		.cfi_restore 7
 813              		.cfi_def_cfa_offset 0
 814 001e 7047     		bx	lr
 815              	.L57:
 816              		.align	2
 817              	.L56:
 818 0020 55640040 		.word	1073767509
 819 0024 66640040 		.word	1073767526
 820              		.cfi_endproc
 821              	.LFE16:
 822              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 823              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 824              		.align	2
 825              		.global	SPIM_ClearTxBuffer
 826              		.thumb
 827              		.thumb_func
 828              		.type	SPIM_ClearTxBuffer, %function
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 30


 829              	SPIM_ClearTxBuffer:
 830              	.LFB17:
 825:Generated_Source\PSoC5/SPIM.c **** 
 826:Generated_Source\PSoC5/SPIM.c **** 
 827:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPIM.c **** *
 831:Generated_Source\PSoC5/SPIM.c **** * Summary:
 832:Generated_Source\PSoC5/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPIM.c **** *
 834:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC5/SPIM.c **** *  None.
 836:Generated_Source\PSoC5/SPIM.c **** *
 837:Generated_Source\PSoC5/SPIM.c **** * Return:
 838:Generated_Source\PSoC5/SPIM.c **** *  None.
 839:Generated_Source\PSoC5/SPIM.c **** *
 840:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPIM.c **** *
 848:Generated_Source\PSoC5/SPIM.c **** * Theory:
 849:Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPIM.c **** *
 853:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPIM.c **** *
 857:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPIM.c **** *  No.
 859:Generated_Source\PSoC5/SPIM.c **** *
 860:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPIM.c **** {
 831              		.loc 1 862 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 8
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835 0000 80B5     		push	{r7, lr}
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 82B0     		sub	sp, sp, #8
 840              		.cfi_def_cfa_offset 16
 841 0004 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPIM.c **** 
 865:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 843              		.loc 1 865 0
 844 0006 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 31


 845 000a 0346     		mov	r3, r0
 846 000c FB71     		strb	r3, [r7, #7]
 866:Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 847              		.loc 1 867 0
 848 000e 0C4A     		ldr	r2, .L59
 849 0010 0B4B     		ldr	r3, .L59
 850 0012 1B78     		ldrb	r3, [r3]
 851 0014 DBB2     		uxtb	r3, r3
 852 0016 43F00103 		orr	r3, r3, #1
 853 001a DBB2     		uxtb	r3, r3
 854 001c 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 855              		.loc 1 868 0
 856 001e 084A     		ldr	r2, .L59
 857 0020 074B     		ldr	r3, .L59
 858 0022 1B78     		ldrb	r3, [r3]
 859 0024 DBB2     		uxtb	r3, r3
 860 0026 23F00103 		bic	r3, r3, #1
 861 002a DBB2     		uxtb	r3, r3
 862 002c 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC5/SPIM.c **** 
 870:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 863              		.loc 1 875 0
 864 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 865 0030 1846     		mov	r0, r3
 866 0032 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC5/SPIM.c **** 
 877:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 880:Generated_Source\PSoC5/SPIM.c **** 
 881:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
 882:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
 884:Generated_Source\PSoC5/SPIM.c **** 
 885:Generated_Source\PSoC5/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC5/SPIM.c **** 
 888:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 889:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPIM.c **** }
 867              		.loc 1 890 0
 868 0036 00BF     		nop
 869 0038 0837     		adds	r7, r7, #8
 870              		.cfi_def_cfa_offset 8
 871 003a BD46     		mov	sp, r7
 872              		.cfi_def_cfa_register 13
 873              		@ sp needed
 874 003c 80BD     		pop	{r7, pc}
 875              	.L60:
 876 003e 00BF     		.align	2
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 32


 877              	.L59:
 878 0040 95640040 		.word	1073767573
 879              		.cfi_endproc
 880              	.LFE17:
 881              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 882              		.section	.text.SPIM_PutArray,"ax",%progbits
 883              		.align	2
 884              		.global	SPIM_PutArray
 885              		.thumb
 886              		.thumb_func
 887              		.type	SPIM_PutArray, %function
 888              	SPIM_PutArray:
 889              	.LFB18:
 891:Generated_Source\PSoC5/SPIM.c **** 
 892:Generated_Source\PSoC5/SPIM.c **** 
 893:Generated_Source\PSoC5/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPIM.c ****     *
 898:Generated_Source\PSoC5/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPIM.c ****     *
 902:Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPIM.c ****     *  None.
 904:Generated_Source\PSoC5/SPIM.c ****     *
 905:Generated_Source\PSoC5/SPIM.c ****     * Return:
 906:Generated_Source\PSoC5/SPIM.c ****     *  None.
 907:Generated_Source\PSoC5/SPIM.c ****     *
 908:Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC5/SPIM.c ****     {
 911:Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPIM.c ****     }
 913:Generated_Source\PSoC5/SPIM.c **** 
 914:Generated_Source\PSoC5/SPIM.c **** 
 915:Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPIM.c ****     *
 919:Generated_Source\PSoC5/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPIM.c ****     *
 923:Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPIM.c ****     *  None.
 925:Generated_Source\PSoC5/SPIM.c ****     *
 926:Generated_Source\PSoC5/SPIM.c ****     * Return:
 927:Generated_Source\PSoC5/SPIM.c ****     *  None.
 928:Generated_Source\PSoC5/SPIM.c ****     *
 929:Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC5/SPIM.c ****     {
 932:Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPIM.c ****     }
 934:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 33


 935:Generated_Source\PSoC5/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPIM.c **** 
 937:Generated_Source\PSoC5/SPIM.c **** 
 938:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPIM.c **** *
 942:Generated_Source\PSoC5/SPIM.c **** * Summary:
 943:Generated_Source\PSoC5/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPIM.c **** *
 946:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC5/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPIM.c **** *
 950:Generated_Source\PSoC5/SPIM.c **** * Return:
 951:Generated_Source\PSoC5/SPIM.c **** *  None.
 952:Generated_Source\PSoC5/SPIM.c **** *
 953:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPIM.c **** *
 958:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPIM.c **** *  No.
 960:Generated_Source\PSoC5/SPIM.c **** *
 961:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPIM.c ****                                                                           
 964:Generated_Source\PSoC5/SPIM.c **** {
 890              		.loc 1 964 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 16
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 84B0     		sub	sp, sp, #16
 899              		.cfi_def_cfa_offset 24
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 903 0008 0B46     		mov	r3, r1
 904 000a FB70     		strb	r3, [r7, #3]
 965:Generated_Source\PSoC5/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPIM.c **** 
 967:Generated_Source\PSoC5/SPIM.c ****     bufIndex = 0u;
 905              		.loc 1 967 0
 906 000c 0023     		movs	r3, #0
 907 000e FB73     		strb	r3, [r7, #15]
 968:Generated_Source\PSoC5/SPIM.c **** 
 969:Generated_Source\PSoC5/SPIM.c ****     while(byteCount > 0u)
 908              		.loc 1 969 0
 909 0010 0CE0     		b	.L62
 910              	.L63:
 970:Generated_Source\PSoC5/SPIM.c ****     {
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 34


 971:Generated_Source\PSoC5/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 911              		.loc 1 971 0
 912 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 913 0014 7A68     		ldr	r2, [r7, #4]
 914 0016 1344     		add	r3, r3, r2
 915 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 001a 1846     		mov	r0, r3
 917 001c FFF7FEFF 		bl	SPIM_WriteTxData
 972:Generated_Source\PSoC5/SPIM.c ****         bufIndex++;
 918              		.loc 1 972 0
 919 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 920 0022 0133     		adds	r3, r3, #1
 921 0024 FB73     		strb	r3, [r7, #15]
 973:Generated_Source\PSoC5/SPIM.c ****         byteCount--;
 922              		.loc 1 973 0
 923 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 924 0028 013B     		subs	r3, r3, #1
 925 002a FB70     		strb	r3, [r7, #3]
 926              	.L62:
 969:Generated_Source\PSoC5/SPIM.c ****     {
 927              		.loc 1 969 0
 928 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 929 002e 002B     		cmp	r3, #0
 930 0030 EFD1     		bne	.L63
 974:Generated_Source\PSoC5/SPIM.c ****     }
 975:Generated_Source\PSoC5/SPIM.c **** }
 931              		.loc 1 975 0
 932 0032 00BF     		nop
 933 0034 1037     		adds	r7, r7, #16
 934              		.cfi_def_cfa_offset 8
 935 0036 BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 0038 80BD     		pop	{r7, pc}
 939              		.cfi_endproc
 940              	.LFE18:
 941              		.size	SPIM_PutArray, .-SPIM_PutArray
 942 003a 00BF     		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 943              		.align	2
 944              		.global	SPIM_ClearFIFO
 945              		.thumb
 946              		.thumb_func
 947              		.type	SPIM_ClearFIFO, %function
 948              	SPIM_ClearFIFO:
 949              	.LFB19:
 976:Generated_Source\PSoC5/SPIM.c **** 
 977:Generated_Source\PSoC5/SPIM.c **** 
 978:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPIM.c **** *
 982:Generated_Source\PSoC5/SPIM.c **** * Summary:
 983:Generated_Source\PSoC5/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPIM.c **** *
 985:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 986:Generated_Source\PSoC5/SPIM.c **** *  None.
 987:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 35


 988:Generated_Source\PSoC5/SPIM.c **** * Return:
 989:Generated_Source\PSoC5/SPIM.c **** *  None.
 990:Generated_Source\PSoC5/SPIM.c **** *
 991:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPIM.c **** *
 994:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPIM.c **** {
 950              		.loc 1 996 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954 0000 80B5     		push	{r7, lr}
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 7, -8
 957              		.cfi_offset 14, -4
 958 0002 82B0     		sub	sp, sp, #8
 959              		.cfi_def_cfa_offset 16
 960 0004 00AF     		add	r7, sp, #0
 961              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPIM.c **** 
 999:Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 962              		.loc 1 1000 0
 963 0006 01E0     		b	.L65
 964              	.L66:
1001:Generated_Source\PSoC5/SPIM.c ****     {
1002:Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 965              		.loc 1 1002 0
 966 0008 124B     		ldr	r3, .L67
 967 000a 1B78     		ldrb	r3, [r3]
 968              	.L65:
1000:Generated_Source\PSoC5/SPIM.c ****     {
 969              		.loc 1 1000 0
 970 000c 124B     		ldr	r3, .L67+4
 971 000e 1B78     		ldrb	r3, [r3]
 972 0010 DBB2     		uxtb	r3, r3
 973 0012 03F02003 		and	r3, r3, #32
 974 0016 002B     		cmp	r3, #0
 975 0018 F6D1     		bne	.L66
1003:Generated_Source\PSoC5/SPIM.c ****     }
1004:Generated_Source\PSoC5/SPIM.c **** 
1005:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 976              		.loc 1 1005 0
 977 001a FFF7FEFF 		bl	CyEnterCriticalSection
 978 001e 0346     		mov	r3, r0
 979 0020 FB71     		strb	r3, [r7, #7]
1006:Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 980              		.loc 1 1007 0
 981 0022 0E4A     		ldr	r2, .L67+8
 982 0024 0D4B     		ldr	r3, .L67+8
 983 0026 1B78     		ldrb	r3, [r3]
 984 0028 DBB2     		uxtb	r3, r3
 985 002a 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 36


 986 002e DBB2     		uxtb	r3, r3
 987 0030 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 988              		.loc 1 1008 0
 989 0032 0A4A     		ldr	r2, .L67+8
 990 0034 094B     		ldr	r3, .L67+8
 991 0036 1B78     		ldrb	r3, [r3]
 992 0038 DBB2     		uxtb	r3, r3
 993 003a 23F00103 		bic	r3, r3, #1
 994 003e DBB2     		uxtb	r3, r3
 995 0040 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC5/SPIM.c **** 
1010:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 996              		.loc 1 1015 0
 997 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 0044 1846     		mov	r0, r3
 999 0046 FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC5/SPIM.c **** }
 1000              		.loc 1 1016 0
 1001 004a 00BF     		nop
 1002 004c 0837     		adds	r7, r7, #8
 1003              		.cfi_def_cfa_offset 8
 1004 004e BD46     		mov	sp, r7
 1005              		.cfi_def_cfa_register 13
 1006              		@ sp needed
 1007 0050 80BD     		pop	{r7, pc}
 1008              	.L68:
 1009 0052 00BF     		.align	2
 1010              	.L67:
 1011 0054 55640040 		.word	1073767509
 1012 0058 66640040 		.word	1073767526
 1013 005c 95640040 		.word	1073767573
 1014              		.cfi_endproc
 1015              	.LFE19:
 1016              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 1017              		.section	.text.SPIM_EnableInt,"ax",%progbits
 1018              		.align	2
 1019              		.global	SPIM_EnableInt
 1020              		.thumb
 1021              		.thumb_func
 1022              		.type	SPIM_EnableInt, %function
 1023              	SPIM_EnableInt:
 1024              	.LFB20:
1017:Generated_Source\PSoC5/SPIM.c **** 
1018:Generated_Source\PSoC5/SPIM.c **** 
1019:Generated_Source\PSoC5/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPIM.c **** */
1022:Generated_Source\PSoC5/SPIM.c **** 
1023:Generated_Source\PSoC5/SPIM.c **** 
1024:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableInt
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 37


1026:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPIM.c **** *
1028:Generated_Source\PSoC5/SPIM.c **** * Summary:
1029:Generated_Source\PSoC5/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPIM.c **** *
1031:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC5/SPIM.c **** *  None.
1033:Generated_Source\PSoC5/SPIM.c **** *
1034:Generated_Source\PSoC5/SPIM.c **** * Return:
1035:Generated_Source\PSoC5/SPIM.c **** *  None.
1036:Generated_Source\PSoC5/SPIM.c **** *
1037:Generated_Source\PSoC5/SPIM.c **** * Theory:
1038:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPIM.c **** *
1040:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC5/SPIM.c **** {
 1025              		.loc 1 1042 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 1, uses_anonymous_args = 0
 1029 0000 80B5     		push	{r7, lr}
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 7, -8
 1032              		.cfi_offset 14, -4
 1033 0002 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 1035              		.loc 1 1043 0
 1036 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1044:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 1037              		.loc 1 1044 0
 1038 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1045:Generated_Source\PSoC5/SPIM.c **** }
 1039              		.loc 1 1045 0
 1040 000c 00BF     		nop
 1041 000e 80BD     		pop	{r7, pc}
 1042              		.cfi_endproc
 1043              	.LFE20:
 1044              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 1045              		.section	.text.SPIM_DisableInt,"ax",%progbits
 1046              		.align	2
 1047              		.global	SPIM_DisableInt
 1048              		.thumb
 1049              		.thumb_func
 1050              		.type	SPIM_DisableInt, %function
 1051              	SPIM_DisableInt:
 1052              	.LFB21:
1046:Generated_Source\PSoC5/SPIM.c **** 
1047:Generated_Source\PSoC5/SPIM.c **** 
1048:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPIM.c **** *
1052:Generated_Source\PSoC5/SPIM.c **** * Summary:
1053:Generated_Source\PSoC5/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 38


1055:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC5/SPIM.c **** *  None.
1057:Generated_Source\PSoC5/SPIM.c **** *
1058:Generated_Source\PSoC5/SPIM.c **** * Return:
1059:Generated_Source\PSoC5/SPIM.c **** *  None.
1060:Generated_Source\PSoC5/SPIM.c **** *
1061:Generated_Source\PSoC5/SPIM.c **** * Theory:
1062:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPIM.c **** *
1064:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC5/SPIM.c **** {
 1053              		.loc 1 1066 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057 0000 80B5     		push	{r7, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 00AF     		add	r7, sp, #0
 1062              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 1063              		.loc 1 1067 0
 1064 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
1068:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 1065              		.loc 1 1068 0
 1066 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1069:Generated_Source\PSoC5/SPIM.c **** }
 1067              		.loc 1 1069 0
 1068 000c 00BF     		nop
 1069 000e 80BD     		pop	{r7, pc}
 1070              		.cfi_endproc
 1071              	.LFE21:
 1072              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1073              		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1074              		.align	2
 1075              		.global	SPIM_SetInterruptMode
 1076              		.thumb
 1077              		.thumb_func
 1078              		.type	SPIM_SetInterruptMode, %function
 1079              	SPIM_SetInterruptMode:
 1080              	.LFB22:
1070:Generated_Source\PSoC5/SPIM.c **** 
1071:Generated_Source\PSoC5/SPIM.c **** 
1072:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPIM.c **** *
1076:Generated_Source\PSoC5/SPIM.c **** * Summary:
1077:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPIM.c **** *
1079:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPIM.c **** *  header file).
1082:Generated_Source\PSoC5/SPIM.c **** *
1083:Generated_Source\PSoC5/SPIM.c **** * Return:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 39


1084:Generated_Source\PSoC5/SPIM.c **** *  None.
1085:Generated_Source\PSoC5/SPIM.c **** *
1086:Generated_Source\PSoC5/SPIM.c **** * Theory:
1087:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPIM.c **** *
1089:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPIM.c **** {
 1081              		.loc 1 1091 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 8
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086 0000 80B4     		push	{r7}
 1087              		.cfi_def_cfa_offset 4
 1088              		.cfi_offset 7, -4
 1089 0002 83B0     		sub	sp, sp, #12
 1090              		.cfi_def_cfa_offset 16
 1091 0004 00AF     		add	r7, sp, #0
 1092              		.cfi_def_cfa_register 7
 1093 0006 0346     		mov	r3, r0
 1094 0008 FB71     		strb	r3, [r7, #7]
1092:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1095              		.loc 1 1092 0
 1096 000a 074A     		ldr	r2, .L72
 1097 000c FB79     		ldrb	r3, [r7, #7]
 1098 000e 23F01003 		bic	r3, r3, #16
 1099 0012 DBB2     		uxtb	r3, r3
 1100 0014 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1101              		.loc 1 1093 0
 1102 0016 054A     		ldr	r2, .L72+4
 1103 0018 FB79     		ldrb	r3, [r7, #7]
 1104 001a 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/SPIM.c **** }
 1105              		.loc 1 1094 0
 1106 001c 00BF     		nop
 1107 001e 0C37     		adds	r7, r7, #12
 1108              		.cfi_def_cfa_offset 4
 1109 0020 BD46     		mov	sp, r7
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 0022 80BC     		pop	{r7}
 1113              		.cfi_restore 7
 1114              		.cfi_def_cfa_offset 0
 1115 0024 7047     		bx	lr
 1116              	.L73:
 1117 0026 00BF     		.align	2
 1118              	.L72:
 1119 0028 85640040 		.word	1073767557
 1120 002c 86640040 		.word	1073767558
 1121              		.cfi_endproc
 1122              	.LFE22:
 1123              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1124              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1125              		.align	2
 1126              		.global	SPIM_ReadStatus
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 40


 1127              		.thumb
 1128              		.thumb_func
 1129              		.type	SPIM_ReadStatus, %function
 1130              	SPIM_ReadStatus:
 1131              	.LFB23:
1095:Generated_Source\PSoC5/SPIM.c **** 
1096:Generated_Source\PSoC5/SPIM.c **** 
1097:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPIM.c **** *
1101:Generated_Source\PSoC5/SPIM.c **** * Summary:
1102:Generated_Source\PSoC5/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPIM.c **** *
1104:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC5/SPIM.c **** *  None.
1106:Generated_Source\PSoC5/SPIM.c **** *
1107:Generated_Source\PSoC5/SPIM.c **** * Return:
1108:Generated_Source\PSoC5/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPIM.c **** *
1110:Generated_Source\PSoC5/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPIM.c **** *
1114:Generated_Source\PSoC5/SPIM.c **** * Theory:
1115:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPIM.c **** *
1118:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPIM.c **** *
1121:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPIM.c **** *  No.
1123:Generated_Source\PSoC5/SPIM.c **** *
1124:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPIM.c **** {
 1132              		.loc 1 1126 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 8
 1135              		@ frame_needed = 1, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 1137 0000 80B4     		push	{r7}
 1138              		.cfi_def_cfa_offset 4
 1139              		.cfi_offset 7, -4
 1140 0002 83B0     		sub	sp, sp, #12
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPIM.c **** 
1129:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPIM.c **** 
1131:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableInt();
1132:Generated_Source\PSoC5/SPIM.c **** 
1133:Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1134:Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 41


1135:Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPIM.c **** 
1137:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
1138:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
1139:Generated_Source\PSoC5/SPIM.c **** 
1140:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableInt();
1141:Generated_Source\PSoC5/SPIM.c **** 
1142:Generated_Source\PSoC5/SPIM.c ****     #else
1143:Generated_Source\PSoC5/SPIM.c **** 
1144:Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 1144              		.loc 1 1144 0
 1145 0006 094B     		ldr	r3, .L76
 1146 0008 1B78     		ldrb	r3, [r3]
 1147 000a FB71     		strb	r3, [r7, #7]
1145:Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
 1148              		.loc 1 1145 0
 1149 000c 084B     		ldr	r3, .L76+4
 1150 000e 1B78     		ldrb	r3, [r3]
 1151 0010 DAB2     		uxtb	r2, r3
 1152 0012 FB79     		ldrb	r3, [r7, #7]
 1153 0014 1343     		orrs	r3, r3, r2
 1154 0016 FB71     		strb	r3, [r7, #7]
1146:Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1155              		.loc 1 1146 0
 1156 0018 FB79     		ldrb	r3, [r7, #7]
 1157 001a 23F01003 		bic	r3, r3, #16
 1158 001e FB71     		strb	r3, [r7, #7]
1147:Generated_Source\PSoC5/SPIM.c **** 
1148:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPIM.c **** 
1150:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 1159              		.loc 1 1150 0
 1160 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:Generated_Source\PSoC5/SPIM.c **** }
 1161              		.loc 1 1151 0
 1162 0022 1846     		mov	r0, r3
 1163 0024 0C37     		adds	r7, r7, #12
 1164              		.cfi_def_cfa_offset 4
 1165 0026 BD46     		mov	sp, r7
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0028 80BC     		pop	{r7}
 1169              		.cfi_restore 7
 1170              		.cfi_def_cfa_offset 0
 1171 002a 7047     		bx	lr
 1172              	.L77:
 1173              		.align	2
 1174              	.L76:
 1175 002c 66640040 		.word	1073767526
 1176 0030 65640040 		.word	1073767525
 1177              		.cfi_endproc
 1178              	.LFE23:
 1179              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1180              		.text
 1181              	.Letext0:
 1182              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1183              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 42


 1184              	.Ldebug_info0:
 1185 0000 EF030000 		.4byte	0x3ef
 1186 0004 0400     		.2byte	0x4
 1187 0006 00000000 		.4byte	.Ldebug_abbrev0
 1188 000a 04       		.byte	0x4
 1189 000b 01       		.uleb128 0x1
 1190 000c 11000000 		.4byte	.LASF52
 1191 0010 0C       		.byte	0xc
 1192 0011 B5000000 		.4byte	.LASF53
 1193 0015 0B030000 		.4byte	.LASF54
 1194 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1195 001d 00000000 		.4byte	0
 1196 0021 00000000 		.4byte	.Ldebug_line0
 1197 0025 02       		.uleb128 0x2
 1198 0026 01       		.byte	0x1
 1199 0027 06       		.byte	0x6
 1200 0028 6A030000 		.4byte	.LASF0
 1201 002c 02       		.uleb128 0x2
 1202 002d 01       		.byte	0x1
 1203 002e 08       		.byte	0x8
 1204 002f CC010000 		.4byte	.LASF1
 1205 0033 02       		.uleb128 0x2
 1206 0034 02       		.byte	0x2
 1207 0035 05       		.byte	0x5
 1208 0036 D7020000 		.4byte	.LASF2
 1209 003a 02       		.uleb128 0x2
 1210 003b 02       		.byte	0x2
 1211 003c 07       		.byte	0x7
 1212 003d EA000000 		.4byte	.LASF3
 1213 0041 02       		.uleb128 0x2
 1214 0042 04       		.byte	0x4
 1215 0043 05       		.byte	0x5
 1216 0044 4B030000 		.4byte	.LASF4
 1217 0048 02       		.uleb128 0x2
 1218 0049 04       		.byte	0x4
 1219 004a 07       		.byte	0x7
 1220 004b 85010000 		.4byte	.LASF5
 1221 004f 02       		.uleb128 0x2
 1222 0050 08       		.byte	0x8
 1223 0051 05       		.byte	0x5
 1224 0052 B0020000 		.4byte	.LASF6
 1225 0056 02       		.uleb128 0x2
 1226 0057 08       		.byte	0x8
 1227 0058 07       		.byte	0x7
 1228 0059 5C020000 		.4byte	.LASF7
 1229 005d 03       		.uleb128 0x3
 1230 005e 04       		.byte	0x4
 1231 005f 05       		.byte	0x5
 1232 0060 696E7400 		.ascii	"int\000"
 1233 0064 02       		.uleb128 0x2
 1234 0065 04       		.byte	0x4
 1235 0066 07       		.byte	0x7
 1236 0067 4F020000 		.4byte	.LASF8
 1237 006b 04       		.uleb128 0x4
 1238 006c 97010000 		.4byte	.LASF12
 1239 0070 02       		.byte	0x2
 1240 0071 A1       		.byte	0xa1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 43


 1241 0072 2C000000 		.4byte	0x2c
 1242 0076 02       		.uleb128 0x2
 1243 0077 04       		.byte	0x4
 1244 0078 04       		.byte	0x4
 1245 0079 3C010000 		.4byte	.LASF9
 1246 007d 02       		.uleb128 0x2
 1247 007e 08       		.byte	0x8
 1248 007f 04       		.byte	0x4
 1249 0080 EC010000 		.4byte	.LASF10
 1250 0084 02       		.uleb128 0x2
 1251 0085 01       		.byte	0x1
 1252 0086 08       		.byte	0x8
 1253 0087 FD000000 		.4byte	.LASF11
 1254 008b 05       		.uleb128 0x5
 1255 008c 6F010000 		.4byte	.LASF13
 1256 0090 02       		.byte	0x2
 1257 0091 4B01     		.2byte	0x14b
 1258 0093 97000000 		.4byte	0x97
 1259 0097 06       		.uleb128 0x6
 1260 0098 6B000000 		.4byte	0x6b
 1261 009c 02       		.uleb128 0x2
 1262 009d 08       		.byte	0x8
 1263 009e 04       		.byte	0x4
 1264 009f 5E030000 		.4byte	.LASF14
 1265 00a3 02       		.uleb128 0x2
 1266 00a4 04       		.byte	0x4
 1267 00a5 07       		.byte	0x7
 1268 00a6 A7020000 		.4byte	.LASF15
 1269 00aa 07       		.uleb128 0x7
 1270 00ab BE020000 		.4byte	.LASF16
 1271 00af 01       		.byte	0x1
 1272 00b0 3F       		.byte	0x3f
 1273 00b1 00000000 		.4byte	.LFB0
 1274 00b5 34000000 		.4byte	.LFE0-.LFB0
 1275 00b9 01       		.uleb128 0x1
 1276 00ba 9C       		.byte	0x9c
 1277 00bb 08       		.uleb128 0x8
 1278 00bc 9F000000 		.4byte	.LASF18
 1279 00c0 01       		.byte	0x1
 1280 00c1 78       		.byte	0x78
 1281 00c2 00000000 		.4byte	.LFB1
 1282 00c6 64000000 		.4byte	.LFE1-.LFB1
 1283 00ca 01       		.uleb128 0x1
 1284 00cb 9C       		.byte	0x9c
 1285 00cc DF000000 		.4byte	0xdf
 1286 00d0 09       		.uleb128 0x9
 1287 00d1 AB010000 		.4byte	.LASF20
 1288 00d5 01       		.byte	0x1
 1289 00d6 7A       		.byte	0x7a
 1290 00d7 6B000000 		.4byte	0x6b
 1291 00db 02       		.uleb128 0x2
 1292 00dc 91       		.byte	0x91
 1293 00dd 77       		.sleb128 -9
 1294 00de 00       		.byte	0
 1295 00df 07       		.uleb128 0x7
 1296 00e0 76030000 		.4byte	.LASF17
 1297 00e4 01       		.byte	0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 44


 1298 00e5 A3       		.byte	0xa3
 1299 00e6 00000000 		.4byte	.LFB2
 1300 00ea 24000000 		.4byte	.LFE2-.LFB2
 1301 00ee 01       		.uleb128 0x1
 1302 00ef 9C       		.byte	0x9c
 1303 00f0 08       		.uleb128 0x8
 1304 00f1 AB000000 		.4byte	.LASF19
 1305 00f5 01       		.byte	0x1
 1306 00f6 C0       		.byte	0xc0
 1307 00f7 00000000 		.4byte	.LFB3
 1308 00fb 50000000 		.4byte	.LFE3-.LFB3
 1309 00ff 01       		.uleb128 0x1
 1310 0100 9C       		.byte	0x9c
 1311 0101 14010000 		.4byte	0x114
 1312 0105 09       		.uleb128 0x9
 1313 0106 AB010000 		.4byte	.LASF20
 1314 010a 01       		.byte	0x1
 1315 010b C2       		.byte	0xc2
 1316 010c 6B000000 		.4byte	0x6b
 1317 0110 02       		.uleb128 0x2
 1318 0111 91       		.byte	0x91
 1319 0112 77       		.sleb128 -9
 1320 0113 00       		.byte	0
 1321 0114 0A       		.uleb128 0xa
 1322 0115 74010000 		.4byte	.LASF21
 1323 0119 01       		.byte	0x1
 1324 011a E3       		.byte	0xe3
 1325 011b 00000000 		.4byte	.LFB4
 1326 011f 0C000000 		.4byte	.LFE4-.LFB4
 1327 0123 01       		.uleb128 0x1
 1328 0124 9C       		.byte	0x9c
 1329 0125 0A       		.uleb128 0xa
 1330 0126 3A030000 		.4byte	.LASF22
 1331 012a 01       		.byte	0x1
 1332 012b FC       		.byte	0xfc
 1333 012c 00000000 		.4byte	.LFB5
 1334 0130 0C000000 		.4byte	.LFE5-.LFB5
 1335 0134 01       		.uleb128 0x1
 1336 0135 9C       		.byte	0x9c
 1337 0136 0B       		.uleb128 0xb
 1338 0137 DA010000 		.4byte	.LASF23
 1339 013b 01       		.byte	0x1
 1340 013c 1501     		.2byte	0x115
 1341 013e 00000000 		.4byte	.LFB6
 1342 0142 0C000000 		.4byte	.LFE6-.LFB6
 1343 0146 01       		.uleb128 0x1
 1344 0147 9C       		.byte	0x9c
 1345 0148 0B       		.uleb128 0xb
 1346 0149 93030000 		.4byte	.LASF24
 1347 014d 01       		.byte	0x1
 1348 014e 2E01     		.2byte	0x12e
 1349 0150 00000000 		.4byte	.LFB7
 1350 0154 0C000000 		.4byte	.LFE7-.LFB7
 1351 0158 01       		.uleb128 0x1
 1352 0159 9C       		.byte	0x9c
 1353 015a 0C       		.uleb128 0xc
 1354 015b 1F020000 		.4byte	.LASF25
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 45


 1355 015f 01       		.byte	0x1
 1356 0160 4801     		.2byte	0x148
 1357 0162 00000000 		.4byte	.LFB8
 1358 0166 20000000 		.4byte	.LFE8-.LFB8
 1359 016a 01       		.uleb128 0x1
 1360 016b 9C       		.byte	0x9c
 1361 016c 80010000 		.4byte	0x180
 1362 0170 0D       		.uleb128 0xd
 1363 0171 F3010000 		.4byte	.LASF27
 1364 0175 01       		.byte	0x1
 1365 0176 4801     		.2byte	0x148
 1366 0178 6B000000 		.4byte	0x6b
 1367 017c 02       		.uleb128 0x2
 1368 017d 91       		.byte	0x91
 1369 017e 77       		.sleb128 -9
 1370 017f 00       		.byte	0
 1371 0180 0C       		.uleb128 0xc
 1372 0181 37020000 		.4byte	.LASF26
 1373 0185 01       		.byte	0x1
 1374 0186 6001     		.2byte	0x160
 1375 0188 00000000 		.4byte	.LFB9
 1376 018c 20000000 		.4byte	.LFE9-.LFB9
 1377 0190 01       		.uleb128 0x1
 1378 0191 9C       		.byte	0x9c
 1379 0192 A6010000 		.4byte	0x1a6
 1380 0196 0D       		.uleb128 0xd
 1381 0197 F3010000 		.4byte	.LASF27
 1382 019b 01       		.byte	0x1
 1383 019c 6001     		.2byte	0x160
 1384 019e 6B000000 		.4byte	0x6b
 1385 01a2 02       		.uleb128 0x2
 1386 01a3 91       		.byte	0x91
 1387 01a4 77       		.sleb128 -9
 1388 01a5 00       		.byte	0
 1389 01a6 0E       		.uleb128 0xe
 1390 01a7 81030000 		.4byte	.LASF29
 1391 01ab 01       		.byte	0x1
 1392 01ac 8201     		.2byte	0x182
 1393 01ae 6B000000 		.4byte	0x6b
 1394 01b2 00000000 		.4byte	.LFB10
 1395 01b6 1C000000 		.4byte	.LFE10-.LFB10
 1396 01ba 01       		.uleb128 0x1
 1397 01bb 9C       		.byte	0x9c
 1398 01bc D0010000 		.4byte	0x1d0
 1399 01c0 0F       		.uleb128 0xf
 1400 01c1 54030000 		.4byte	.LASF28
 1401 01c5 01       		.byte	0x1
 1402 01c6 8401     		.2byte	0x184
 1403 01c8 6B000000 		.4byte	0x6b
 1404 01cc 02       		.uleb128 0x2
 1405 01cd 91       		.byte	0x91
 1406 01ce 77       		.sleb128 -9
 1407 01cf 00       		.byte	0
 1408 01d0 0E       		.uleb128 0xe
 1409 01d1 7D020000 		.4byte	.LASF30
 1410 01d5 01       		.byte	0x1
 1411 01d6 B501     		.2byte	0x1b5
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 46


 1412 01d8 6B000000 		.4byte	0x6b
 1413 01dc 00000000 		.4byte	.LFB11
 1414 01e0 1C000000 		.4byte	.LFE11-.LFB11
 1415 01e4 01       		.uleb128 0x1
 1416 01e5 9C       		.byte	0x9c
 1417 01e6 FA010000 		.4byte	0x1fa
 1418 01ea 0F       		.uleb128 0xf
 1419 01eb 54030000 		.4byte	.LASF28
 1420 01ef 01       		.byte	0x1
 1421 01f0 B701     		.2byte	0x1b7
 1422 01f2 6B000000 		.4byte	0x6b
 1423 01f6 02       		.uleb128 0x2
 1424 01f7 91       		.byte	0x91
 1425 01f8 77       		.sleb128 -9
 1426 01f9 00       		.byte	0
 1427 01fa 0C       		.uleb128 0xc
 1428 01fb 00000000 		.4byte	.LASF31
 1429 01ff 01       		.byte	0x1
 1430 0200 EE01     		.2byte	0x1ee
 1431 0202 00000000 		.4byte	.LFB12
 1432 0206 34000000 		.4byte	.LFE12-.LFB12
 1433 020a 01       		.uleb128 0x1
 1434 020b 9C       		.byte	0x9c
 1435 020c 20020000 		.4byte	0x220
 1436 0210 0D       		.uleb128 0xd
 1437 0211 D3000000 		.4byte	.LASF32
 1438 0215 01       		.byte	0x1
 1439 0216 EE01     		.2byte	0x1ee
 1440 0218 6B000000 		.4byte	0x6b
 1441 021c 02       		.uleb128 0x2
 1442 021d 91       		.byte	0x91
 1443 021e 77       		.sleb128 -9
 1444 021f 00       		.byte	0
 1445 0220 0E       		.uleb128 0xe
 1446 0221 BC010000 		.4byte	.LASF33
 1447 0225 01       		.byte	0x1
 1448 0226 5A02     		.2byte	0x25a
 1449 0228 6B000000 		.4byte	0x6b
 1450 022c 00000000 		.4byte	.LFB13
 1451 0230 1C000000 		.4byte	.LFE13-.LFB13
 1452 0234 01       		.uleb128 0x1
 1453 0235 9C       		.byte	0x9c
 1454 0236 4A020000 		.4byte	0x24a
 1455 023a 0F       		.uleb128 0xf
 1456 023b 25010000 		.4byte	.LASF34
 1457 023f 01       		.byte	0x1
 1458 0240 5C02     		.2byte	0x25c
 1459 0242 6B000000 		.4byte	0x6b
 1460 0246 02       		.uleb128 0x2
 1461 0247 91       		.byte	0x91
 1462 0248 77       		.sleb128 -9
 1463 0249 00       		.byte	0
 1464 024a 0E       		.uleb128 0xe
 1465 024b 0A020000 		.4byte	.LASF35
 1466 024f 01       		.byte	0x1
 1467 0250 9A02     		.2byte	0x29a
 1468 0252 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 47


 1469 0256 00000000 		.4byte	.LFB14
 1470 025a 2C000000 		.4byte	.LFE14-.LFB14
 1471 025e 01       		.uleb128 0x1
 1472 025f 9C       		.byte	0x9c
 1473 0260 74020000 		.4byte	0x274
 1474 0264 0F       		.uleb128 0xf
 1475 0265 55010000 		.4byte	.LASF36
 1476 0269 01       		.byte	0x1
 1477 026a 9C02     		.2byte	0x29c
 1478 026c 6B000000 		.4byte	0x6b
 1479 0270 02       		.uleb128 0x2
 1480 0271 91       		.byte	0x91
 1481 0272 77       		.sleb128 -9
 1482 0273 00       		.byte	0
 1483 0274 0E       		.uleb128 0xe
 1484 0275 5A010000 		.4byte	.LASF37
 1485 0279 01       		.byte	0x1
 1486 027a D702     		.2byte	0x2d7
 1487 027c 6B000000 		.4byte	0x6b
 1488 0280 00000000 		.4byte	.LFB15
 1489 0284 40000000 		.4byte	.LFE15-.LFB15
 1490 0288 01       		.uleb128 0x1
 1491 0289 9C       		.byte	0x9c
 1492 028a 9E020000 		.4byte	0x29e
 1493 028e 0F       		.uleb128 0xf
 1494 028f 55010000 		.4byte	.LASF36
 1495 0293 01       		.byte	0x1
 1496 0294 D902     		.2byte	0x2d9
 1497 0296 6B000000 		.4byte	0x6b
 1498 029a 02       		.uleb128 0x2
 1499 029b 91       		.byte	0x91
 1500 029c 77       		.sleb128 -9
 1501 029d 00       		.byte	0
 1502 029e 0B       		.uleb128 0xb
 1503 029f 42010000 		.4byte	.LASF38
 1504 02a3 01       		.byte	0x1
 1505 02a4 2603     		.2byte	0x326
 1506 02a6 00000000 		.4byte	.LFB16
 1507 02aa 28000000 		.4byte	.LFE16-.LFB16
 1508 02ae 01       		.uleb128 0x1
 1509 02af 9C       		.byte	0x9c
 1510 02b0 10       		.uleb128 0x10
 1511 02b1 E1020000 		.4byte	.LASF39
 1512 02b5 01       		.byte	0x1
 1513 02b6 5D03     		.2byte	0x35d
 1514 02b8 00000000 		.4byte	.LFB17
 1515 02bc 44000000 		.4byte	.LFE17-.LFB17
 1516 02c0 01       		.uleb128 0x1
 1517 02c1 9C       		.byte	0x9c
 1518 02c2 D6020000 		.4byte	0x2d6
 1519 02c6 0F       		.uleb128 0xf
 1520 02c7 AB010000 		.4byte	.LASF20
 1521 02cb 01       		.byte	0x1
 1522 02cc 5F03     		.2byte	0x35f
 1523 02ce 6B000000 		.4byte	0x6b
 1524 02d2 02       		.uleb128 0x2
 1525 02d3 91       		.byte	0x91
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 48


 1526 02d4 77       		.sleb128 -9
 1527 02d5 00       		.byte	0
 1528 02d6 10       		.uleb128 0x10
 1529 02d7 9D010000 		.4byte	.LASF40
 1530 02db 01       		.byte	0x1
 1531 02dc C203     		.2byte	0x3c2
 1532 02de 00000000 		.4byte	.LFB18
 1533 02e2 3A000000 		.4byte	.LFE18-.LFB18
 1534 02e6 01       		.uleb128 0x1
 1535 02e7 9C       		.byte	0x9c
 1536 02e8 1A030000 		.4byte	0x31a
 1537 02ec 0D       		.uleb128 0xd
 1538 02ed F4020000 		.4byte	.LASF41
 1539 02f1 01       		.byte	0x1
 1540 02f2 C203     		.2byte	0x3c2
 1541 02f4 1A030000 		.4byte	0x31a
 1542 02f8 02       		.uleb128 0x2
 1543 02f9 91       		.byte	0x91
 1544 02fa 6C       		.sleb128 -20
 1545 02fb 0D       		.uleb128 0xd
 1546 02fc 73020000 		.4byte	.LASF42
 1547 0300 01       		.byte	0x1
 1548 0301 C203     		.2byte	0x3c2
 1549 0303 6B000000 		.4byte	0x6b
 1550 0307 02       		.uleb128 0x2
 1551 0308 91       		.byte	0x91
 1552 0309 6B       		.sleb128 -21
 1553 030a 0F       		.uleb128 0xf
 1554 030b 8F020000 		.4byte	.LASF43
 1555 030f 01       		.byte	0x1
 1556 0310 C503     		.2byte	0x3c5
 1557 0312 6B000000 		.4byte	0x6b
 1558 0316 02       		.uleb128 0x2
 1559 0317 91       		.byte	0x91
 1560 0318 77       		.sleb128 -9
 1561 0319 00       		.byte	0
 1562 031a 11       		.uleb128 0x11
 1563 031b 04       		.byte	0x4
 1564 031c 20030000 		.4byte	0x320
 1565 0320 12       		.uleb128 0x12
 1566 0321 6B000000 		.4byte	0x6b
 1567 0325 10       		.uleb128 0x10
 1568 0326 C8020000 		.4byte	.LASF44
 1569 032a 01       		.byte	0x1
 1570 032b E303     		.2byte	0x3e3
 1571 032d 00000000 		.4byte	.LFB19
 1572 0331 60000000 		.4byte	.LFE19-.LFB19
 1573 0335 01       		.uleb128 0x1
 1574 0336 9C       		.byte	0x9c
 1575 0337 4B030000 		.4byte	0x34b
 1576 033b 0F       		.uleb128 0xf
 1577 033c AB010000 		.4byte	.LASF20
 1578 0340 01       		.byte	0x1
 1579 0341 E503     		.2byte	0x3e5
 1580 0343 6B000000 		.4byte	0x6b
 1581 0347 02       		.uleb128 0x2
 1582 0348 91       		.byte	0x91
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 49


 1583 0349 77       		.sleb128 -9
 1584 034a 00       		.byte	0
 1585 034b 13       		.uleb128 0x13
 1586 034c 98020000 		.4byte	.LASF45
 1587 0350 01       		.byte	0x1
 1588 0351 1104     		.2byte	0x411
 1589 0353 00000000 		.4byte	.LFB20
 1590 0357 10000000 		.4byte	.LFE20-.LFB20
 1591 035b 01       		.uleb128 0x1
 1592 035c 9C       		.byte	0x9c
 1593 035d 13       		.uleb128 0x13
 1594 035e 2C010000 		.4byte	.LASF46
 1595 0362 01       		.byte	0x1
 1596 0363 2904     		.2byte	0x429
 1597 0365 00000000 		.4byte	.LFB21
 1598 0369 10000000 		.4byte	.LFE21-.LFB21
 1599 036d 01       		.uleb128 0x1
 1600 036e 9C       		.byte	0x9c
 1601 036f 0C       		.uleb128 0xc
 1602 0370 02010000 		.4byte	.LASF47
 1603 0374 01       		.byte	0x1
 1604 0375 4204     		.2byte	0x442
 1605 0377 00000000 		.4byte	.LFB22
 1606 037b 30000000 		.4byte	.LFE22-.LFB22
 1607 037f 01       		.uleb128 0x1
 1608 0380 9C       		.byte	0x9c
 1609 0381 95030000 		.4byte	0x395
 1610 0385 0D       		.uleb128 0xd
 1611 0386 F3010000 		.4byte	.LASF27
 1612 038a 01       		.byte	0x1
 1613 038b 4204     		.2byte	0x442
 1614 038d 6B000000 		.4byte	0x6b
 1615 0391 02       		.uleb128 0x2
 1616 0392 91       		.byte	0x91
 1617 0393 77       		.sleb128 -9
 1618 0394 00       		.byte	0
 1619 0395 0E       		.uleb128 0xe
 1620 0396 FB020000 		.4byte	.LASF48
 1621 039a 01       		.byte	0x1
 1622 039b 6504     		.2byte	0x465
 1623 039d 6B000000 		.4byte	0x6b
 1624 03a1 00000000 		.4byte	.LFB23
 1625 03a5 34000000 		.4byte	.LFE23-.LFB23
 1626 03a9 01       		.uleb128 0x1
 1627 03aa 9C       		.byte	0x9c
 1628 03ab BF030000 		.4byte	0x3bf
 1629 03af 0F       		.uleb128 0xf
 1630 03b0 54030000 		.4byte	.LASF28
 1631 03b4 01       		.byte	0x1
 1632 03b5 6704     		.2byte	0x467
 1633 03b7 6B000000 		.4byte	0x6b
 1634 03bb 02       		.uleb128 0x2
 1635 03bc 91       		.byte	0x91
 1636 03bd 77       		.sleb128 -9
 1637 03be 00       		.byte	0
 1638 03bf 14       		.uleb128 0x14
 1639 03c0 18010000 		.4byte	.LASF49
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 50


 1640 03c4 01       		.byte	0x1
 1641 03c5 22       		.byte	0x22
 1642 03c6 6B000000 		.4byte	0x6b
 1643 03ca 05       		.uleb128 0x5
 1644 03cb 03       		.byte	0x3
 1645 03cc 00000000 		.4byte	SPIM_initVar
 1646 03d0 14       		.uleb128 0x14
 1647 03d1 DA000000 		.4byte	.LASF50
 1648 03d5 01       		.byte	0x1
 1649 03d6 24       		.byte	0x24
 1650 03d7 97000000 		.4byte	0x97
 1651 03db 05       		.uleb128 0x5
 1652 03dc 03       		.byte	0x3
 1653 03dd 00000000 		.4byte	SPIM_swStatusTx
 1654 03e1 14       		.uleb128 0x14
 1655 03e2 FA010000 		.4byte	.LASF51
 1656 03e6 01       		.byte	0x1
 1657 03e7 25       		.byte	0x25
 1658 03e8 97000000 		.4byte	0x97
 1659 03ec 05       		.uleb128 0x5
 1660 03ed 03       		.byte	0x3
 1661 03ee 00000000 		.4byte	SPIM_swStatusRx
 1662 03f2 00       		.byte	0
 1663              		.section	.debug_abbrev,"",%progbits
 1664              	.Ldebug_abbrev0:
 1665 0000 01       		.uleb128 0x1
 1666 0001 11       		.uleb128 0x11
 1667 0002 01       		.byte	0x1
 1668 0003 25       		.uleb128 0x25
 1669 0004 0E       		.uleb128 0xe
 1670 0005 13       		.uleb128 0x13
 1671 0006 0B       		.uleb128 0xb
 1672 0007 03       		.uleb128 0x3
 1673 0008 0E       		.uleb128 0xe
 1674 0009 1B       		.uleb128 0x1b
 1675 000a 0E       		.uleb128 0xe
 1676 000b 55       		.uleb128 0x55
 1677 000c 17       		.uleb128 0x17
 1678 000d 11       		.uleb128 0x11
 1679 000e 01       		.uleb128 0x1
 1680 000f 10       		.uleb128 0x10
 1681 0010 17       		.uleb128 0x17
 1682 0011 00       		.byte	0
 1683 0012 00       		.byte	0
 1684 0013 02       		.uleb128 0x2
 1685 0014 24       		.uleb128 0x24
 1686 0015 00       		.byte	0
 1687 0016 0B       		.uleb128 0xb
 1688 0017 0B       		.uleb128 0xb
 1689 0018 3E       		.uleb128 0x3e
 1690 0019 0B       		.uleb128 0xb
 1691 001a 03       		.uleb128 0x3
 1692 001b 0E       		.uleb128 0xe
 1693 001c 00       		.byte	0
 1694 001d 00       		.byte	0
 1695 001e 03       		.uleb128 0x3
 1696 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 51


 1697 0020 00       		.byte	0
 1698 0021 0B       		.uleb128 0xb
 1699 0022 0B       		.uleb128 0xb
 1700 0023 3E       		.uleb128 0x3e
 1701 0024 0B       		.uleb128 0xb
 1702 0025 03       		.uleb128 0x3
 1703 0026 08       		.uleb128 0x8
 1704 0027 00       		.byte	0
 1705 0028 00       		.byte	0
 1706 0029 04       		.uleb128 0x4
 1707 002a 16       		.uleb128 0x16
 1708 002b 00       		.byte	0
 1709 002c 03       		.uleb128 0x3
 1710 002d 0E       		.uleb128 0xe
 1711 002e 3A       		.uleb128 0x3a
 1712 002f 0B       		.uleb128 0xb
 1713 0030 3B       		.uleb128 0x3b
 1714 0031 0B       		.uleb128 0xb
 1715 0032 49       		.uleb128 0x49
 1716 0033 13       		.uleb128 0x13
 1717 0034 00       		.byte	0
 1718 0035 00       		.byte	0
 1719 0036 05       		.uleb128 0x5
 1720 0037 16       		.uleb128 0x16
 1721 0038 00       		.byte	0
 1722 0039 03       		.uleb128 0x3
 1723 003a 0E       		.uleb128 0xe
 1724 003b 3A       		.uleb128 0x3a
 1725 003c 0B       		.uleb128 0xb
 1726 003d 3B       		.uleb128 0x3b
 1727 003e 05       		.uleb128 0x5
 1728 003f 49       		.uleb128 0x49
 1729 0040 13       		.uleb128 0x13
 1730 0041 00       		.byte	0
 1731 0042 00       		.byte	0
 1732 0043 06       		.uleb128 0x6
 1733 0044 35       		.uleb128 0x35
 1734 0045 00       		.byte	0
 1735 0046 49       		.uleb128 0x49
 1736 0047 13       		.uleb128 0x13
 1737 0048 00       		.byte	0
 1738 0049 00       		.byte	0
 1739 004a 07       		.uleb128 0x7
 1740 004b 2E       		.uleb128 0x2e
 1741 004c 00       		.byte	0
 1742 004d 3F       		.uleb128 0x3f
 1743 004e 19       		.uleb128 0x19
 1744 004f 03       		.uleb128 0x3
 1745 0050 0E       		.uleb128 0xe
 1746 0051 3A       		.uleb128 0x3a
 1747 0052 0B       		.uleb128 0xb
 1748 0053 3B       		.uleb128 0x3b
 1749 0054 0B       		.uleb128 0xb
 1750 0055 27       		.uleb128 0x27
 1751 0056 19       		.uleb128 0x19
 1752 0057 11       		.uleb128 0x11
 1753 0058 01       		.uleb128 0x1
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 52


 1754 0059 12       		.uleb128 0x12
 1755 005a 06       		.uleb128 0x6
 1756 005b 40       		.uleb128 0x40
 1757 005c 18       		.uleb128 0x18
 1758 005d 9642     		.uleb128 0x2116
 1759 005f 19       		.uleb128 0x19
 1760 0060 00       		.byte	0
 1761 0061 00       		.byte	0
 1762 0062 08       		.uleb128 0x8
 1763 0063 2E       		.uleb128 0x2e
 1764 0064 01       		.byte	0x1
 1765 0065 3F       		.uleb128 0x3f
 1766 0066 19       		.uleb128 0x19
 1767 0067 03       		.uleb128 0x3
 1768 0068 0E       		.uleb128 0xe
 1769 0069 3A       		.uleb128 0x3a
 1770 006a 0B       		.uleb128 0xb
 1771 006b 3B       		.uleb128 0x3b
 1772 006c 0B       		.uleb128 0xb
 1773 006d 27       		.uleb128 0x27
 1774 006e 19       		.uleb128 0x19
 1775 006f 11       		.uleb128 0x11
 1776 0070 01       		.uleb128 0x1
 1777 0071 12       		.uleb128 0x12
 1778 0072 06       		.uleb128 0x6
 1779 0073 40       		.uleb128 0x40
 1780 0074 18       		.uleb128 0x18
 1781 0075 9642     		.uleb128 0x2116
 1782 0077 19       		.uleb128 0x19
 1783 0078 01       		.uleb128 0x1
 1784 0079 13       		.uleb128 0x13
 1785 007a 00       		.byte	0
 1786 007b 00       		.byte	0
 1787 007c 09       		.uleb128 0x9
 1788 007d 34       		.uleb128 0x34
 1789 007e 00       		.byte	0
 1790 007f 03       		.uleb128 0x3
 1791 0080 0E       		.uleb128 0xe
 1792 0081 3A       		.uleb128 0x3a
 1793 0082 0B       		.uleb128 0xb
 1794 0083 3B       		.uleb128 0x3b
 1795 0084 0B       		.uleb128 0xb
 1796 0085 49       		.uleb128 0x49
 1797 0086 13       		.uleb128 0x13
 1798 0087 02       		.uleb128 0x2
 1799 0088 18       		.uleb128 0x18
 1800 0089 00       		.byte	0
 1801 008a 00       		.byte	0
 1802 008b 0A       		.uleb128 0xa
 1803 008c 2E       		.uleb128 0x2e
 1804 008d 00       		.byte	0
 1805 008e 3F       		.uleb128 0x3f
 1806 008f 19       		.uleb128 0x19
 1807 0090 03       		.uleb128 0x3
 1808 0091 0E       		.uleb128 0xe
 1809 0092 3A       		.uleb128 0x3a
 1810 0093 0B       		.uleb128 0xb
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 53


 1811 0094 3B       		.uleb128 0x3b
 1812 0095 0B       		.uleb128 0xb
 1813 0096 27       		.uleb128 0x27
 1814 0097 19       		.uleb128 0x19
 1815 0098 11       		.uleb128 0x11
 1816 0099 01       		.uleb128 0x1
 1817 009a 12       		.uleb128 0x12
 1818 009b 06       		.uleb128 0x6
 1819 009c 40       		.uleb128 0x40
 1820 009d 18       		.uleb128 0x18
 1821 009e 9742     		.uleb128 0x2117
 1822 00a0 19       		.uleb128 0x19
 1823 00a1 00       		.byte	0
 1824 00a2 00       		.byte	0
 1825 00a3 0B       		.uleb128 0xb
 1826 00a4 2E       		.uleb128 0x2e
 1827 00a5 00       		.byte	0
 1828 00a6 3F       		.uleb128 0x3f
 1829 00a7 19       		.uleb128 0x19
 1830 00a8 03       		.uleb128 0x3
 1831 00a9 0E       		.uleb128 0xe
 1832 00aa 3A       		.uleb128 0x3a
 1833 00ab 0B       		.uleb128 0xb
 1834 00ac 3B       		.uleb128 0x3b
 1835 00ad 05       		.uleb128 0x5
 1836 00ae 27       		.uleb128 0x27
 1837 00af 19       		.uleb128 0x19
 1838 00b0 11       		.uleb128 0x11
 1839 00b1 01       		.uleb128 0x1
 1840 00b2 12       		.uleb128 0x12
 1841 00b3 06       		.uleb128 0x6
 1842 00b4 40       		.uleb128 0x40
 1843 00b5 18       		.uleb128 0x18
 1844 00b6 9742     		.uleb128 0x2117
 1845 00b8 19       		.uleb128 0x19
 1846 00b9 00       		.byte	0
 1847 00ba 00       		.byte	0
 1848 00bb 0C       		.uleb128 0xc
 1849 00bc 2E       		.uleb128 0x2e
 1850 00bd 01       		.byte	0x1
 1851 00be 3F       		.uleb128 0x3f
 1852 00bf 19       		.uleb128 0x19
 1853 00c0 03       		.uleb128 0x3
 1854 00c1 0E       		.uleb128 0xe
 1855 00c2 3A       		.uleb128 0x3a
 1856 00c3 0B       		.uleb128 0xb
 1857 00c4 3B       		.uleb128 0x3b
 1858 00c5 05       		.uleb128 0x5
 1859 00c6 27       		.uleb128 0x27
 1860 00c7 19       		.uleb128 0x19
 1861 00c8 11       		.uleb128 0x11
 1862 00c9 01       		.uleb128 0x1
 1863 00ca 12       		.uleb128 0x12
 1864 00cb 06       		.uleb128 0x6
 1865 00cc 40       		.uleb128 0x40
 1866 00cd 18       		.uleb128 0x18
 1867 00ce 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 54


 1868 00d0 19       		.uleb128 0x19
 1869 00d1 01       		.uleb128 0x1
 1870 00d2 13       		.uleb128 0x13
 1871 00d3 00       		.byte	0
 1872 00d4 00       		.byte	0
 1873 00d5 0D       		.uleb128 0xd
 1874 00d6 05       		.uleb128 0x5
 1875 00d7 00       		.byte	0
 1876 00d8 03       		.uleb128 0x3
 1877 00d9 0E       		.uleb128 0xe
 1878 00da 3A       		.uleb128 0x3a
 1879 00db 0B       		.uleb128 0xb
 1880 00dc 3B       		.uleb128 0x3b
 1881 00dd 05       		.uleb128 0x5
 1882 00de 49       		.uleb128 0x49
 1883 00df 13       		.uleb128 0x13
 1884 00e0 02       		.uleb128 0x2
 1885 00e1 18       		.uleb128 0x18
 1886 00e2 00       		.byte	0
 1887 00e3 00       		.byte	0
 1888 00e4 0E       		.uleb128 0xe
 1889 00e5 2E       		.uleb128 0x2e
 1890 00e6 01       		.byte	0x1
 1891 00e7 3F       		.uleb128 0x3f
 1892 00e8 19       		.uleb128 0x19
 1893 00e9 03       		.uleb128 0x3
 1894 00ea 0E       		.uleb128 0xe
 1895 00eb 3A       		.uleb128 0x3a
 1896 00ec 0B       		.uleb128 0xb
 1897 00ed 3B       		.uleb128 0x3b
 1898 00ee 05       		.uleb128 0x5
 1899 00ef 27       		.uleb128 0x27
 1900 00f0 19       		.uleb128 0x19
 1901 00f1 49       		.uleb128 0x49
 1902 00f2 13       		.uleb128 0x13
 1903 00f3 11       		.uleb128 0x11
 1904 00f4 01       		.uleb128 0x1
 1905 00f5 12       		.uleb128 0x12
 1906 00f6 06       		.uleb128 0x6
 1907 00f7 40       		.uleb128 0x40
 1908 00f8 18       		.uleb128 0x18
 1909 00f9 9742     		.uleb128 0x2117
 1910 00fb 19       		.uleb128 0x19
 1911 00fc 01       		.uleb128 0x1
 1912 00fd 13       		.uleb128 0x13
 1913 00fe 00       		.byte	0
 1914 00ff 00       		.byte	0
 1915 0100 0F       		.uleb128 0xf
 1916 0101 34       		.uleb128 0x34
 1917 0102 00       		.byte	0
 1918 0103 03       		.uleb128 0x3
 1919 0104 0E       		.uleb128 0xe
 1920 0105 3A       		.uleb128 0x3a
 1921 0106 0B       		.uleb128 0xb
 1922 0107 3B       		.uleb128 0x3b
 1923 0108 05       		.uleb128 0x5
 1924 0109 49       		.uleb128 0x49
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 55


 1925 010a 13       		.uleb128 0x13
 1926 010b 02       		.uleb128 0x2
 1927 010c 18       		.uleb128 0x18
 1928 010d 00       		.byte	0
 1929 010e 00       		.byte	0
 1930 010f 10       		.uleb128 0x10
 1931 0110 2E       		.uleb128 0x2e
 1932 0111 01       		.byte	0x1
 1933 0112 3F       		.uleb128 0x3f
 1934 0113 19       		.uleb128 0x19
 1935 0114 03       		.uleb128 0x3
 1936 0115 0E       		.uleb128 0xe
 1937 0116 3A       		.uleb128 0x3a
 1938 0117 0B       		.uleb128 0xb
 1939 0118 3B       		.uleb128 0x3b
 1940 0119 05       		.uleb128 0x5
 1941 011a 27       		.uleb128 0x27
 1942 011b 19       		.uleb128 0x19
 1943 011c 11       		.uleb128 0x11
 1944 011d 01       		.uleb128 0x1
 1945 011e 12       		.uleb128 0x12
 1946 011f 06       		.uleb128 0x6
 1947 0120 40       		.uleb128 0x40
 1948 0121 18       		.uleb128 0x18
 1949 0122 9642     		.uleb128 0x2116
 1950 0124 19       		.uleb128 0x19
 1951 0125 01       		.uleb128 0x1
 1952 0126 13       		.uleb128 0x13
 1953 0127 00       		.byte	0
 1954 0128 00       		.byte	0
 1955 0129 11       		.uleb128 0x11
 1956 012a 0F       		.uleb128 0xf
 1957 012b 00       		.byte	0
 1958 012c 0B       		.uleb128 0xb
 1959 012d 0B       		.uleb128 0xb
 1960 012e 49       		.uleb128 0x49
 1961 012f 13       		.uleb128 0x13
 1962 0130 00       		.byte	0
 1963 0131 00       		.byte	0
 1964 0132 12       		.uleb128 0x12
 1965 0133 26       		.uleb128 0x26
 1966 0134 00       		.byte	0
 1967 0135 49       		.uleb128 0x49
 1968 0136 13       		.uleb128 0x13
 1969 0137 00       		.byte	0
 1970 0138 00       		.byte	0
 1971 0139 13       		.uleb128 0x13
 1972 013a 2E       		.uleb128 0x2e
 1973 013b 00       		.byte	0
 1974 013c 3F       		.uleb128 0x3f
 1975 013d 19       		.uleb128 0x19
 1976 013e 03       		.uleb128 0x3
 1977 013f 0E       		.uleb128 0xe
 1978 0140 3A       		.uleb128 0x3a
 1979 0141 0B       		.uleb128 0xb
 1980 0142 3B       		.uleb128 0x3b
 1981 0143 05       		.uleb128 0x5
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 56


 1982 0144 27       		.uleb128 0x27
 1983 0145 19       		.uleb128 0x19
 1984 0146 11       		.uleb128 0x11
 1985 0147 01       		.uleb128 0x1
 1986 0148 12       		.uleb128 0x12
 1987 0149 06       		.uleb128 0x6
 1988 014a 40       		.uleb128 0x40
 1989 014b 18       		.uleb128 0x18
 1990 014c 9642     		.uleb128 0x2116
 1991 014e 19       		.uleb128 0x19
 1992 014f 00       		.byte	0
 1993 0150 00       		.byte	0
 1994 0151 14       		.uleb128 0x14
 1995 0152 34       		.uleb128 0x34
 1996 0153 00       		.byte	0
 1997 0154 03       		.uleb128 0x3
 1998 0155 0E       		.uleb128 0xe
 1999 0156 3A       		.uleb128 0x3a
 2000 0157 0B       		.uleb128 0xb
 2001 0158 3B       		.uleb128 0x3b
 2002 0159 0B       		.uleb128 0xb
 2003 015a 49       		.uleb128 0x49
 2004 015b 13       		.uleb128 0x13
 2005 015c 3F       		.uleb128 0x3f
 2006 015d 19       		.uleb128 0x19
 2007 015e 02       		.uleb128 0x2
 2008 015f 18       		.uleb128 0x18
 2009 0160 00       		.byte	0
 2010 0161 00       		.byte	0
 2011 0162 00       		.byte	0
 2012              		.section	.debug_aranges,"",%progbits
 2013 0000 D4000000 		.4byte	0xd4
 2014 0004 0200     		.2byte	0x2
 2015 0006 00000000 		.4byte	.Ldebug_info0
 2016 000a 04       		.byte	0x4
 2017 000b 00       		.byte	0
 2018 000c 0000     		.2byte	0
 2019 000e 0000     		.2byte	0
 2020 0010 00000000 		.4byte	.LFB0
 2021 0014 34000000 		.4byte	.LFE0-.LFB0
 2022 0018 00000000 		.4byte	.LFB1
 2023 001c 64000000 		.4byte	.LFE1-.LFB1
 2024 0020 00000000 		.4byte	.LFB2
 2025 0024 24000000 		.4byte	.LFE2-.LFB2
 2026 0028 00000000 		.4byte	.LFB3
 2027 002c 50000000 		.4byte	.LFE3-.LFB3
 2028 0030 00000000 		.4byte	.LFB4
 2029 0034 0C000000 		.4byte	.LFE4-.LFB4
 2030 0038 00000000 		.4byte	.LFB5
 2031 003c 0C000000 		.4byte	.LFE5-.LFB5
 2032 0040 00000000 		.4byte	.LFB6
 2033 0044 0C000000 		.4byte	.LFE6-.LFB6
 2034 0048 00000000 		.4byte	.LFB7
 2035 004c 0C000000 		.4byte	.LFE7-.LFB7
 2036 0050 00000000 		.4byte	.LFB8
 2037 0054 20000000 		.4byte	.LFE8-.LFB8
 2038 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 57


 2039 005c 20000000 		.4byte	.LFE9-.LFB9
 2040 0060 00000000 		.4byte	.LFB10
 2041 0064 1C000000 		.4byte	.LFE10-.LFB10
 2042 0068 00000000 		.4byte	.LFB11
 2043 006c 1C000000 		.4byte	.LFE11-.LFB11
 2044 0070 00000000 		.4byte	.LFB12
 2045 0074 34000000 		.4byte	.LFE12-.LFB12
 2046 0078 00000000 		.4byte	.LFB13
 2047 007c 1C000000 		.4byte	.LFE13-.LFB13
 2048 0080 00000000 		.4byte	.LFB14
 2049 0084 2C000000 		.4byte	.LFE14-.LFB14
 2050 0088 00000000 		.4byte	.LFB15
 2051 008c 40000000 		.4byte	.LFE15-.LFB15
 2052 0090 00000000 		.4byte	.LFB16
 2053 0094 28000000 		.4byte	.LFE16-.LFB16
 2054 0098 00000000 		.4byte	.LFB17
 2055 009c 44000000 		.4byte	.LFE17-.LFB17
 2056 00a0 00000000 		.4byte	.LFB18
 2057 00a4 3A000000 		.4byte	.LFE18-.LFB18
 2058 00a8 00000000 		.4byte	.LFB19
 2059 00ac 60000000 		.4byte	.LFE19-.LFB19
 2060 00b0 00000000 		.4byte	.LFB20
 2061 00b4 10000000 		.4byte	.LFE20-.LFB20
 2062 00b8 00000000 		.4byte	.LFB21
 2063 00bc 10000000 		.4byte	.LFE21-.LFB21
 2064 00c0 00000000 		.4byte	.LFB22
 2065 00c4 30000000 		.4byte	.LFE22-.LFB22
 2066 00c8 00000000 		.4byte	.LFB23
 2067 00cc 34000000 		.4byte	.LFE23-.LFB23
 2068 00d0 00000000 		.4byte	0
 2069 00d4 00000000 		.4byte	0
 2070              		.section	.debug_ranges,"",%progbits
 2071              	.Ldebug_ranges0:
 2072 0000 00000000 		.4byte	.LFB0
 2073 0004 34000000 		.4byte	.LFE0
 2074 0008 00000000 		.4byte	.LFB1
 2075 000c 64000000 		.4byte	.LFE1
 2076 0010 00000000 		.4byte	.LFB2
 2077 0014 24000000 		.4byte	.LFE2
 2078 0018 00000000 		.4byte	.LFB3
 2079 001c 50000000 		.4byte	.LFE3
 2080 0020 00000000 		.4byte	.LFB4
 2081 0024 0C000000 		.4byte	.LFE4
 2082 0028 00000000 		.4byte	.LFB5
 2083 002c 0C000000 		.4byte	.LFE5
 2084 0030 00000000 		.4byte	.LFB6
 2085 0034 0C000000 		.4byte	.LFE6
 2086 0038 00000000 		.4byte	.LFB7
 2087 003c 0C000000 		.4byte	.LFE7
 2088 0040 00000000 		.4byte	.LFB8
 2089 0044 20000000 		.4byte	.LFE8
 2090 0048 00000000 		.4byte	.LFB9
 2091 004c 20000000 		.4byte	.LFE9
 2092 0050 00000000 		.4byte	.LFB10
 2093 0054 1C000000 		.4byte	.LFE10
 2094 0058 00000000 		.4byte	.LFB11
 2095 005c 1C000000 		.4byte	.LFE11
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 58


 2096 0060 00000000 		.4byte	.LFB12
 2097 0064 34000000 		.4byte	.LFE12
 2098 0068 00000000 		.4byte	.LFB13
 2099 006c 1C000000 		.4byte	.LFE13
 2100 0070 00000000 		.4byte	.LFB14
 2101 0074 2C000000 		.4byte	.LFE14
 2102 0078 00000000 		.4byte	.LFB15
 2103 007c 40000000 		.4byte	.LFE15
 2104 0080 00000000 		.4byte	.LFB16
 2105 0084 28000000 		.4byte	.LFE16
 2106 0088 00000000 		.4byte	.LFB17
 2107 008c 44000000 		.4byte	.LFE17
 2108 0090 00000000 		.4byte	.LFB18
 2109 0094 3A000000 		.4byte	.LFE18
 2110 0098 00000000 		.4byte	.LFB19
 2111 009c 60000000 		.4byte	.LFE19
 2112 00a0 00000000 		.4byte	.LFB20
 2113 00a4 10000000 		.4byte	.LFE20
 2114 00a8 00000000 		.4byte	.LFB21
 2115 00ac 10000000 		.4byte	.LFE21
 2116 00b0 00000000 		.4byte	.LFB22
 2117 00b4 30000000 		.4byte	.LFE22
 2118 00b8 00000000 		.4byte	.LFB23
 2119 00bc 34000000 		.4byte	.LFE23
 2120 00c0 00000000 		.4byte	0
 2121 00c4 00000000 		.4byte	0
 2122              		.section	.debug_line,"",%progbits
 2123              	.Ldebug_line0:
 2124 0000 5C020000 		.section	.debug_str,"MS",%progbits,1
 2124      02004100 
 2124      00000201 
 2124      FB0E0D00 
 2124      01010101 
 2125              	.LASF31:
 2126 0000 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2126      5F577269 
 2126      74655478 
 2126      44617461 
 2126      00
 2127              	.LASF52:
 2128 0011 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2128      43313120 
 2128      352E342E 
 2128      31203230 
 2128      31363036 
 2129 0044 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2129      20726576 
 2129      6973696F 
 2129      6E203233 
 2129      37373135 
 2130 0077 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2130      66756E63 
 2130      74696F6E 
 2130      2D736563 
 2130      74696F6E 
 2131              	.LASF18:
 2132 009f 5350494D 		.ascii	"SPIM_Enable\000"
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 59


 2132      5F456E61 
 2132      626C6500 
 2133              	.LASF19:
 2134 00ab 5350494D 		.ascii	"SPIM_Stop\000"
 2134      5F53746F 
 2134      7000
 2135              	.LASF53:
 2136 00b5 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIM.c\000"
 2136      72617465 
 2136      645F536F 
 2136      75726365 
 2136      5C50536F 
 2137              	.LASF32:
 2138 00d3 74784461 		.ascii	"txData\000"
 2138      746100
 2139              	.LASF50:
 2140 00da 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2140      5F737753 
 2140      74617475 
 2140      73547800 
 2141              	.LASF3:
 2142 00ea 73686F72 		.ascii	"short unsigned int\000"
 2142      7420756E 
 2142      7369676E 
 2142      65642069 
 2142      6E7400
 2143              	.LASF11:
 2144 00fd 63686172 		.ascii	"char\000"
 2144      00
 2145              	.LASF47:
 2146 0102 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2146      5F536574 
 2146      496E7465 
 2146      72727570 
 2146      744D6F64 
 2147              	.LASF49:
 2148 0118 5350494D 		.ascii	"SPIM_initVar\000"
 2148      5F696E69 
 2148      74566172 
 2148      00
 2149              	.LASF34:
 2150 0125 72784461 		.ascii	"rxData\000"
 2150      746100
 2151              	.LASF46:
 2152 012c 5350494D 		.ascii	"SPIM_DisableInt\000"
 2152      5F446973 
 2152      61626C65 
 2152      496E7400 
 2153              	.LASF9:
 2154 013c 666C6F61 		.ascii	"float\000"
 2154      7400
 2155              	.LASF38:
 2156 0142 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2156      5F436C65 
 2156      61725278 
 2156      42756666 
 2156      657200
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 60


 2157              	.LASF36:
 2158 0155 73697A65 		.ascii	"size\000"
 2158      00
 2159              	.LASF37:
 2160 015a 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2160      5F476574 
 2160      54784275 
 2160      66666572 
 2160      53697A65 
 2161              	.LASF13:
 2162 016f 72656738 		.ascii	"reg8\000"
 2162      00
 2163              	.LASF21:
 2164 0174 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2164      5F456E61 
 2164      626C6554 
 2164      78496E74 
 2164      00
 2165              	.LASF5:
 2166 0185 6C6F6E67 		.ascii	"long unsigned int\000"
 2166      20756E73 
 2166      69676E65 
 2166      6420696E 
 2166      7400
 2167              	.LASF12:
 2168 0197 75696E74 		.ascii	"uint8\000"
 2168      3800
 2169              	.LASF40:
 2170 019d 5350494D 		.ascii	"SPIM_PutArray\000"
 2170      5F507574 
 2170      41727261 
 2170      7900
 2171              	.LASF20:
 2172 01ab 656E6162 		.ascii	"enableInterrupts\000"
 2172      6C65496E 
 2172      74657272 
 2172      75707473 
 2172      00
 2173              	.LASF33:
 2174 01bc 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2174      5F526561 
 2174      64527844 
 2174      61746100 
 2175              	.LASF1:
 2176 01cc 756E7369 		.ascii	"unsigned char\000"
 2176      676E6564 
 2176      20636861 
 2176      7200
 2177              	.LASF23:
 2178 01da 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2178      5F446973 
 2178      61626C65 
 2178      5478496E 
 2178      7400
 2179              	.LASF10:
 2180 01ec 646F7562 		.ascii	"double\000"
 2180      6C6500
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 61


 2181              	.LASF27:
 2182 01f3 696E7453 		.ascii	"intSrc\000"
 2182      726300
 2183              	.LASF51:
 2184 01fa 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2184      5F737753 
 2184      74617475 
 2184      73527800 
 2185              	.LASF35:
 2186 020a 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2186      5F476574 
 2186      52784275 
 2186      66666572 
 2186      53697A65 
 2187              	.LASF25:
 2188 021f 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2188      5F536574 
 2188      5478496E 
 2188      74657272 
 2188      7570744D 
 2189              	.LASF26:
 2190 0237 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2190      5F536574 
 2190      5278496E 
 2190      74657272 
 2190      7570744D 
 2191              	.LASF8:
 2192 024f 756E7369 		.ascii	"unsigned int\000"
 2192      676E6564 
 2192      20696E74 
 2192      00
 2193              	.LASF7:
 2194 025c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2194      206C6F6E 
 2194      6720756E 
 2194      7369676E 
 2194      65642069 
 2195              	.LASF42:
 2196 0273 62797465 		.ascii	"byteCount\000"
 2196      436F756E 
 2196      7400
 2197              	.LASF30:
 2198 027d 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2198      5F526561 
 2198      64527853 
 2198      74617475 
 2198      7300
 2199              	.LASF43:
 2200 028f 62756649 		.ascii	"bufIndex\000"
 2200      6E646578 
 2200      00
 2201              	.LASF45:
 2202 0298 5350494D 		.ascii	"SPIM_EnableInt\000"
 2202      5F456E61 
 2202      626C6549 
 2202      6E7400
 2203              	.LASF15:
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 62


 2204 02a7 73697A65 		.ascii	"sizetype\000"
 2204      74797065 
 2204      00
 2205              	.LASF6:
 2206 02b0 6C6F6E67 		.ascii	"long long int\000"
 2206      206C6F6E 
 2206      6720696E 
 2206      7400
 2207              	.LASF16:
 2208 02be 5350494D 		.ascii	"SPIM_Init\000"
 2208      5F496E69 
 2208      7400
 2209              	.LASF44:
 2210 02c8 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2210      5F436C65 
 2210      61724649 
 2210      464F00
 2211              	.LASF2:
 2212 02d7 73686F72 		.ascii	"short int\000"
 2212      7420696E 
 2212      7400
 2213              	.LASF39:
 2214 02e1 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2214      5F436C65 
 2214      61725478 
 2214      42756666 
 2214      657200
 2215              	.LASF41:
 2216 02f4 62756666 		.ascii	"buffer\000"
 2216      657200
 2217              	.LASF48:
 2218 02fb 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2218      5F526561 
 2218      64537461 
 2218      74757300 
 2219              	.LASF54:
 2220 030b 443A5C44 		.ascii	"D:\\Documents\\DPEA_Projects\\RpiMIB\\Start1.cydsn\000"
 2220      6F63756D 
 2220      656E7473 
 2220      5C445045 
 2220      415F5072 
 2221              	.LASF22:
 2222 033a 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2222      5F456E61 
 2222      626C6552 
 2222      78496E74 
 2222      00
 2223              	.LASF4:
 2224 034b 6C6F6E67 		.ascii	"long int\000"
 2224      20696E74 
 2224      00
 2225              	.LASF28:
 2226 0354 746D7053 		.ascii	"tmpStatus\000"
 2226      74617475 
 2226      7300
 2227              	.LASF14:
 2228 035e 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\Joe\AppData\Local\Temp\ccUSVaVa.s 			page 63


 2228      20646F75 
 2228      626C6500 
 2229              	.LASF0:
 2230 036a 7369676E 		.ascii	"signed char\000"
 2230      65642063 
 2230      68617200 
 2231              	.LASF17:
 2232 0376 5350494D 		.ascii	"SPIM_Start\000"
 2232      5F537461 
 2232      727400
 2233              	.LASF29:
 2234 0381 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2234      5F526561 
 2234      64547853 
 2234      74617475 
 2234      7300
 2235              	.LASF24:
 2236 0393 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2236      5F446973 
 2236      61626C65 
 2236      5278496E 
 2236      7400
 2237              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
